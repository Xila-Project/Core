name: Check rust code

on:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  rust-checks:
    name: Rust checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - linux
    #          - esp32
    #          - esp32s3

    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v4

      - name: Setup | Enable cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.target }}"

      - name: Setup | Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          target: wasm32-wasip1, wasm32-unknown-unknown

      - name: Setup | Cargo binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Setup | Install cargo-taplo
        run: cargo binstall taplo --no-confirm

      - name: Setup | Rust esp xtensa toolchain
        if: matrix.target == 'esp32' || matrix.target == 'esp32s3'
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32,esp32s3
          ldproxy: true

      - name: Setup | Install necessary dependencies
        run: sudo apt update && sudo apt install -y gcc-multilib clang-format

      - name: Check | Formatting (TOML)
        run: taplo fmt --check .

      - name: Check | Formatting (Rust)
        run: cargo fmt --all -- --check

      - name: Check | Clippy
        run: cargo clippy --all-features --workspace -- -D warnings

      - name: Check | Documentation
        run: RUSTDOCFLAGS="--deny warnings" cargo doc --all-features

      - name: Run | Tests
        run: cargo test ${{ matrix.target }} --all
