processing crate: build_script_Build, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/Build.rs
processing crate: Virtual_machine_test_2, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/Tests/Test_2.rs
processing crate: Virtual_machine_test, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/Tests/Test.rs
processing crate: Integration, module: /home/alix_anneraud/Git/Xila/Core/Modules/Time/Tests/Integration.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/Tests/Graphics.rs
processing crate: build_script_Main, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/WASM/Build/Main.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 13 }: Module `Generator` should have snake_case name, e.g. `generator`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 8 } to LineCol { line: 15, col: 13 }: Variable `Input` should have snake_case name, e.g. `input`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 12 } to LineCol { line: 18, col: 19 }: Variable `Context` should have snake_case name, e.g. `context`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 8 } to LineCol { line: 26, col: 21 }: Variable `Out_directory` should have snake_case name, e.g. `out_directory`
processing crate: build_script_Main, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/WASM/Build/Generator.rs
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 7 } to LineCol { line: 11, col: 31 }: Function `Convert_fundamental_type` should have snake_case name, e.g. `convert_fundamental_type`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 32 } to LineCol { line: 11, col: 36 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 7 } to LineCol { line: 35, col: 19 }: Function `Convert_type` should have snake_case name, e.g. `convert_type`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 20 } to LineCol { line: 35, col: 24 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 8 } to LineCol { line: 38, col: 12 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 8 } to LineCol { line: 44, col: 12 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 8 } to LineCol { line: 50, col: 12 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 3 } to LineCol { line: 57, col: 30 }: Function `Generate_function_signature` should have snake_case name, e.g. `generate_function_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 31 } to LineCol { line: 57, col: 40 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 8 } to LineCol { line: 60, col: 14 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 12 } to LineCol { line: 62, col: 18 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 12 } to LineCol { line: 64, col: 18 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 31 } to LineCol { line: 76, col: 35 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 3 } to LineCol { line: 84, col: 33 }: Function `Generate_function_declarations` should have snake_case name, e.g. `generate_function_declarations`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 34 } to LineCol { line: 84, col: 44 }: Parameter `Signatures` should have snake_case name, e.g. `signatures`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 8 } to LineCol { line: 90, col: 17 }: Variable `Functions` should have snake_case name, e.g. `functions`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 3 } to LineCol { line: 94, col: 24 }: Function `Generate_opaque_types` should have snake_case name, e.g. `generate_opaque_types`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 25 } to LineCol { line: 94, col: 35 }: Parameter `Structures` should have snake_case name, e.g. `structures`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 17 } to LineCol { line: 97, col: 21 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 3 } to LineCol { line: 109, col: 25 }: Function `Generate_graphics_call` should have snake_case name, e.g. `generate_graphics_call`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 26 } to LineCol { line: 109, col: 35 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 112, col: 8 } to LineCol { line: 112, col: 14 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 12 } to LineCol { line: 114, col: 18 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 116, col: 12 } to LineCol { line: 116, col: 18 }: Variable `Inputs` should have snake_case name, e.g. `inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 16 } to LineCol { line: 134, col: 20 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 136, col: 12 } to LineCol { line: 136, col: 20 }: Variable `Receiver` should have snake_case name, e.g. `receiver`
Warning RustcLint("non_snake_case") from LineCol { line: 140, col: 8 } to LineCol { line: 140, col: 29 }: Variable `Real_arguments_length` should have snake_case name, e.g. `real_arguments_length`
Warning RustcLint("non_snake_case") from LineCol { line: 146, col: 8 } to LineCol { line: 146, col: 19 }: Variable `Declaration` should have snake_case name, e.g. `declaration`
Warning RustcLint("non_snake_case") from LineCol { line: 151, col: 16 } to LineCol { line: 151, col: 27 }: Variable `Declaration` should have snake_case name, e.g. `declaration`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 7 } to LineCol { line: 169, col: 21 }: Function `Generate_types` should have snake_case name, e.g. `generate_types`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 22 } to LineCol { line: 169, col: 36 }: Parameter `LVGL_functions` should have snake_case name, e.g. `lvgl_functions`
Warning RustcLint("non_snake_case") from LineCol { line: 171, col: 8 } to LineCol { line: 171, col: 16 }: Variable `Includes` should have snake_case name, e.g. `includes`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 8 } to LineCol { line: 173, col: 23 }: Variable `Structures_name` should have snake_case name, e.g. `structures_name`
Warning RustcLint("non_snake_case") from LineCol { line: 179, col: 8 } to LineCol { line: 179, col: 20 }: Variable `Opaque_types` should have snake_case name, e.g. `opaque_types`
Warning RustcLint("non_snake_case") from LineCol { line: 181, col: 8 } to LineCol { line: 181, col: 13 }: Variable `Types` should have snake_case name, e.g. `types`
Warning RustcLint("non_snake_case") from LineCol { line: 186, col: 7 } to LineCol { line: 186, col: 22 }: Function `Generate_header` should have snake_case name, e.g. `generate_header`
Warning RustcLint("non_snake_case") from LineCol { line: 186, col: 23 } to LineCol { line: 186, col: 34 }: Parameter `Output_file` should have snake_case name, e.g. `output_file`
Warning RustcLint("non_snake_case") from LineCol { line: 186, col: 47 } to LineCol { line: 186, col: 61 }: Parameter `LVGL_functions` should have snake_case name, e.g. `lvgl_functions`
Warning RustcLint("non_snake_case") from LineCol { line: 206, col: 8 } to LineCol { line: 206, col: 17 }: Variable `Functions` should have snake_case name, e.g. `functions`
Warning RustcLint("non_snake_case") from LineCol { line: 226, col: 7 } to LineCol { line: 226, col: 20 }: Function `Get_type_name` should have snake_case name, e.g. `get_type_name`
Warning RustcLint("non_snake_case") from LineCol { line: 226, col: 21 } to LineCol { line: 226, col: 25 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 230, col: 7 } to LineCol { line: 230, col: 24 }: Function `Get_function_name` should have snake_case name, e.g. `get_function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 230, col: 25 } to LineCol { line: 230, col: 38 }: Parameter `Function_name` should have snake_case name, e.g. `function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 7 } to LineCol { line: 234, col: 25 }: Function `Get_enumerate_item` should have snake_case name, e.g. `get_enumerate_item`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 26 } to LineCol { line: 234, col: 30 }: Parameter `Item` should have snake_case name, e.g. `item`
Warning RustcLint("non_snake_case") from LineCol { line: 238, col: 7 } to LineCol { line: 238, col: 32 }: Function `Generate_code_enumeration` should have snake_case name, e.g. `generate_code_enumeration`
Warning RustcLint("non_snake_case") from LineCol { line: 238, col: 33 } to LineCol { line: 238, col: 43 }: Parameter `Signatures` should have snake_case name, e.g. `signatures`
Warning RustcLint("non_snake_case") from LineCol { line: 243, col: 8 } to LineCol { line: 243, col: 22 }: Variable `Function_calls` should have snake_case name, e.g. `function_calls`
Warning RustcLint("non_snake_case") from LineCol { line: 253, col: 7 } to LineCol { line: 253, col: 37 }: Function `Generate_C_function_definition` should have snake_case name, e.g. `generate_c_function_definition`
Warning RustcLint("non_snake_case") from LineCol { line: 253, col: 38 } to LineCol { line: 253, col: 47 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 256, col: 8 } to LineCol { line: 256, col: 21 }: Variable `Graphics_call` should have snake_case name, e.g. `graphics_call`
Warning RustcLint("non_snake_case") from LineCol { line: 261, col: 7 } to LineCol { line: 261, col: 22 }: Function `Generate_source` should have snake_case name, e.g. `generate_source`
Warning RustcLint("non_snake_case") from LineCol { line: 261, col: 23 } to LineCol { line: 261, col: 34 }: Parameter `Output_file` should have snake_case name, e.g. `output_file`
Warning RustcLint("non_snake_case") from LineCol { line: 261, col: 47 } to LineCol { line: 261, col: 54 }: Parameter `Context` should have snake_case name, e.g. `context`
Warning RustcLint("non_snake_case") from LineCol { line: 270, col: 8 } to LineCol { line: 270, col: 15 }: Variable `Prelude` should have snake_case name, e.g. `prelude`
Warning RustcLint("non_snake_case") from LineCol { line: 276, col: 8 } to LineCol { line: 276, col: 22 }: Variable `Graphics_calls` should have snake_case name, e.g. `graphics_calls`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 7 } to LineCol { line: 286, col: 15 }: Function `Generate` should have snake_case name, e.g. `generate`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 16 } to LineCol { line: 286, col: 27 }: Parameter `Output_path` should have snake_case name, e.g. `output_path`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 36 } to LineCol { line: 286, col: 50 }: Parameter `LVGL_functions` should have snake_case name, e.g. `lvgl_functions`
Warning RustcLint("non_snake_case") from LineCol { line: 290, col: 12 } to LineCol { line: 290, col: 23 }: Variable `Header_file` should have snake_case name, e.g. `header_file`
processing crate: WASM_bindings, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/WASM/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 4, col: 0 } to LineCol { line: 5, col: 51 }: code is inactive due to #[cfg] directives: target_arch = "wasm32" is disabled
processing crate: build_script_Main, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Host/Build/Main.rs
processing crate: build_script_Main, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Host/Build/generator.rs
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 34 } to LineCol { line: 90, col: 40 }: Parameter `Return` should have snake_case name, e.g. `r#return`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 19 } to LineCol { line: 153, col: 24 }: Parameter `Index` should have snake_case name, e.g. `index`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 33 } to LineCol { line: 153, col: 41 }: Parameter `Argument` should have snake_case name, e.g. `argument`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 26 } to LineCol { line: 166, col: 34 }: Parameter `Argument` should have snake_case name, e.g. `argument`
Warning RustcLint("non_snake_case") from LineCol { line: 301, col: 16 } to LineCol { line: 301, col: 27 }: Parameter `Output_path` should have snake_case name, e.g. `output_path`
Warning RustcLint("non_snake_case") from LineCol { line: 301, col: 36 } to LineCol { line: 301, col: 43 }: Parameter `Context` should have snake_case name, e.g. `context`
Warning RustcLint("non_snake_case") from LineCol { line: 326, col: 18 } to LineCol { line: 326, col: 23 }: Parameter `Error` should have snake_case name, e.g. `error`
processing crate: Target, module: /home/alix_anneraud/Git/Xila/Core/Modules/Target/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 16 }: Module `Architecture` should have snake_case name, e.g. `architecture`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 10 }: Module `Family` should have snake_case name, e.g. `family`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 20 }: Module `Operating_system` should have snake_case name, e.g. `operating_system`
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 10 }: Module `Vendor` should have snake_case name, e.g. `vendor`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 11 } to LineCol { line: 27, col: 31 }: Function `Get_operating_system` should have snake_case name, e.g. `get_operating_system`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 11 } to LineCol { line: 31, col: 21 }: Function `Get_family` should have snake_case name, e.g. `get_family`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 11 } to LineCol { line: 35, col: 22 }: Function `Get_current` should have snake_case name, e.g. `get_current`
processing crate: Target, module: /home/alix_anneraud/Git/Xila/Core/Modules/Target/src/Vendor.rs
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 11 } to LineCol { line: 13, col: 18 }: Function `Get_raw` should have snake_case name, e.g. `get_raw`
processing crate: Target, module: /home/alix_anneraud/Git/Xila/Core/Modules/Target/src/Operating_system.rs
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 11 } to LineCol { line: 16, col: 18 }: Function `Get_raw` should have snake_case name, e.g. `get_raw`
processing crate: Target, module: /home/alix_anneraud/Git/Xila/Core/Modules/Target/src/Family.rs
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 11 } to LineCol { line: 14, col: 18 }: Function `Get_raw` should have snake_case name, e.g. `get_raw`
processing crate: Target, module: /home/alix_anneraud/Git/Xila/Core/Modules/Target/src/Architecture.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 11 } to LineCol { line: 19, col: 18 }: Function `Get_raw` should have snake_case name, e.g. `get_raw`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 8 } to LineCol { line: 3, col: 18 }: Module `Additional` should have snake_case name, e.g. `additional`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 8 } to LineCol { line: 4, col: 15 }: Module `Context` should have snake_case name, e.g. `context`
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 8 } to LineCol { line: 5, col: 19 }: Module `Enumeration` should have snake_case name, e.g. `enumeration`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 8 } to LineCol { line: 6, col: 14 }: Module `Format` should have snake_case name, e.g. `format`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 8 } to LineCol { line: 7, col: 16 }: Module `Function` should have snake_case name, e.g. `function`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 8 } to LineCol { line: 8, col: 17 }: Module `Type_tree` should have snake_case name, e.g. `type_tree`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Type_tree.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 29 } to LineCol { line: 19, col: 33 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 43 } to LineCol { line: 19, col: 48 }: Parameter `Alias` should have snake_case name, e.g. `alias`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 11 } to LineCol { line: 23, col: 18 }: Function `Resolve` should have snake_case name, e.g. `resolve`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 26 } to LineCol { line: 23, col: 30 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 20 } to LineCol { line: 26, col: 25 }: Variable `Alias` should have snake_case name, e.g. `alias`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Function.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 7 } to LineCol { line: 3, col: 19 }: Function `Split_inputs` should have snake_case name, e.g. `split_inputs`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 19 } to LineCol { line: 8, col: 27 }: Parameter `Argument` should have snake_case name, e.g. `argument`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 32 } to LineCol { line: 9, col: 39 }: Variable `Pattern` should have snake_case name, e.g. `pattern`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Format.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 7 } to LineCol { line: 2, col: 18 }: Function `Format_rust` should have snake_case name, e.g. `format_rust`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 19 } to LineCol { line: 2, col: 28 }: Parameter `File_path` should have snake_case name, e.g. `file_path`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 7 } to LineCol { line: 15, col: 15 }: Function `Format_C` should have snake_case name, e.g. `format_c`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 16 } to LineCol { line: 15, col: 25 }: Parameter `File_path` should have snake_case name, e.g. `file_path`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 7 } to LineCol { line: 31, col: 24 }: Function `Format_identifier` should have snake_case name, e.g. `format_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 25 } to LineCol { line: 31, col: 31 }: Parameter `Prefix` should have snake_case name, e.g. `prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 39 } to LineCol { line: 31, col: 52 }: Parameter `Function_name` should have snake_case name, e.g. `function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 8 } to LineCol { line: 33, col: 21 }: Variable `Function_name` should have snake_case name, e.g. `function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 8 } to LineCol { line: 39, col: 21 }: Variable `Function_name` should have snake_case name, e.g. `function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 8 } to LineCol { line: 46, col: 21 }: Variable `Function_name` should have snake_case name, e.g. `function_name`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 46 } to LineCol { line: 48, col: 49 }: Variable `Old` should have snake_case name, e.g. `old`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Enumeration.rs
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 7 } to LineCol { line: 4, col: 20 }: Function `Generate_code` should have snake_case name, e.g. `generate_code`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 21 } to LineCol { line: 4, col: 31 }: Parameter `Signatures` should have snake_case name, e.g. `signatures`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 8 } to LineCol { line: 9, col: 16 }: Variable `Variants` should have snake_case name, e.g. `variants`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 17 } to LineCol { line: 24, col: 25 }: Variable `Variants` should have snake_case name, e.g. `variants`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 17 } to LineCol { line: 24, col: 25 }: Variable `Variants` should have snake_case name, e.g. `variants`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Context.rs
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 45 } to LineCol { line: 17, col: 63 }: Parameter `Function_filtering` should have snake_case name, e.g. `function_filtering`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 11 } to LineCol { line: 21, col: 25 }: Function `Get_signatures` should have snake_case name, e.g. `get_signatures`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 11 } to LineCol { line: 25, col: 26 }: Function `Get_definitions` should have snake_case name, e.g. `get_definitions`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 11 } to LineCol { line: 29, col: 24 }: Function `Get_type_tree` should have snake_case name, e.g. `get_type_tree`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 11 } to LineCol { line: 33, col: 20 }: Function `Get_types` should have snake_case name, e.g. `get_types`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 11 } to LineCol { line: 37, col: 25 }: Function `Get_structures` should have snake_case name, e.g. `get_structures`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 21 }: Function `Get_unions` should have snake_case name, e.g. `get_unions`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 7 } to LineCol { line: 45, col: 29 }: Function `Contains_excluded_type` should have snake_case name, e.g. `contains_excluded_type`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 30 } to LineCol { line: 45, col: 39 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 31 } to LineCol { line: 53, col: 39 }: Variable `Type_ptr` should have snake_case name, e.g. `type_ptr`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 31 } to LineCol { line: 73, col: 39 }: Variable `Type_ptr` should have snake_case name, e.g. `type_ptr`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 11 } to LineCol { line: 89, col: 26 }: Function `Filter_function` should have snake_case name, e.g. `filter_function`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 27 } to LineCol { line: 89, col: 36 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 12 } to LineCol { line: 102, col: 31 }: Variable `Authorized_prefixes` should have snake_case name, e.g. `authorized_prefixes`
Warning RustcLint("non_snake_case") from LineCol { line: 152, col: 40 } to LineCol { line: 152, col: 61 }: Parameter `Foreign_item_function` should have snake_case name, e.g. `foreign_item_function`
processing crate: Bindings_utilities, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Utilities/src/Additional.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 7 } to LineCol { line: 3, col: 10 }: Function `Get` should have snake_case name, e.g. `get`
processing crate: Graphics_bindings_tests, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Host/Tests/Graphics.rs
processing crate: build_script_Build, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/Build.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 8 } to LineCol { line: 6, col: 33 }: Variable `Enumeration_configuration` should have snake_case name, e.g. `enumeration_configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 8 } to LineCol { line: 11, col: 21 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
processing crate: build_script_Build, module: /home/alix_anneraud/Git/Xila/Core/Executables/WASM/Build.rs
WeakWarning Clippy("needless_return") from LineCol { line: 7, col: 8 } to LineCol { line: 7, col: 15 }: replace return <expr>; with <expr>
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/WASM/Tests/Integration_test.rs
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/Tests/Integration_test.rs
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/Tests/Integration_test.rs
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/Tests/Integration_test.rs
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/Tests/Integration_test.rs
processing crate: Integration_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/File_manager/Tests/Integration_test.rs
processing crate: build_script_Build, module: /home/alix_anneraud/Git/Xila/Core/Executables/Calculator/Build.rs
processing crate: Calculator_test, module: /home/alix_anneraud/Git/Xila/Core/Executables/Calculator/Tests/Test.rs
processing crate: Calculator, module: /home/alix_anneraud/Git/Xila/Core/Executables/Calculator/src/lib.rs
processing crate: Native_example, module: /home/alix_anneraud/Git/Xila/Core/Examples/Native/src/main.rs
processing crate: WASM, module: /home/alix_anneraud/Git/Xila/Core/Executables/WASM/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 8 }: Module `Main` should have snake_case name, e.g. `main`
processing crate: WASM, module: /home/alix_anneraud/Git/Xila/Core/Executables/WASM/src/Main.rs
processing crate: WASM, module: /home/alix_anneraud/Git/Xila/Core/Executables/WASM/src/Error.rs
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 10 }: Module `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 14 }: Module `Executable` should have snake_case name, e.g. `executable`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 8 }: Module `Main` should have snake_case name, e.g. `main`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 12 }: Module `Terminal` should have snake_case name, e.g. `terminal`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 27 } to LineCol { line: 57, col: 32 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 48 } to LineCol { line: 63, col: 53 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 36 } to LineCol { line: 66, col: 41 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/Terminal.rs
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/Main.rs
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/Executable.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 15 } to LineCol { line: 26, col: 19 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 16 } to LineCol { line: 30, col: 21 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 22 } to LineCol { line: 35, col: 27 }: Parameter `Error` should have snake_case name, e.g. `error`
processing crate: Terminal, module: /home/alix_anneraud/Git/Xila/Core/Executables/Terminal/src/Device.rs
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 8 }: Module `Desk` should have snake_case name, e.g. `desk`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 4 } to LineCol { line: 14, col: 8 }: Module `Home` should have snake_case name, e.g. `home`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 4 } to LineCol { line: 15, col: 8 }: Module `Icon` should have snake_case name, e.g. `icon`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 4 } to LineCol { line: 16, col: 10 }: Module `Layout` should have snake_case name, e.g. `layout`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 4 } to LineCol { line: 17, col: 9 }: Module `Login` should have snake_case name, e.g. `login`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 4 } to LineCol { line: 18, col: 8 }: Module `Main` should have snake_case name, e.g. `main`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 4 } to LineCol { line: 19, col: 12 }: Module `Shortcut` should have snake_case name, e.g. `shortcut`
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Shortcut.rs
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 12 } to LineCol { line: 25, col: 29 }: Variable `New_shortcut_path` should have snake_case name, e.g. `new_shortcut_path`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 12 } to LineCol { line: 45, col: 25 }: Variable `Shortcut_file` should have snake_case name, e.g. `shortcut_file`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 12 } to LineCol { line: 56, col: 18 }: Variable `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 12 } to LineCol { line: 58, col: 20 }: Variable `Shortcut` should have snake_case name, e.g. `shortcut`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 22 } to LineCol { line: 63, col: 32 }: Parameter `Entry_name` should have snake_case name, e.g. `entry_name`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 40 } to LineCol { line: 63, col: 46 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 12 } to LineCol { line: 68, col: 20 }: Variable `Shortcut` should have snake_case name, e.g. `shortcut`
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Main.rs
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Login.rs
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Layout.rs
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Icon.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 14 } to LineCol { line: 5, col: 25 }: Function `Create_icon` should have snake_case name, e.g. `create_icon`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 8 } to LineCol { line: 21, col: 14 }: Variable `Radius` should have snake_case name, e.g. `radius`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 8 } to LineCol { line: 27, col: 13 }: Variable `Label` should have snake_case name, e.g. `label`
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 8 } to LineCol { line: 47, col: 19 }: Variable `Icon_string` should have snake_case name, e.g. `icon_string`
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Home.rs
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 27 } to LineCol { line: 50, col: 32 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 53 } to LineCol { line: 59, col: 58 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 32 } to LineCol { line: 62, col: 37 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 40 } to LineCol { line: 65, col: 45 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 42 } to LineCol { line: 68, col: 47 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 49 } to LineCol { line: 71, col: 54 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 56 } to LineCol { line: 74, col: 61 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 52 } to LineCol { line: 77, col: 57 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 47 } to LineCol { line: 83, col: 52 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 47 } to LineCol { line: 86, col: 52 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 45 } to LineCol { line: 89, col: 50 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 43 } to LineCol { line: 92, col: 48 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 41 } to LineCol { line: 98, col: 46 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Graphical_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Graphical/src/Desk.rs
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/lib.rs
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/tabs/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 8 } to LineCol { line: 26, col: 16 }: Module `Password` should have snake_case name, e.g. `password`
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/tabs/general.rs
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 17 } to LineCol { line: 40, col: 29 }: Function `Handle_event` should have snake_case name, e.g. `handle_event`
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/tabs/Password.rs
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/settings.rs
processing crate: Settings, module: /home/alix_anneraud/Git/Xila/Core/Executables/Settings/src/error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 33 } to LineCol { line: 78, col: 38 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 38 } to LineCol { line: 88, col: 43 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 62 } to LineCol { line: 92, col: 67 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 49 } to LineCol { line: 95, col: 54 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 53 } to LineCol { line: 98, col: 58 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 39 } to LineCol { line: 108, col: 44 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: File_manager, module: /home/alix_anneraud/Git/Xila/Core/Executables/File_manager/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 8 }: Module `Main` should have snake_case name, e.g. `main`
processing crate: File_manager, module: /home/alix_anneraud/Git/Xila/Core/Executables/File_manager/src/error.rs
processing crate: File_manager, module: /home/alix_anneraud/Git/Xila/Core/Executables/File_manager/src/Main.rs
processing crate: File_manager, module: /home/alix_anneraud/Git/Xila/Core/Executables/File_manager/src/file_manager.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/lib.rs
Warning RustcLint("unused_braces") from LineCol { line: 15, col: 16 } to LineCol { line: 15, col: 25 }: Unnecessary braces in use statement
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 43 } to LineCol { line: 48, col: 52 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 41 } to LineCol { line: 137, col: 46 }: Parameter `Paths` should have snake_case name, e.g. `paths`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 16 } to LineCol { line: 158, col: 22 }: Variable `Result` should have snake_case name, e.g. `result`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/tokenizer.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 77, col: 0 } to LineCol { line: 233, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
WeakWarning Ra("remove-unnecessary-else", WeakWarning) from LineCol { line: 39, col: 10 } to LineCol { line: 39, col: 14 }: remove unnecessary else block
WeakWarning Ra("remove-unnecessary-else", WeakWarning) from LineCol { line: 33, col: 10 } to LineCol { line: 33, col: 14 }: remove unnecessary else block
WeakWarning Ra("remove-unnecessary-else", WeakWarning) from LineCol { line: 27, col: 10 } to LineCol { line: 27, col: 14 }: remove unnecessary else block
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/resolver.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/parser.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 59, col: 0 } to LineCol { line: 105, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 13 } to LineCol { line: 48, col: 19 }: Parameter `Tokens` should have snake_case name, e.g. `tokens`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 8 } to LineCol { line: 52, col: 16 }: Variable `Commands` should have snake_case name, e.g. `commands`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 16 } to LineCol { line: 26, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 12 } to LineCol { line: 29, col: 19 }: Variable `Command` should have snake_case name, e.g. `command`
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 16 } to LineCol { line: 34, col: 25 }: Variable `Arguments` should have snake_case name, e.g. `arguments`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 46 } to LineCol { line: 33, col: 51 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 48 } to LineCol { line: 36, col: 53 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 59 } to LineCol { line: 39, col: 64 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 18 }: Module `Authentication` should have snake_case name, e.g. `authentication`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 20 }: Module `Change_directory` should have snake_case name, e.g. `change_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 9 }: Module `Clear` should have snake_case name, e.g. `clear`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 15 }: Module `Concatenate` should have snake_case name, e.g. `concatenate`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 13 }: Module `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 8 }: Module `Echo` should have snake_case name, e.g. `echo`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 25 }: Module `Environment_variables` should have snake_case name, e.g. `environment_variables`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 8 }: Module `Exit` should have snake_case name, e.g. `exit`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `List` should have snake_case name, e.g. `list`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 14 }: Module `Statistics` should have snake_case name, e.g. `statistics`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Statistics.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 39 } to LineCol { line: 6, col: 48 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 12 } to LineCol { line: 14, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 12 } to LineCol { line: 16, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 12 } to LineCol { line: 28, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 15 } to LineCol { line: 32, col: 23 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 12 } to LineCol { line: 39, col: 16 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 15 } to LineCol { line: 43, col: 19 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 12 } to LineCol { line: 49, col: 17 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 15 } to LineCol { line: 53, col: 20 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 12 } to LineCol { line: 59, col: 17 }: Variable `Inode` should have snake_case name, e.g. `inode`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/List.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 33 } to LineCol { line: 6, col: 42 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 12 } to LineCol { line: 13, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 15 } to LineCol { line: 17, col: 24 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 26 } to LineCol { line: 27, col: 31 }: Variable `Entry` should have snake_case name, e.g. `entry`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Exit.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 33 } to LineCol { line: 3, col: 42 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Environment_variables.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 53 } to LineCol { line: 5, col: 62 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 13 } to LineCol { line: 13, col: 17 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 19 } to LineCol { line: 13, col: 24 }: Variable `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 19 } to LineCol { line: 21, col: 24 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 56 } to LineCol { line: 31, col: 65 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 12 } to LineCol { line: 39, col: 16 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 19 } to LineCol { line: 41, col: 24 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Echo.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Directory.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 45 } to LineCol { line: 6, col: 54 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 12 } to LineCol { line: 14, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 12 } to LineCol { line: 21, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 35 } to LineCol { line: 43, col: 44 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 12 } to LineCol { line: 51, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 12 } to LineCol { line: 58, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 19 } to LineCol { line: 70, col: 24 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Concatenate.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Clear.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Change_directory.rs
processing crate: Command_line_shell, module: /home/alix_anneraud/Git/Xila/Core/Executables/Shell/Command_line/src/commands/Authentication.rs
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 16 } to LineCol { line: 15, col: 24 }: Variable `Password` should have snake_case name, e.g. `password`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 27 }: Variable `User_identifier` should have snake_case name, e.g. `user_identifier`
processing crate: Xila, module: /home/alix_anneraud/Git/Xila/Core/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 3, col: 0 } to LineCol { line: 4, col: 34 }: code is inactive due to #[cfg] directives: feature = "WASM" and target_arch = "wasm32" are disabled
processing crate: Executable, module: /home/alix_anneraud/Git/Xila/Core/Modules/Executable/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 132, col: 0 } to LineCol { line: 160, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 16 }: Module `Device_trait` should have snake_case name, e.g. `device_trait`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 13 }: Module `Read_data` should have snake_case name, e.g. `read_data`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 12 }: Module `Standard` should have snake_case name, e.g. `standard`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 28 } to LineCol { line: 22, col: 38 }: Parameter `Statistics` should have snake_case name, e.g. `statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 58 } to LineCol { line: 22, col: 62 }: Parameter `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 8 } to LineCol { line: 37, col: 19 }: Variable `Is_in_group` should have snake_case name, e.g. `is_in_group`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 8 } to LineCol { line: 61, col: 20 }: Variable `Current_user` should have snake_case name, e.g. `current_user`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 8 } to LineCol { line: 63, col: 16 }: Variable `New_user` should have snake_case name, e.g. `new_user`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 8 } to LineCol { line: 79, col: 12 }: Variable `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 8 } to LineCol { line: 81, col: 12 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 8 } to LineCol { line: 99, col: 16 }: Variable `New_user` should have snake_case name, e.g. `new_user`
Warning RustcLint("non_snake_case") from LineCol { line: 101, col: 8 } to LineCol { line: 101, col: 17 }: Variable `File_name` should have snake_case name, e.g. `file_name`
Warning RustcLint("non_snake_case") from LineCol { line: 106, col: 12 } to LineCol { line: 106, col: 21 }: Variable `Read_data` should have snake_case name, e.g. `read_data`
Warning RustcLint("non_snake_case") from LineCol { line: 110, col: 8 } to LineCol { line: 110, col: 12 }: Variable `Main` should have snake_case name, e.g. `main`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 9 } to LineCol { line: 114, col: 20 }: Variable `Join_handle` should have snake_case name, e.g. `join_handle`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 50 } to LineCol { line: 115, col: 54 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 16 } to LineCol { line: 120, col: 24 }: Variable `Standard` should have snake_case name, e.g. `standard`
processing crate: Executable, module: /home/alix_anneraud/Git/Xila/Core/Modules/Executable/src/Standard.rs
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 12 } to LineCol { line: 44, col: 24 }: Variable `Standard_out` should have snake_case name, e.g. `standard_out`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 12 } to LineCol { line: 48, col: 26 }: Variable `Standard_error` should have snake_case name, e.g. `standard_error`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 30 } to LineCol { line: 77, col: 39 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 91, col: 30 } to LineCol { line: 91, col: 34 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 15 } to LineCol { line: 97, col: 19 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 35 } to LineCol { line: 102, col: 44 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 36 } to LineCol { line: 107, col: 45 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 41 } to LineCol { line: 114, col: 50 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 34 } to LineCol { line: 119, col: 40 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 12 } to LineCol { line: 138, col: 24 }: Variable `Standard_out` should have snake_case name, e.g. `standard_out`
Warning RustcLint("non_snake_case") from LineCol { line: 143, col: 12 } to LineCol { line: 143, col: 26 }: Variable `Standard_error` should have snake_case name, e.g. `standard_error`
Warning RustcLint("non_snake_case") from LineCol { line: 167, col: 44 } to LineCol { line: 167, col: 48 }: Parameter `Task` should have snake_case name, e.g. `task`
processing crate: Executable, module: /home/alix_anneraud/Git/Xila/Core/Modules/Executable/src/Read_data.rs
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 38 } to LineCol { line: 24, col: 46 }: Parameter `Standard` should have snake_case name, e.g. `standard`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 48 } to LineCol { line: 24, col: 57 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 17 } to LineCol { line: 30, col: 28 }: Function `New_default` should have snake_case name, e.g. `new_default`
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 17 } to LineCol { line: 34, col: 25 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 11 } to LineCol { line: 38, col: 19 }: Function `Get_main` should have snake_case name, e.g. `get_main`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 16 } to LineCol { line: 46, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 16 } to LineCol { line: 62, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Executable, module: /home/alix_anneraud/Git/Xila/Core/Modules/Executable/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 36 } to LineCol { line: 17, col: 41 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: Executable, module: /home/alix_anneraud/Git/Xila/Core/Modules/Executable/src/Device_trait.rs
processing crate: Host_bindings, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Host/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 12 }: Module `Graphics` should have snake_case name, e.g. `graphics`
processing crate: Host_bindings, module: /home/alix_anneraud/Git/Xila/Core/Modules/Bindings/Host/src/Graphics.rs
Warning RustcLint("non_snake_case") from LineCol { line: 727, col: 4 } to LineCol { line: 727, col: 10 }: Parameter `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 741, col: 4 } to LineCol { line: 741, col: 8 }: Parameter `Code` should have snake_case name, e.g. `code`
Warning RustcLint("non_snake_case") from LineCol { line: 742, col: 4 } to LineCol { line: 742, col: 10 }: Parameter `Target` should have snake_case name, e.g. `target`
Warning RustcLint("non_snake_case") from LineCol { line: 786, col: 4 } to LineCol { line: 786, col: 10 }: Parameter `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 787, col: 4 } to LineCol { line: 787, col: 7 }: Parameter `Map` should have snake_case name, e.g. `map`
Warning RustcLint("non_snake_case") from LineCol { line: 810, col: 14 } to LineCol { line: 810, col: 27 }: Function `Call_function` should have snake_case name, e.g. `call_function`
Warning RustcLint("non_snake_case") from LineCol { line: 10535, col: 16 } to LineCol { line: 10535, col: 22 }: Variable `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 10536, col: 16 } to LineCol { line: 10536, col: 22 }: Variable `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 10556, col: 16 } to LineCol { line: 10556, col: 20 }: Variable `Code` should have snake_case name, e.g. `code`
Warning RustcLint("non_snake_case") from LineCol { line: 10557, col: 16 } to LineCol { line: 10557, col: 22 }: Variable `Target` should have snake_case name, e.g. `target`
Warning RustcLint("non_snake_case") from LineCol { line: 10562, col: 16 } to LineCol { line: 10562, col: 20 }: Variable `Code` should have snake_case name, e.g. `code`
Warning RustcLint("non_snake_case") from LineCol { line: 10563, col: 16 } to LineCol { line: 10563, col: 22 }: Variable `Target` should have snake_case name, e.g. `target`
Warning RustcLint("non_snake_case") from LineCol { line: 10607, col: 16 } to LineCol { line: 10607, col: 22 }: Variable `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 10608, col: 16 } to LineCol { line: 10608, col: 19 }: Variable `Map` should have snake_case name, e.g. `map`
Warning RustcLint("non_snake_case") from LineCol { line: 10609, col: 16 } to LineCol { line: 10609, col: 22 }: Variable `Object` should have snake_case name, e.g. `object`
Warning RustcLint("non_snake_case") from LineCol { line: 10610, col: 16 } to LineCol { line: 10610, col: 19 }: Variable `Map` should have snake_case name, e.g. `map`
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 50, col: 4 } to LineCol { line: 53, col: 5 }: code is inactive due to #[cfg] directives: target_arch = "x86_64" is enabled
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 4 } to LineCol { line: 58, col: 15 }: Module `Custom_data` should have snake_case name, e.g. `custom_data`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 4 } to LineCol { line: 59, col: 15 }: Module `Environment` should have snake_case name, e.g. `environment`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 4 } to LineCol { line: 60, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 4 } to LineCol { line: 61, col: 12 }: Module `Instance` should have snake_case name, e.g. `instance`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 4 } to LineCol { line: 62, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 4 } to LineCol { line: 63, col: 10 }: Module `Module` should have snake_case name, e.g. `module`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 4 } to LineCol { line: 64, col: 15 }: Module `Registrable` should have snake_case name, e.g. `registrable`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 4 } to LineCol { line: 65, col: 11 }: Module `Runtime` should have snake_case name, e.g. `runtime`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Runtime.rs
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 11 } to LineCol { line: 27, col: 28 }: Function `Register_function` should have snake_case name, e.g. `register_function`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 35 } to LineCol { line: 27, col: 39 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 47 } to LineCol { line: 27, col: 63 }: Parameter `Function_pointer` should have snake_case name, e.g. `function_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 11 } to LineCol { line: 31, col: 19 }: Function `Register` should have snake_case name, e.g. `register`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 30 } to LineCol { line: 31, col: 41 }: Parameter `Registrable` should have snake_case name, e.g. `registrable`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 11 } to LineCol { line: 39, col: 16 }: Function `Build` should have snake_case name, e.g. `build`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 18 } to LineCol { line: 51, col: 37 }: Function `Get_inner_reference` should have snake_case name, e.g. `get_inner_reference`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 11 } to LineCol { line: 55, col: 40 }: Function `Initialize_thread_environment` should have snake_case name, e.g. `initialize_thread_environment`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 11 } to LineCol { line: 63, col: 42 }: Function `Deinitialize_thread_environment` should have snake_case name, e.g. `deinitialize_thread_environment`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Registrable.rs
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 7 } to LineCol { line: 32, col: 13 }: Function `Is_XIP` should have snake_case name, e.g. `is_xip`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 7 } to LineCol { line: 36, col: 17 }: Function `Get_binary` should have snake_case name, e.g. `get_binary`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 7 } to LineCol { line: 40, col: 15 }: Function `Get_name` should have snake_case name, e.g. `get_name`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Module.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 17 } to LineCol { line: 19, col: 28 }: Function `From_buffer` should have snake_case name, e.g. `from_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 12 } to LineCol { line: 28, col: 25 }: Variable `Task_instance` should have snake_case name, e.g. `task_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 12 } to LineCol { line: 30, col: 16 }: Variable `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 12 } to LineCol { line: 39, col: 45 }: Variable `Environment_variables_raw_pointer` should have snake_case name, e.g. `environment_variables_raw_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 12 } to LineCol { line: 41, col: 40 }: Variable `Environment_variables_length` should have snake_case name, e.g. `environment_variables_length`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 12 } to LineCol { line: 44, col: 18 }: Variable `Module` should have snake_case name, e.g. `module`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 12 } to LineCol { line: 49, col: 23 }: Variable `Standard_in` should have snake_case name, e.g. `standard_in`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 18 } to LineCol { line: 74, col: 37 }: Function `Get_inner_reference` should have snake_case name, e.g. `get_inner_reference`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Manager.rs
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 7 } to LineCol { line: 40, col: 17 }: Function `Initialize` should have snake_case name, e.g. `initialize`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 18 } to LineCol { line: 40, col: 30 }: Parameter `Registrables` should have snake_case name, e.g. `registrables`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 7 } to LineCol { line: 57, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 11 } to LineCol { line: 95, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 15 } to LineCol { line: 95, col: 27 }: Parameter `Registrables` should have snake_case name, e.g. `registrables`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 12 } to LineCol { line: 98, col: 23 }: Variable `Registrable` should have snake_case name, e.g. `registrable`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 12 } to LineCol { line: 102, col: 19 }: Variable `Runtime` should have snake_case name, e.g. `runtime`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 12 } to LineCol { line: 104, col: 19 }: Variable `Manager` should have snake_case name, e.g. `manager`
Warning RustcLint("non_snake_case") from LineCol { line: 106, col: 12 } to LineCol { line: 106, col: 23 }: Variable `Registrable` should have snake_case name, e.g. `registrable`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 7 } to LineCol { line: 133, col: 18 }: Function `Load_module` should have snake_case name, e.g. `load_module`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 26 } to LineCol { line: 133, col: 32 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 41 } to LineCol { line: 133, col: 44 }: Parameter `XIP` should have snake_case name, e.g. `xip`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 52 } to LineCol { line: 133, col: 56 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 20 } to LineCol { line: 139, col: 26 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 20 } to LineCol { line: 145, col: 32 }: Variable `Error_buffer` should have snake_case name, e.g. `error_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 147, col: 16 } to LineCol { line: 147, col: 22 }: Variable `Module` should have snake_case name, e.g. `module`
Warning RustcLint("non_snake_case") from LineCol { line: 198, col: 17 } to LineCol { line: 198, col: 24 }: Function `Execute` should have snake_case name, e.g. `execute`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 20 } to LineCol { line: 218, col: 28 }: Variable `Instance` should have snake_case name, e.g. `instance`
Warning RustcLint("non_snake_case") from LineCol { line: 220, col: 20 } to LineCol { line: 220, col: 26 }: Variable `Result` should have snake_case name, e.g. `result`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Instance.rs
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 11 } to LineCol { line: 42, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 12 } to LineCol { line: 53, col: 20 }: Variable `Instance` should have snake_case name, e.g. `instance`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 11 } to LineCol { line: 60, col: 34 }: Function `Validate_native_pointer` should have snake_case name, e.g. `validate_native_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 45 } to LineCol { line: 60, col: 52 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 64 } to LineCol { line: 60, col: 68 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 11 } to LineCol { line: 70, col: 32 }: Function `Validate_WASM_pointer` should have snake_case name, e.g. `validate_wasm_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 40 } to LineCol { line: 70, col: 47 }: Parameter `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 68 } to LineCol { line: 70, col: 72 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 11 } to LineCol { line: 80, col: 34 }: Function `Convert_to_WASM_pointer` should have snake_case name, e.g. `convert_to_wasm_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 45 } to LineCol { line: 80, col: 52 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 54 } to LineCol { line: 93, col: 61 }: Parameter `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 11 } to LineCol { line: 100, col: 31 }: Function `Call_export_function` should have snake_case name, e.g. `call_export_function`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 11 } to LineCol { line: 118, col: 20 }: Function `Call_main` should have snake_case name, e.g. `call_main`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 28 } to LineCol { line: 118, col: 38 }: Parameter `Parameters` should have snake_case name, e.g. `parameters`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 11 } to LineCol { line: 122, col: 19 }: Function `Allocate` should have snake_case name, e.g. `allocate`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 34 } to LineCol { line: 122, col: 38 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 125, col: 35 } to LineCol { line: 125, col: 42 }: Variable `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 11 } to LineCol { line: 134, col: 21 }: Function `Deallocate` should have snake_case name, e.g. `deallocate`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 36 } to LineCol { line: 134, col: 40 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 11 } to LineCol { line: 138, col: 30 }: Function `Get_inner_reference` should have snake_case name, e.g. `get_inner_reference`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Error.rs
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Environment.rs
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 28 } to LineCol { line: 38, col: 39 }: Parameter `Raw_pointer` should have snake_case name, e.g. `raw_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 11 } to LineCol { line: 46, col: 24 }: Function `From_instance` should have snake_case name, e.g. `from_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 25 } to LineCol { line: 46, col: 33 }: Parameter `Instance` should have snake_case name, e.g. `instance`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 11 } to LineCol { line: 58, col: 40 }: Function `Get_or_initialize_custom_data` should have snake_case name, e.g. `get_or_initialize_custom_data`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 16 } to LineCol { line: 63, col: 27 }: Variable `Custom_data` should have snake_case name, e.g. `custom_data`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 20 } to LineCol { line: 66, col: 31 }: Variable `Custom_data` should have snake_case name, e.g. `custom_data`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 18 } to LineCol { line: 86, col: 43 }: Function `Convert_to_native_pointer` should have snake_case name, e.g. `convert_to_native_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 18 } to LineCol { line: 103, col: 41 }: Function `Convert_to_WASM_pointer` should have snake_case name, e.g. `convert_to_wasm_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 52 } to LineCol { line: 103, col: 59 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 11 } to LineCol { line: 108, col: 32 }: Function `Validate_WASM_pointer` should have snake_case name, e.g. `validate_wasm_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 40 } to LineCol { line: 108, col: 47 }: Parameter `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 68 } to LineCol { line: 108, col: 72 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 11 } to LineCol { line: 114, col: 34 }: Function `Validate_native_pointer` should have snake_case name, e.g. `validate_native_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 45 } to LineCol { line: 114, col: 52 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 64 } to LineCol { line: 114, col: 68 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 126, col: 11 } to LineCol { line: 126, col: 33 }: Function `Call_indirect_function` should have snake_case name, e.g. `call_indirect_function`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 12 } to LineCol { line: 133, col: 21 }: Variable `Parameter` should have snake_case name, e.g. `parameter`
Warning RustcLint("non_snake_case") from LineCol { line: 149, col: 16 } to LineCol { line: 149, col: 33 }: Variable `Exception_message` should have snake_case name, e.g. `exception_message`
Warning RustcLint("non_snake_case") from LineCol { line: 163, col: 11 } to LineCol { line: 163, col: 29 }: Function `Create_environment` should have snake_case name, e.g. `create_environment`
Warning RustcLint("non_snake_case") from LineCol { line: 163, col: 37 } to LineCol { line: 163, col: 47 }: Parameter `Stack_size` should have snake_case name, e.g. `stack_size`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 11 } to LineCol { line: 176, col: 38 }: Function `Set_instruction_count_limit` should have snake_case name, e.g. `set_instruction_count_limit`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 46 } to LineCol { line: 176, col: 51 }: Parameter `Limit` should have snake_case name, e.g. `limit`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 7 } to LineCol { line: 185, col: 27 }: Function `Get_instance_pointer` should have snake_case name, e.g. `get_instance_pointer`
processing crate: Virtual_machine, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_machine/src/Custom_data.rs
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 17 } to LineCol { line: 14, col: 36 }: Function `Get_task_identifier` should have snake_case name, e.g. `get_task_identifier`
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/lib.rs
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/wasi_context.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 173, col: 0 } to LineCol { line: 216, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/value.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 77, col: 0 } to LineCol { line: 119, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/runtime.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 144, col: 0 } to LineCol { line: 220, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/module.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 200, col: 0 } to LineCol { line: 311, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/instance.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 108, col: 0 } to LineCol { line: 231, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/host_function.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 64, col: 0 } to LineCol { line: 105, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/helper.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 28, col: 0 } to LineCol { line: 62, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_rust_sdk, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/src/function.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 163, col: 0 } to LineCol { line: 423, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: wamr_sys, module: /home/alix_anneraud/Git/Xila/wamr-rust-sdk/crates/wamr-sys/src/lib.rs
processing crate: Authentication, module: /home/alix_anneraud/Git/Xila/Core/Modules/Authentication/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 4 } to LineCol { line: 34, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 4 } to LineCol { line: 35, col: 9 }: Module `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 4 } to LineCol { line: 36, col: 8 }: Module `Hash` should have snake_case name, e.g. `hash`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 4 } to LineCol { line: 37, col: 8 }: Module `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 8 } to LineCol { line: 86, col: 27 }: Variable `Virtual_file_system` should have snake_case name, e.g. `virtual_file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 8 } to LineCol { line: 88, col: 21 }: Variable `Users_manager` should have snake_case name, e.g. `users_manager`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 12 } to LineCol { line: 90, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 12 } to LineCol { line: 93, col: 28 }: Variable `Groups_directory` should have snake_case name, e.g. `groups_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 12 } to LineCol { line: 98, col: 23 }: Variable `Group_entry` should have snake_case name, e.g. `group_entry`
Warning RustcLint("non_snake_case") from LineCol { line: 116, col: 12 } to LineCol { line: 116, col: 27 }: Variable `Users_directory` should have snake_case name, e.g. `users_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 121, col: 12 } to LineCol { line: 121, col: 22 }: Variable `User_entry` should have snake_case name, e.g. `user_entry`
processing crate: Authentication, module: /home/alix_anneraud/Git/Xila/Core/Modules/Authentication/src/User.rs
Warning RustcLint("non_snake_case") from LineCol { line: 171, col: 26 } to LineCol { line: 171, col: 35 }: Parameter `User_name` should have snake_case name, e.g. `user_name`
Warning RustcLint("non_snake_case") from LineCol { line: 209, col: 8 } to LineCol { line: 209, col: 17 }: Variable `User_file` should have snake_case name, e.g. `user_file`
Warning RustcLint("non_snake_case") from LineCol { line: 213, col: 12 } to LineCol { line: 213, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 220, col: 8 } to LineCol { line: 220, col: 12 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 268, col: 8 } to LineCol { line: 268, col: 23 }: Variable `User_identifier` should have snake_case name, e.g. `user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 268, col: 38 } to LineCol { line: 268, col: 53 }: Variable `User_identifier` should have snake_case name, e.g. `user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 284, col: 8 } to LineCol { line: 284, col: 12 }: Variable `Salt` should have snake_case name, e.g. `salt`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 8 } to LineCol { line: 286, col: 12 }: Variable `Hash` should have snake_case name, e.g. `hash`
Warning RustcLint("non_snake_case") from LineCol { line: 289, col: 8 } to LineCol { line: 289, col: 12 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 302, col: 8 } to LineCol { line: 302, col: 22 }: Variable `User_file_path` should have snake_case name, e.g. `user_file_path`
Warning RustcLint("non_snake_case") from LineCol { line: 307, col: 8 } to LineCol { line: 307, col: 17 }: Variable `User_file` should have snake_case name, e.g. `user_file`
Warning RustcLint("non_snake_case") from LineCol { line: 315, col: 8 } to LineCol { line: 315, col: 17 }: Variable `User_json` should have snake_case name, e.g. `user_json`
Warning RustcLint("non_snake_case") from LineCol { line: 357, col: 8 } to LineCol { line: 357, col: 12 }: Variable `Hash` should have snake_case name, e.g. `hash`
Warning RustcLint("non_snake_case") from LineCol { line: 359, col: 8 } to LineCol { line: 359, col: 22 }: Variable `User_file_path` should have snake_case name, e.g. `user_file_path`
Warning RustcLint("non_snake_case") from LineCol { line: 364, col: 8 } to LineCol { line: 364, col: 17 }: Variable `User_file` should have snake_case name, e.g. `user_file`
Warning RustcLint("non_snake_case") from LineCol { line: 372, col: 12 } to LineCol { line: 372, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 379, col: 12 } to LineCol { line: 379, col: 16 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 385, col: 8 } to LineCol { line: 385, col: 17 }: Variable `User_json` should have snake_case name, e.g. `user_json`
Warning RustcLint("non_snake_case") from LineCol { line: 423, col: 8 } to LineCol { line: 423, col: 17 }: Variable `User_file` should have snake_case name, e.g. `user_file`
Warning RustcLint("non_snake_case") from LineCol { line: 431, col: 12 } to LineCol { line: 431, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 438, col: 12 } to LineCol { line: 438, col: 16 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 443, col: 8 } to LineCol { line: 443, col: 17 }: Variable `User_json` should have snake_case name, e.g. `user_json`
Warning RustcLint("non_snake_case") from LineCol { line: 482, col: 8 } to LineCol { line: 482, col: 17 }: Variable `User_file` should have snake_case name, e.g. `user_file`
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 31 } to LineCol { line: 129, col: 35 }: Parameter `Hash` should have snake_case name, e.g. `hash`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 31 } to LineCol { line: 138, col: 35 }: Parameter `Salt` should have snake_case name, e.g. `salt`
Warning RustcLint("non_snake_case") from LineCol { line: 147, col: 40 } to LineCol { line: 147, col: 53 }: Parameter `Primary_group` should have snake_case name, e.g. `primary_group`
Warning RustcLint("non_snake_case") from LineCol { line: 156, col: 31 } to LineCol { line: 156, col: 35 }: Parameter `Name` should have snake_case name, e.g. `name`
processing crate: Authentication, module: /home/alix_anneraud/Git/Xila/Core/Modules/Authentication/src/Hash.rs
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 12 } to LineCol { line: 52, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 32 } to LineCol { line: 59, col: 36 }: Parameter `Byte` should have snake_case name, e.g. `byte`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 21 } to LineCol { line: 86, col: 29 }: Parameter `Password` should have snake_case name, e.g. `password`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 37 } to LineCol { line: 86, col: 41 }: Parameter `Salt` should have snake_case name, e.g. `salt`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 12 } to LineCol { line: 89, col: 18 }: Variable `Hasher` should have snake_case name, e.g. `hasher`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 8 } to LineCol { line: 94, col: 12 }: Variable `Hash` should have snake_case name, e.g. `hash`
processing crate: Authentication, module: /home/alix_anneraud/Git/Xila/Core/Modules/Authentication/src/Group.rs
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 27 } to LineCol { line: 107, col: 37 }: Parameter `Group_name` should have snake_case name, e.g. `group_name`
Warning RustcLint("non_snake_case") from LineCol { line: 146, col: 8 } to LineCol { line: 146, col: 18 }: Variable `Group_file` should have snake_case name, e.g. `group_file`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 8 } to LineCol { line: 199, col: 24 }: Variable `Group_identifier` should have snake_case name, e.g. `group_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 39 } to LineCol { line: 199, col: 55 }: Variable `Group_identifier` should have snake_case name, e.g. `group_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 215, col: 8 } to LineCol { line: 215, col: 13 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 8 } to LineCol { line: 222, col: 23 }: Variable `Group_file_path` should have snake_case name, e.g. `group_file_path`
Warning RustcLint("non_snake_case") from LineCol { line: 224, col: 8 } to LineCol { line: 224, col: 18 }: Variable `Group_file` should have snake_case name, e.g. `group_file`
Warning RustcLint("non_snake_case") from LineCol { line: 232, col: 8 } to LineCol { line: 232, col: 18 }: Variable `Group_json` should have snake_case name, e.g. `group_json`
processing crate: Authentication, module: /home/alix_anneraud/Git/Xila/Core/Modules/Authentication/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 56 } to LineCol { line: 78, col: 61 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 49 } to LineCol { line: 81, col: 54 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 43 } to LineCol { line: 87, col: 48 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 43 } to LineCol { line: 90, col: 48 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 44 } to LineCol { line: 93, col: 49 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 37 } to LineCol { line: 96, col: 42 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 51 } to LineCol { line: 99, col: 56 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 49 } to LineCol { line: 102, col: 54 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 44 } to LineCol { line: 108, col: 49 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 44 } to LineCol { line: 111, col: 49 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 45 } to LineCol { line: 114, col: 50 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 38 } to LineCol { line: 117, col: 43 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 52 } to LineCol { line: 120, col: 57 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 126, col: 47 } to LineCol { line: 126, col: 52 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 47 } to LineCol { line: 129, col: 52 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 40 } to LineCol { line: 132, col: 45 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 52 } to LineCol { line: 135, col: 57 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 44 } to LineCol { line: 138, col: 49 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 53 } to LineCol { line: 141, col: 58 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 144, col: 41 } to LineCol { line: 144, col: 46 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 147, col: 45 } to LineCol { line: 147, col: 50 }: Variable `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 48 } to LineCol { line: 150, col: 53 }: Variable `Error` should have snake_case name, e.g. `error`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 19, col: 0 } to LineCol { line: 25, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 11 }: Module `Context` should have snake_case name, e.g. `context`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 10 }: Module `Memory` should have snake_case name, e.g. `memory`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 8 }: Module `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 8 }: Module `User` should have snake_case name, e.g. `user`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/User.rs
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Time.rs
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 22 }: Module `Condition_variable` should have snake_case name, e.g. `condition_variable`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 9 }: Module `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 10 }: Module `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 13 }: Module `Semaphore` should have snake_case name, e.g. `semaphore`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 10 }: Module `Thread` should have snake_case name, e.g. `thread`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/Thread.rs
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 36 } to LineCol { line: 18, col: 44 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 42 } to LineCol { line: 23, col: 51 }: Parameter `_Duration` should have snake_case name, e.g. `_duration`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 35 } to LineCol { line: 28, col: 42 }: Parameter `_Thread` should have snake_case name, e.g. `_thread`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 37 } to LineCol { line: 33, col: 44 }: Parameter `_Thread` should have snake_case name, e.g. `_thread`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 38 } to LineCol { line: 68, col: 45 }: Parameter `_Thread` should have snake_case name, e.g. `_thread`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/Semaphore.rs
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 39 } to LineCol { line: 23, col: 49 }: Parameter `_Semaphore` should have snake_case name, e.g. `_semaphore`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 38 } to LineCol { line: 29, col: 48 }: Parameter `_Semaphore` should have snake_case name, e.g. `_semaphore`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 42 } to LineCol { line: 35, col: 52 }: Parameter `_Semaphore` should have snake_case name, e.g. `_semaphore`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 38 } to LineCol { line: 41, col: 48 }: Parameter `_Semaphore` should have snake_case name, e.g. `_semaphore`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 47 } to LineCol { line: 64, col: 52 }: Parameter `_Name` should have snake_case name, e.g. `_name`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/Rwlock.rs
Warning RustcLint("non_snake_case") from LineCol { line: 126, col: 48 } to LineCol { line: 126, col: 54 }: Parameter `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 42 } to LineCol { line: 148, col: 48 }: Parameter `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 165, col: 43 } to LineCol { line: 165, col: 49 }: Parameter `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 183, col: 44 } to LineCol { line: 183, col: 50 }: Parameter `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 201, col: 45 } to LineCol { line: 201, col: 51 }: Parameter `Rwlock` should have snake_case name, e.g. `rwlock`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 11 } to LineCol { line: 21, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 11 } to LineCol { line: 27, col: 27 }: Function `Is_valid_pointer` should have snake_case name, e.g. `is_valid_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 18 } to LineCol { line: 37, col: 30 }: Function `From_pointer` should have snake_case name, e.g. `from_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 18 } to LineCol { line: 50, col: 38 }: Function `From_mutable_pointer` should have snake_case name, e.g. `from_mutable_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 11 } to LineCol { line: 57, col: 15 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 33 } to LineCol { line: 59, col: 38 }: Parameter `State` should have snake_case name, e.g. `state`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 11 } to LineCol { line: 73, col: 16 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 33 } to LineCol { line: 75, col: 38 }: Parameter `State` should have snake_case name, e.g. `state`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 11 } to LineCol { line: 87, col: 17 }: Function `Unlock` should have snake_case name, e.g. `unlock`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 33 } to LineCol { line: 89, col: 38 }: Parameter `State` should have snake_case name, e.g. `state`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/Mutex.rs
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 47 } to LineCol { line: 122, col: 52 }: Parameter `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 57 } to LineCol { line: 145, col: 62 }: Parameter `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 167, col: 41 } to LineCol { line: 167, col: 46 }: Parameter `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 43 } to LineCol { line: 185, col: 48 }: Parameter `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 203, col: 44 } to LineCol { line: 203, col: 49 }: Parameter `Mutex` should have snake_case name, e.g. `mutex`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 11 } to LineCol { line: 27, col: 27 }: Function `Is_valid_pointer` should have snake_case name, e.g. `is_valid_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 18 } to LineCol { line: 37, col: 30 }: Function `From_pointer` should have snake_case name, e.g. `from_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 18 } to LineCol { line: 50, col: 38 }: Function `From_mutable_pointer` should have snake_case name, e.g. `from_mutable_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 11 } to LineCol { line: 57, col: 15 }: Function `Lock` should have snake_case name, e.g. `lock`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 33 } to LineCol { line: 63, col: 38 }: Parameter `State` should have snake_case name, e.g. `state`
Warning RustcLint("non_snake_case") from LineCol { line: 82, col: 11 } to LineCol { line: 82, col: 17 }: Function `Unlock` should have snake_case name, e.g. `unlock`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Task/Condition_variable.rs
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Memory/mod.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 421, col: 0 } to LineCol { line: 868, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 101, col: 7 } to LineCol { line: 101, col: 19 }: Function `Into_pointer` should have snake_case name, e.g. `into_pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 101, col: 26 } to LineCol { line: 101, col: 34 }: Parameter `Function` should have snake_case name, e.g. `function`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 41 } to LineCol { line: 153, col: 48 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 8 } to LineCol { line: 160, col: 14 }: Variable `Layout` should have snake_case name, e.g. `layout`
Warning RustcLint("non_snake_case") from LineCol { line: 224, col: 48 } to LineCol { line: 224, col: 55 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 224, col: 70 } to LineCol { line: 224, col: 74 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 16 } to LineCol { line: 228, col: 32 }: Variable `Allocation_table` should have snake_case name, e.g. `allocation_table`
Warning RustcLint("non_snake_case") from LineCol { line: 230, col: 12 } to LineCol { line: 230, col: 22 }: Variable `Old_layout` should have snake_case name, e.g. `old_layout`
Warning RustcLint("non_snake_case") from LineCol { line: 242, col: 12 } to LineCol { line: 242, col: 22 }: Variable `New_layout` should have snake_case name, e.g. `new_layout`
Warning RustcLint("non_snake_case") from LineCol { line: 251, col: 12 } to LineCol { line: 251, col: 21 }: Variable `Allocated` should have snake_case name, e.g. `allocated`
Warning RustcLint("non_snake_case") from LineCol { line: 315, col: 12 } to LineCol { line: 315, col: 18 }: Variable `Layout` should have snake_case name, e.g. `layout`
Warning RustcLint("non_snake_case") from LineCol { line: 318, col: 12 } to LineCol { line: 318, col: 24 }: Variable `Capabilities` should have snake_case name, e.g. `capabilities`
Warning RustcLint("non_snake_case") from LineCol { line: 320, col: 12 } to LineCol { line: 320, col: 18 }: Variable `Result` should have snake_case name, e.g. `result`
Warning RustcLint("non_snake_case") from LineCol { line: 415, col: 54 } to LineCol { line: 415, col: 62 }: Parameter `_Address` should have snake_case name, e.g. `_address`
Warning RustcLint("non_snake_case") from LineCol { line: 415, col: 77 } to LineCol { line: 415, col: 82 }: Parameter `_Size` should have snake_case name, e.g. `_size`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/File_system/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 13 }: Module `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 13 }: Module `Functions` should have snake_case name, e.g. `functions`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 10 }: Module `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 9 }: Module `Types` should have snake_case name, e.g. `types`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/File_system/Types.rs
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 13 } to LineCol { line: 12, col: 26 }: Function `Into_position` should have snake_case name, e.g. `into_position`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 27 } to LineCol { line: 12, col: 33 }: Parameter `Whence` should have snake_case name, e.g. `whence`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 65 } to LineCol { line: 12, col: 71 }: Parameter `Offset` should have snake_case name, e.g. `offset`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 4 } to LineCol { line: 103, col: 8 }: Field `Type` should have snake_case name, e.g. `type`
Warning RustcLint("non_snake_case") from LineCol { line: 126, col: 11 } to LineCol { line: 126, col: 31 }: Function `From_mutable_pointer` should have snake_case name, e.g. `from_mutable_pointer`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/File_system/Socket.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 12 } to LineCol { line: 25, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 12 } to LineCol { line: 51, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 12 } to LineCol { line: 57, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/File_system/Functions.rs
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/File_system/Directory.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 139, col: 0 } to LineCol { line: 937, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 12 } to LineCol { line: 34, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 12 } to LineCol { line: 38, col: 16 }: Variable `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 12 } to LineCol { line: 66, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 12 } to LineCol { line: 68, col: 17 }: Variable `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 20 } to LineCol { line: 70, col: 25 }: Variable `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 12 } to LineCol { line: 90, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 12 } to LineCol { line: 107, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 125, col: 12 } to LineCol { line: 125, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
processing crate: ABI, module: /home/alix_anneraud/Git/Xila/Core/Modules/ABI/src/Context.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 7 } to LineCol { line: 6, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 11 } to LineCol { line: 21, col: 38 }: Function `Get_current_task_identifier` should have snake_case name, e.g. `get_current_task_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 17 } to LineCol { line: 25, col: 25 }: Function `Set_task` should have snake_case name, e.g. `set_task`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 33 } to LineCol { line: 25, col: 37 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 20 } to LineCol { line: 27, col: 25 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 17 } to LineCol { line: 36, col: 27 }: Function `Clear_task` should have snake_case name, e.g. `clear_task`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 17 } to LineCol { line: 41, col: 25 }: Function `Call_ABI` should have snake_case name, e.g. `call_abi`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 44 } to LineCol { line: 41, col: 52 }: Parameter `Function` should have snake_case name, e.g. `function`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 12 } to LineCol { line: 46, col: 16 }: Variable `Task` should have snake_case name, e.g. `task`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 7, col: 0 } to LineCol { line: 8, col: 18 }: code is inactive due to #[cfg] directives: target_vendor = "espressif" is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 8 } to LineCol { line: 11, col: 14 }: Module `Native` should have snake_case name, e.g. `native`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 8 } to LineCol { line: 13, col: 12 }: Module `Core` should have snake_case name, e.g. `core`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 8 } to LineCol { line: 16, col: 11 }: Module `Std` should have snake_case name, e.g. `std`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 8 } to LineCol { line: 0, col: 15 }: Module `Network` should have snake_case name, e.g. `network`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 8 } to LineCol { line: 2, col: 14 }: Module `Memory` should have snake_case name, e.g. `memory`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 8 } to LineCol { line: 4, col: 10 }: Module `IO` should have snake_case name, e.g. `io`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 8 } to LineCol { line: 6, col: 16 }: Module `Executor` should have snake_case name, e.g. `executor`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 8 } to LineCol { line: 8, col: 11 }: Module `Log` should have snake_case name, e.g. `log`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 8 } to LineCol { line: 10, col: 14 }: Module `Loader` should have snake_case name, e.g. `loader`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 8 } to LineCol { line: 12, col: 18 }: Module `Drive_file` should have snake_case name, e.g. `drive_file`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 8 } to LineCol { line: 14, col: 15 }: Module `Console` should have snake_case name, e.g. `console`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Console.rs
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 20 } to LineCol { line: 44, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 20 } to LineCol { line: 74, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Drive_file.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 82, col: 0 } to LineCol { line: 123, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 12 } to LineCol { line: 16, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 20 } to LineCol { line: 38, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 46 } to LineCol { line: 56, col: 54 }: Variable `Position` should have snake_case name, e.g. `position`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Loader.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 108, col: 0 } to LineCol { line: 153, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 11 } to LineCol { line: 51, col: 19 }: Function `Add_file` should have snake_case name, e.g. `add_file`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 11 } to LineCol { line: 62, col: 20 }: Function `Add_files` should have snake_case name, e.g. `add_files`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 11 } to LineCol { line: 73, col: 15 }: Function `Load` should have snake_case name, e.g. `load`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 23 } to LineCol { line: 73, col: 34 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 13 } to LineCol { line: 75, col: 24 }: Variable `Source_path` should have snake_case name, e.g. `source_path`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 26 } to LineCol { line: 75, col: 42 }: Variable `Destination_path` should have snake_case name, e.g. `destination_path`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 20 } to LineCol { line: 77, col: 31 }: Variable `Source_file` should have snake_case name, e.g. `source_file`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 16 } to LineCol { line: 80, col: 32 }: Variable `Destination_file` should have snake_case name, e.g. `destination_file`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 20 } to LineCol { line: 90, col: 26 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 20 } to LineCol { line: 92, col: 24 }: Variable `Read` should have snake_case name, e.g. `read`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Log.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 22, col: 0 } to LineCol { line: 43, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Executor.rs
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 11 } to LineCol { line: 16, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 11 } to LineCol { line: 26, col: 15 }: Function `Stop` should have snake_case name, e.g. `stop`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 11 } to LineCol { line: 32, col: 18 }: Function `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 11 } to LineCol { line: 54, col: 14 }: Function `Run` should have snake_case name, e.g. `run`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 7 } to LineCol { line: 77, col: 11 }: Function `Wait` should have snake_case name, e.g. `wait`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 7 } to LineCol { line: 85, col: 13 }: Function `Signal` should have snake_case name, e.g. `signal`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/IO.rs
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 7 } to LineCol { line: 4, col: 16 }: Function `Map_error` should have snake_case name, e.g. `map_error`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 17 } to LineCol { line: 4, col: 22 }: Parameter `Error` should have snake_case name, e.g. `error`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Memory.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 241, col: 0 } to LineCol { line: 448, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 147, col: 10 } to LineCol { line: 147, col: 32 }: Function `Is_slice_within_region` should have snake_case name, e.g. `is_slice_within_region`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 10 } to LineCol { line: 161, col: 16 }: Function `Expand` should have snake_case name, e.g. `expand`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 17 } to LineCol { line: 161, col: 23 }: Parameter `Region` should have snake_case name, e.g. `region`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 43 } to LineCol { line: 161, col: 53 }: Parameter `Tried_size` should have snake_case name, e.g. `tried_size`
Warning RustcLint("non_snake_case") from LineCol { line: 175, col: 8 } to LineCol { line: 175, col: 23 }: Variable `Region_old_size` should have snake_case name, e.g. `region_old_size`
Warning RustcLint("non_snake_case") from LineCol { line: 181, col: 8 } to LineCol { line: 181, col: 18 }: Variable `Difference` should have snake_case name, e.g. `difference`
Warning RustcLint("non_snake_case") from LineCol { line: 188, col: 3 } to LineCol { line: 188, col: 16 }: Function `Get_page_size` should have snake_case name, e.g. `get_page_size`
Warning RustcLint("non_snake_case") from LineCol { line: 192, col: 9 } to LineCol { line: 192, col: 24 }: Function `Round_page_size` should have snake_case name, e.g. `round_page_size`
Warning RustcLint("non_snake_case") from LineCol { line: 192, col: 25 } to LineCol { line: 192, col: 29 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 192, col: 38 } to LineCol { line: 192, col: 47 }: Parameter `Page_size` should have snake_case name, e.g. `page_size`
Warning RustcLint("non_snake_case") from LineCol { line: 196, col: 10 } to LineCol { line: 196, col: 13 }: Function `Map` should have snake_case name, e.g. `map`
Warning RustcLint("non_snake_case") from LineCol { line: 196, col: 27 } to LineCol { line: 196, col: 39 }: Parameter `Capabilities` should have snake_case name, e.g. `capabilities`
Warning RustcLint("non_snake_case") from LineCol { line: 200, col: 8 } to LineCol { line: 200, col: 20 }: Variable `Capabilities` should have snake_case name, e.g. `capabilities`
Warning RustcLint("non_snake_case") from LineCol { line: 206, col: 8 } to LineCol { line: 206, col: 15 }: Variable `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 10 } to LineCol { line: 222, col: 15 }: Function `Remap` should have snake_case name, e.g. `remap`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 16 } to LineCol { line: 222, col: 21 }: Parameter `Slice` should have snake_case name, e.g. `slice`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 60 } to LineCol { line: 222, col: 68 }: Parameter `New_size` should have snake_case name, e.g. `new_size`
Warning RustcLint("non_snake_case") from LineCol { line: 226, col: 8 } to LineCol { line: 226, col: 16 }: Variable `Old_size` should have snake_case name, e.g. `old_size`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 8 } to LineCol { line: 228, col: 15 }: Variable `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 237, col: 10 } to LineCol { line: 237, col: 15 }: Function `Unmap` should have snake_case name, e.g. `unmap`
Warning RustcLint("non_snake_case") from LineCol { line: 237, col: 16 } to LineCol { line: 237, col: 23 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 237, col: 47 } to LineCol { line: 237, col: 51 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 27 } to LineCol { line: 49, col: 34 }: Parameter `Regions` should have snake_case name, e.g. `regions`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 16 } to LineCol { line: 72, col: 31 }: Variable `Capable_regions` should have snake_case name, e.g. `capable_regions`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 16 } to LineCol { line: 77, col: 22 }: Variable `Region` should have snake_case name, e.g. `region`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 16 } to LineCol { line: 84, col: 31 }: Variable `Capable_regions` should have snake_case name, e.g. `capable_regions`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 16 } to LineCol { line: 89, col: 22 }: Variable `Region` should have snake_case name, e.g. `region`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 24 } to LineCol { line: 93, col: 30 }: Variable `Result` should have snake_case name, e.g. `result`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 32 } to LineCol { line: 104, col: 39 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 54 } to LineCol { line: 104, col: 60 }: Parameter `Layout` should have snake_case name, e.g. `layout`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 16 } to LineCol { line: 108, col: 22 }: Variable `Region` should have snake_case name, e.g. `region`
Warning RustcLint("non_snake_case") from LineCol { line: 112, col: 24 } to LineCol { line: 112, col: 30 }: Variable `Region` should have snake_case name, e.g. `region`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Network/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 12 }: Module `Resolver` should have snake_case name, e.g. `resolver`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 10 }: Module `Socket` should have snake_case name, e.g. `socket`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Network/Socket.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 356, col: 0 } to LineCol { line: 844, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 9 } to LineCol { line: 26, col: 24 }: Function `Into_socketaddr` should have snake_case name, e.g. `into_socketaddr`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 25 } to LineCol { line: 26, col: 27 }: Parameter `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 38 } to LineCol { line: 26, col: 42 }: Parameter `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 22 } to LineCol { line: 34, col: 24 }: Variable `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 8 } to LineCol { line: 43, col: 12 }: Variable `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 9 } to LineCol { line: 48, col: 25 }: Function `Into_IP_and_port` should have snake_case name, e.g. `into_ip_and_port`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 26 } to LineCol { line: 48, col: 40 }: Parameter `Socket_address` should have snake_case name, e.g. `socket_address`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 8 } to LineCol { line: 54, col: 12 }: Variable `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 7 } to LineCol { line: 66, col: 17 }: Function `New_socket` should have snake_case name, e.g. `new_socket`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 25 } to LineCol { line: 66, col: 31 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 61 } to LineCol { line: 66, col: 71 }: Parameter `Raw_socket` should have snake_case name, e.g. `raw_socket`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 7 } to LineCol { line: 80, col: 17 }: Function `Get_socket` should have snake_case name, e.g. `get_socket`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 25 } to LineCol { line: 80, col: 31 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 7 } to LineCol { line: 90, col: 25 }: Function `Get_socket_mutable` should have snake_case name, e.g. `get_socket_mutable`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 33 } to LineCol { line: 90, col: 39 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 7 } to LineCol { line: 100, col: 20 }: Function `Remove_socket` should have snake_case name, e.g. `remove_socket`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 28 } to LineCol { line: 100, col: 34 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 26 } to LineCol { line: 117, col: 36 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 20 } to LineCol { line: 120, col: 26 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 12 } to LineCol { line: 169, col: 22 }: Variable `TCP_stream` should have snake_case name, e.g. `tcp_stream`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 12 } to LineCol { line: 185, col: 24 }: Variable `TCP_listener` should have snake_case name, e.g. `tcp_listener`
Warning RustcLint("non_snake_case") from LineCol { line: 187, col: 13 } to LineCol { line: 187, col: 23 }: Variable `TCP_stream` should have snake_case name, e.g. `tcp_stream`
Warning RustcLint("non_snake_case") from LineCol { line: 187, col: 25 } to LineCol { line: 187, col: 32 }: Variable `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 197, col: 19 } to LineCol { line: 197, col: 25 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 197, col: 55 } to LineCol { line: 197, col: 59 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 200, col: 16 } to LineCol { line: 200, col: 22 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 209, col: 22 } to LineCol { line: 209, col: 28 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 209, col: 58 } to LineCol { line: 209, col: 62 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 212, col: 16 } to LineCol { line: 212, col: 22 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 214, col: 12 } to LineCol { line: 214, col: 17 }: Variable `Bytes` should have snake_case name, e.g. `bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 12 } to LineCol { line: 228, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 230, col: 13 } to LineCol { line: 230, col: 18 }: Variable `Bytes` should have snake_case name, e.g. `bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 230, col: 20 } to LineCol { line: 230, col: 27 }: Variable `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 13 } to LineCol { line: 234, col: 15 }: Variable `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 17 } to LineCol { line: 234, col: 21 }: Variable `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 248, col: 12 } to LineCol { line: 248, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 250, col: 12 } to LineCol { line: 250, col: 19 }: Variable `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 265, col: 12 } to LineCol { line: 265, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 267, col: 12 } to LineCol { line: 267, col: 19 }: Variable `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 280, col: 12 } to LineCol { line: 280, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 282, col: 12 } to LineCol { line: 282, col: 19 }: Variable `Address` should have snake_case name, e.g. `address`
Warning RustcLint("non_snake_case") from LineCol { line: 296, col: 12 } to LineCol { line: 296, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 314, col: 12 } to LineCol { line: 314, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 331, col: 12 } to LineCol { line: 331, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 333, col: 12 } to LineCol { line: 333, col: 19 }: Variable `Timeout` should have snake_case name, e.g. `timeout`
Warning RustcLint("non_snake_case") from LineCol { line: 346, col: 12 } to LineCol { line: 346, col: 18 }: Variable `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 348, col: 12 } to LineCol { line: 348, col: 19 }: Variable `Timeout` should have snake_case name, e.g. `timeout`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Network/Resolver.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Std/Network/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 7 } to LineCol { line: 4, col: 24 }: Function `Into_socket_error` should have snake_case name, e.g. `into_socket_error`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 25 } to LineCol { line: 4, col: 30 }: Parameter `Error` should have snake_case name, e.g. `error`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Core/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 8 }: Module `Null` should have snake_case name, e.g. `null`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Core/Null.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 20 } to LineCol { line: 9, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 11 }: Module `Devices` should have snake_case name, e.g. `devices`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 8 }: Module `Time` should have snake_case name, e.g. `time`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Time.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 20 }: Variable `Duration` should have snake_case name, e.g. `duration`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 10 }: Module `Random` should have snake_case name, e.g. `random`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 8 } to LineCol { line: 2, col: 21 }: Module `Window_screen` should have snake_case name, e.g. `window_screen`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 12 }: Module `Keyboard` should have snake_case name, e.g. `keyboard`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 11 }: Module `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 10 }: Module `Screen` should have snake_case name, e.g. `screen`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 10 }: Module `Window` should have snake_case name, e.g. `window`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 11 }: Module `Wrapper` should have snake_case name, e.g. `wrapper`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 7 } to LineCol { line: 17, col: 10 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 11 } to LineCol { line: 17, col: 21 }: Parameter `Resolution` should have snake_case name, e.g. `resolution`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 8 } to LineCol { line: 20, col: 21 }: Variable `Screen_device` should have snake_case name, e.g. `screen_device`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 8 } to LineCol { line: 22, col: 22 }: Variable `Pointer_device` should have snake_case name, e.g. `pointer_device`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 8 } to LineCol { line: 24, col: 23 }: Variable `Keyboard_device` should have snake_case name, e.g. `keyboard_device`
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/Wrapper.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/Window.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/Screen.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/Pointer.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Window_screen/Keyboard.rs
processing crate: Drivers, module: /home/alix_anneraud/Git/Xila/Core/Modules/Drivers/src/Native/Devices/Random.rs
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 20 } to LineCol { line: 17, col: 27 }: Parameter `_Buffer` should have snake_case name, e.g. `_buffer`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 13 }: Module `Callbacks` should have snake_case name, e.g. `callbacks`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 17 }: Module `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 13 }: Module `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 8 }: Module `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 9 }: Module `Flags` should have snake_case name, e.g. `flags`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/Flags.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 7 } to LineCol { line: 3, col: 20 }: Function `Convert_flags` should have snake_case name, e.g. `convert_flags`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 21 } to LineCol { line: 3, col: 26 }: Parameter `Flags` should have snake_case name, e.g. `flags`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/File_system.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 623, col: 0 } to LineCol { line: 705, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 16 } to LineCol { line: 31, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 12 } to LineCol { line: 33, col: 16 }: Variable `Keys` should have snake_case name, e.g. `keys`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 12 } to LineCol { line: 35, col: 15 }: Variable `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 12 } to LineCol { line: 41, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 12 } to LineCol { line: 44, col: 24 }: Variable `_Read_buffer` should have snake_case name, e.g. `_read_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 12 } to LineCol { line: 51, col: 25 }: Variable `_Write_buffer` should have snake_case name, e.g. `_write_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 12 } to LineCol { line: 58, col: 30 }: Variable `_Look_ahead_buffer` should have snake_case name, e.g. `_look_ahead_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 12 } to LineCol { line: 67, col: 19 }: Variable `_Device` should have snake_case name, e.g. `_device`
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 164, col: 4 } to LineCol { line: 165, col: 63 }: code is inactive due to #[cfg] directives: target_pointer_width = "32" is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 36 } to LineCol { line: 80, col: 46 }: Parameter `Cache_size` should have snake_case name, e.g. `cache_size`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 12 } to LineCol { line: 86, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 12 } to LineCol { line: 97, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 16 } to LineCol { line: 99, col: 27 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 12 } to LineCol { line: 108, col: 17 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 11 } to LineCol { line: 120, col: 17 }: Function `Format` should have snake_case name, e.g. `format`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 18 } to LineCol { line: 120, col: 24 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 39 } to LineCol { line: 120, col: 49 }: Parameter `Cache_size` should have snake_case name, e.g. `cache_size`
Warning RustcLint("non_snake_case") from LineCol { line: 126, col: 12 } to LineCol { line: 126, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 12 } to LineCol { line: 137, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 16 } to LineCol { line: 139, col: 27 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 7 } to LineCol { line: 148, col: 38 }: Function `Borrow_mutable_inner_2_splitted` should have snake_case name, e.g. `borrow_mutable_inner_2_splitted`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 11 } to LineCol { line: 169, col: 18 }: Function `Is_file` should have snake_case name, e.g. `is_file`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 19 } to LineCol { line: 169, col: 23 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 7 } to LineCol { line: 173, col: 17 }: Function `Read_inner` should have snake_case name, e.g. `read_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 179, col: 7 } to LineCol { line: 179, col: 18 }: Function `Write_inner` should have snake_case name, e.g. `write_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 202, col: 12 } to LineCol { line: 202, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 212, col: 12 } to LineCol { line: 212, col: 27 }: Variable `File_identifier` should have snake_case name, e.g. `file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 226, col: 20 } to LineCol { line: 226, col: 24 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 229, col: 12 } to LineCol { line: 229, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 239, col: 24 } to LineCol { line: 239, col: 28 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 243, col: 12 } to LineCol { line: 243, col: 16 }: Variable `Keys` should have snake_case name, e.g. `keys`
Warning RustcLint("non_snake_case") from LineCol { line: 246, col: 21 } to LineCol { line: 246, col: 24 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 251, col: 12 } to LineCol { line: 251, col: 15 }: Variable `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 266, col: 16 } to LineCol { line: 266, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 268, col: 12 } to LineCol { line: 268, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 273, col: 12 } to LineCol { line: 273, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 275, col: 12 } to LineCol { line: 275, col: 27 }: Variable `File_identifier` should have snake_case name, e.g. `file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 297, col: 12 } to LineCol { line: 297, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 302, col: 12 } to LineCol { line: 302, col: 27 }: Variable `File_identifier` should have snake_case name, e.g. `file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 302, col: 42 } to LineCol { line: 302, col: 50 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 333, col: 21 } to LineCol { line: 333, col: 25 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 336, col: 16 } to LineCol { line: 336, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 353, col: 13 } to LineCol { line: 353, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 353, col: 26 } to LineCol { line: 353, col: 36 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 355, col: 12 } to LineCol { line: 355, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 370, col: 13 } to LineCol { line: 370, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 370, col: 26 } to LineCol { line: 370, col: 36 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 372, col: 12 } to LineCol { line: 372, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 379, col: 21 } to LineCol { line: 379, col: 27 }: Parameter `Source` should have snake_case name, e.g. `source`
Warning RustcLint("non_snake_case") from LineCol { line: 379, col: 41 } to LineCol { line: 379, col: 52 }: Parameter `Destination` should have snake_case name, e.g. `destination`
Warning RustcLint("non_snake_case") from LineCol { line: 382, col: 12 } to LineCol { line: 382, col: 23 }: Variable `Destination` should have snake_case name, e.g. `destination`
Warning RustcLint("non_snake_case") from LineCol { line: 385, col: 16 } to LineCol { line: 385, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 405, col: 13 } to LineCol { line: 405, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 405, col: 26 } to LineCol { line: 405, col: 36 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 407, col: 12 } to LineCol { line: 407, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 414, col: 20 } to LineCol { line: 414, col: 24 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 417, col: 13 } to LineCol { line: 417, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 417, col: 26 } to LineCol { line: 417, col: 36 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 419, col: 12 } to LineCol { line: 419, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 426, col: 29 } to LineCol { line: 426, col: 33 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 429, col: 13 } to LineCol { line: 429, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 429, col: 26 } to LineCol { line: 429, col: 36 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 429, col: 38 } to LineCol { line: 429, col: 54 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 449, col: 27 } to LineCol { line: 449, col: 31 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 456, col: 23 } to LineCol { line: 456, col: 27 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 459, col: 12 } to LineCol { line: 459, col: 18 }: Variable `Result` should have snake_case name, e.g. `result`
Warning RustcLint("non_snake_case") from LineCol { line: 484, col: 12 } to LineCol { line: 484, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 486, col: 12 } to LineCol { line: 486, col: 27 }: Variable `File_identifier` should have snake_case name, e.g. `file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 504, col: 29 } to LineCol { line: 504, col: 33 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 507, col: 13 } to LineCol { line: 507, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 507, col: 29 } to LineCol { line: 507, col: 45 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 509, col: 12 } to LineCol { line: 509, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 523, col: 13 } to LineCol { line: 523, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 523, col: 29 } to LineCol { line: 523, col: 45 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 525, col: 12 } to LineCol { line: 525, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 532, col: 31 } to LineCol { line: 532, col: 35 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 535, col: 13 } to LineCol { line: 535, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 535, col: 29 } to LineCol { line: 535, col: 45 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 537, col: 12 } to LineCol { line: 537, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 546, col: 30 } to LineCol { line: 546, col: 34 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 549, col: 13 } to LineCol { line: 549, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 549, col: 29 } to LineCol { line: 549, col: 45 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 551, col: 16 } to LineCol { line: 551, col: 25 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 564, col: 8 } to LineCol { line: 564, col: 12 }: Parameter `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 572, col: 12 } to LineCol { line: 572, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 580, col: 37 } to LineCol { line: 580, col: 41 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 583, col: 13 } to LineCol { line: 583, col: 24 }: Variable `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 583, col: 29 } to LineCol { line: 583, col: 45 }: Variable `Open_directories` should have snake_case name, e.g. `open_directories`
Warning RustcLint("non_snake_case") from LineCol { line: 585, col: 12 } to LineCol { line: 585, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 604, col: 37 } to LineCol { line: 604, col: 41 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 610, col: 27 } to LineCol { line: 610, col: 31 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 613, col: 16 } to LineCol { line: 613, col: 26 }: Variable `Open_files` should have snake_case name, e.g. `open_files`
Warning RustcLint("non_snake_case") from LineCol { line: 615, col: 12 } to LineCol { line: 615, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/File.rs
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 3 } to LineCol { line: 14, col: 19 }: Function `Convert_position` should have snake_case name, e.g. `convert_position`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 20 } to LineCol { line: 14, col: 28 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 29 } to LineCol { line: 16, col: 37 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 31 } to LineCol { line: 20, col: 39 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 27 } to LineCol { line: 24, col: 35 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 16 } to LineCol { line: 42, col: 26 }: Variable `Attributes` should have snake_case name, e.g. `attributes`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 16 } to LineCol { line: 44, col: 25 }: Variable `_Metadata` should have snake_case name, e.g. `_metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 16 } to LineCol { line: 46, col: 23 }: Variable `_Buffer` should have snake_case name, e.g. `_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 12 } to LineCol { line: 71, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 12 } to LineCol { line: 73, col: 27 }: Variable `Little_fs_flags` should have snake_case name, e.g. `little_fs_flags`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 12 } to LineCol { line: 75, col: 27 }: Variable `Metadata_buffer` should have snake_case name, e.g. `metadata_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 12 } to LineCol { line: 77, col: 21 }: Variable `Attribute` should have snake_case name, e.g. `attribute`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 16 } to LineCol { line: 83, col: 22 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 12 } to LineCol { line: 86, col: 25 }: Variable `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 12 } to LineCol { line: 94, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 16 } to LineCol { line: 97, col: 20 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 11 } to LineCol { line: 122, col: 16 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 23 } to LineCol { line: 122, col: 34 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 11 } to LineCol { line: 132, col: 15 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 149, col: 11 } to LineCol { line: 149, col: 16 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 11 } to LineCol { line: 166, col: 23 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 12 } to LineCol { line: 173, col: 18 }: Variable `Offset` should have snake_case name, e.g. `offset`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 11 } to LineCol { line: 185, col: 16 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 24 } to LineCol { line: 185, col: 35 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 196, col: 11 } to LineCol { line: 196, col: 25 }: Function `Get_statistics` should have snake_case name, e.g. `get_statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 202, col: 12 } to LineCol { line: 202, col: 16 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 204, col: 12 } to LineCol { line: 204, col: 22 }: Variable `Statistics` should have snake_case name, e.g. `statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 221, col: 11 } to LineCol { line: 221, col: 23 }: Function `Get_metadata` should have snake_case name, e.g. `get_metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 12 } to LineCol { line: 228, col: 22 }: Variable `Attributes` should have snake_case name, e.g. `attributes`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 12 } to LineCol { line: 234, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 239, col: 11 } to LineCol { line: 239, col: 19 }: Function `Get_mode` should have snake_case name, e.g. `get_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 243, col: 11 } to LineCol { line: 243, col: 19 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 243, col: 27 } to LineCol { line: 243, col: 38 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 254, col: 11 } to LineCol { line: 254, col: 33 }: Function `Get_metadata_from_path` should have snake_case name, e.g. `get_metadata_from_path`
Warning RustcLint("non_snake_case") from LineCol { line: 260, col: 16 } to LineCol { line: 260, col: 24 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 275, col: 11 } to LineCol { line: 275, col: 33 }: Function `Set_metadata_from_path` should have snake_case name, e.g. `set_metadata_from_path`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 14 } to LineCol { line: 29, col: 28 }: Function `Convert_result` should have snake_case name, e.g. `convert_result`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 29 } to LineCol { line: 29, col: 34 }: Parameter `Error` should have snake_case name, e.g. `error`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/Directory.rs
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 11 } to LineCol { line: 35, col: 15 }: Function `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 16 } to LineCol { line: 35, col: 27 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 58 } to LineCol { line: 35, col: 62 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 12 } to LineCol { line: 38, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 12 } to LineCol { line: 40, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 11 } to LineCol { line: 55, col: 17 }: Function `Rewind` should have snake_case name, e.g. `rewind`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 29 } to LineCol { line: 55, col: 40 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 11 } to LineCol { line: 66, col: 23 }: Function `Get_position` should have snake_case name, e.g. `get_position`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 11 } to LineCol { line: 80, col: 23 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 11 } to LineCol { line: 96, col: 15 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 16 } to LineCol { line: 102, col: 28 }: Variable `Informations` should have snake_case name, e.g. `informations`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 12 } to LineCol { line: 104, col: 18 }: Variable `Result` should have snake_case name, e.g. `result`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 12 } to LineCol { line: 118, col: 16 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 121, col: 12 } to LineCol { line: 121, col: 16 }: Variable `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 127, col: 12 } to LineCol { line: 127, col: 17 }: Variable `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 11 } to LineCol { line: 137, col: 16 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 28 } to LineCol { line: 137, col: 39 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/Configuration.rs
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 11 } to LineCol { line: 50, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 12 } to LineCol { line: 69, col: 23 }: Variable `Block_count` should have snake_case name, e.g. `block_count`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 17 } to LineCol { line: 89, col: 30 }: Function `Set_read_size` should have snake_case name, e.g. `set_read_size`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 41 } to LineCol { line: 89, col: 50 }: Parameter `Read_size` should have snake_case name, e.g. `read_size`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 17 } to LineCol { line: 94, col: 33 }: Function `Set_program_size` should have snake_case name, e.g. `set_program_size`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 44 } to LineCol { line: 94, col: 56 }: Parameter `Program_size` should have snake_case name, e.g. `program_size`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 17 } to LineCol { line: 99, col: 33 }: Function `Set_block_cycles` should have snake_case name, e.g. `set_block_cycles`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 44 } to LineCol { line: 99, col: 56 }: Parameter `Block_cycles` should have snake_case name, e.g. `block_cycles`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 17 } to LineCol { line: 104, col: 38 }: Function `Set_maximum_file_size` should have snake_case name, e.g. `set_maximum_file_size`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 49 } to LineCol { line: 104, col: 66 }: Parameter `Maximum_file_size` should have snake_case name, e.g. `maximum_file_size`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 17 } to LineCol { line: 109, col: 44 }: Function `Set_maximum_attributes_size` should have snake_case name, e.g. `set_maximum_attributes_size`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 55 } to LineCol { line: 109, col: 78 }: Parameter `Maximum_attributes_size` should have snake_case name, e.g. `maximum_attributes_size`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 17 } to LineCol { line: 114, col: 38 }: Function `Set_maximum_name_size` should have snake_case name, e.g. `set_maximum_name_size`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 49 } to LineCol { line: 114, col: 66 }: Parameter `Maximum_name_size` should have snake_case name, e.g. `maximum_name_size`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 17 } to LineCol { line: 119, col: 31 }: Function `Set_cache_size` should have snake_case name, e.g. `set_cache_size`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 42 } to LineCol { line: 119, col: 52 }: Parameter `Cache_size` should have snake_case name, e.g. `cache_size`
Warning RustcLint("non_snake_case") from LineCol { line: 124, col: 17 } to LineCol { line: 124, col: 36 }: Function `Set_look_ahead_size` should have snake_case name, e.g. `set_look_ahead_size`
Warning RustcLint("non_snake_case") from LineCol { line: 124, col: 47 } to LineCol { line: 124, col: 62 }: Parameter `Look_ahead_size` should have snake_case name, e.g. `look_ahead_size`
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 17 } to LineCol { line: 129, col: 38 }: Function `Set_compact_threshold` should have snake_case name, e.g. `set_compact_threshold`
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 49 } to LineCol { line: 129, col: 66 }: Parameter `Compact_threshold` should have snake_case name, e.g. `compact_threshold`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 17 } to LineCol { line: 134, col: 37 }: Function `Set_metadata_maximum` should have snake_case name, e.g. `set_metadata_maximum`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 48 } to LineCol { line: 134, col: 63 }: Parameter `Metadata_maxium` should have snake_case name, e.g. `metadata_maxium`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 17 } to LineCol { line: 139, col: 35 }: Function `Set_inline_maximum` should have snake_case name, e.g. `set_inline_maximum`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 46 } to LineCol { line: 139, col: 60 }: Parameter `Inline_maximum` should have snake_case name, e.g. `inline_maximum`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 16 } to LineCol { line: 148, col: 29 }: Parameter `Configuration` should have snake_case name, e.g. `configuration`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 12 } to LineCol { line: 153, col: 29 }: Variable `LFS_Configuration` should have snake_case name, e.g. `lfs_configuration`
processing crate: LittleFS, module: /home/alix_anneraud/Git/Xila/Core/Modules/LittleFS/src/Callbacks.rs
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 25 } to LineCol { line: 8, col: 38 }: Function `Read_callback` should have snake_case name, e.g. `read_callback`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 8 } to LineCol { line: 17, col: 14 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 8 } to LineCol { line: 19, col: 18 }: Variable `Block_size` should have snake_case name, e.g. `block_size`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 8 } to LineCol { line: 21, col: 16 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 25 } to LineCol { line: 44, col: 42 }: Function `Programm_callback` should have snake_case name, e.g. `programm_callback`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 8 } to LineCol { line: 53, col: 14 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 8 } to LineCol { line: 55, col: 18 }: Variable `Block_size` should have snake_case name, e.g. `block_size`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 8 } to LineCol { line: 57, col: 16 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 25 } to LineCol { line: 80, col: 39 }: Function `Erase_callback` should have snake_case name, e.g. `erase_callback`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 8 } to LineCol { line: 86, col: 18 }: Variable `Block_size` should have snake_case name, e.g. `block_size`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 8 } to LineCol { line: 88, col: 16 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 25 } to LineCol { line: 111, col: 39 }: Function `Flush_callback` should have snake_case name, e.g. `flush_callback`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 40 } to LineCol { line: 111, col: 53 }: Parameter `Configuration` should have snake_case name, e.g. `configuration`
processing crate: Peripherals, module: /home/alix_anneraud/Git/Xila/Core/Modules/Peripherals/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 7 }: Module `Pin` should have snake_case name, e.g. `pin`
processing crate: Peripherals, module: /home/alix_anneraud/Git/Xila/Core/Modules/Peripherals/src/Pin.rs
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 16 } to LineCol { line: 12, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 16 } to LineCol { line: 31, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 17 } to LineCol { line: 76, col: 26 }: Function `Get_level` should have snake_case name, e.g. `get_level`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 17 } to LineCol { line: 80, col: 30 }: Function `Get_direction` should have snake_case name, e.g. `get_direction`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 17 } to LineCol { line: 84, col: 25 }: Function `Get_pull` should have snake_case name, e.g. `get_pull`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 11 } to LineCol { line: 88, col: 20 }: Function `Set_level` should have snake_case name, e.g. `set_level`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 32 } to LineCol { line: 88, col: 37 }: Parameter `Level` should have snake_case name, e.g. `level`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 11 } to LineCol { line: 92, col: 24 }: Function `Set_direction` should have snake_case name, e.g. `set_direction`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 36 } to LineCol { line: 92, col: 45 }: Parameter `Direction` should have snake_case name, e.g. `direction`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 11 } to LineCol { line: 96, col: 19 }: Function `Set_pull` should have snake_case name, e.g. `set_pull`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 31 } to LineCol { line: 96, col: 35 }: Parameter `Pull` should have snake_case name, e.g. `pull`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 11 } to LineCol { line: 100, col: 14 }: Function `Set` should have snake_case name, e.g. `set`
Warning RustcLint("non_snake_case") from LineCol { line: 123, col: 16 } to LineCol { line: 123, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 16 } to LineCol { line: 139, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 8 }: Module `Area` should have snake_case name, e.g. `area`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 9 }: Module `Color` should have snake_case name, e.g. `color`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 11 }: Module `Display` should have snake_case name, e.g. `display`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 15 }: Module `Draw_buffer` should have snake_case name, e.g. `draw_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 9 }: Module `Event` should have snake_case name, e.g. `event`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 9 }: Module `Input` should have snake_case name, e.g. `input`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 9 }: Module `Point` should have snake_case name, e.g. `point`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 4 } to LineCol { line: 14, col: 10 }: Module `Screen` should have snake_case name, e.g. `screen`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 4 } to LineCol { line: 15, col: 10 }: Module `Window` should have snake_case name, e.g. `window`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 8 } to LineCol { line: 17, col: 12 }: Module `LVGL` should have snake_case name, e.g. `lvgl`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/LVGL.rs
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 37 } to LineCol { line: 38, col: 43 }: Parameter `Object` should have snake_case name, e.g. `object`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Window.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Screen.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Point.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 21 } to LineCol { line: 9, col: 22 }: Parameter `X` should have snake_case name, e.g. `x`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 29 } to LineCol { line: 9, col: 30 }: Parameter `Y` should have snake_case name, e.g. `y`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 17 } to LineCol { line: 13, col: 22 }: Function `Get_x` should have snake_case name, e.g. `get_x`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 17 } to LineCol { line: 17, col: 22 }: Function `Get_y` should have snake_case name, e.g. `get_y`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 11 } to LineCol { line: 21, col: 16 }: Function `Split` should have snake_case name, e.g. `split`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 11 } to LineCol { line: 25, col: 16 }: Function `Set_x` should have snake_case name, e.g. `set_x`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 27 } to LineCol { line: 25, col: 32 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 11 } to LineCol { line: 30, col: 16 }: Function `Set_y` should have snake_case name, e.g. `set_y`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 27 } to LineCol { line: 30, col: 32 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 11 } to LineCol { line: 35, col: 14 }: Function `Set` should have snake_case name, e.g. `set`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 25 } to LineCol { line: 35, col: 26 }: Parameter `X` should have snake_case name, e.g. `x`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 33 } to LineCol { line: 35, col: 34 }: Parameter `Y` should have snake_case name, e.g. `y`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 23 }: Function `Get_distance` should have snake_case name, e.g. `get_distance`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 31 } to LineCol { line: 41, col: 36 }: Parameter `Other` should have snake_case name, e.g. `other`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Manager.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 11 }: Module `Binding` should have snake_case name, e.g. `binding`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 4 } to LineCol { line: 1, col: 8 }: Module `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 9 }: Module `Input` should have snake_case name, e.g. `input`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 7 }: Module `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 9 }: Module `State` should have snake_case name, e.g. `state`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `Type` should have snake_case name, e.g. `type`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/Type.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/State.rs
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 16 } to LineCol { line: 28, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/Key.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/Input.rs
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 36 } to LineCol { line: 34, col: 40 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 12 } to LineCol { line: 36, col: 21 }: Variable `User_data` should have snake_case name, e.g. `user_data`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 12 } to LineCol { line: 38, col: 24 }: Variable `Input_device` should have snake_case name, e.g. `input_device`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/Data.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 8 } to LineCol { line: 9, col: 16 }: Field `Continue` should have snake_case name, e.g. `continue`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 40 } to LineCol { line: 27, col: 45 }: Parameter `State` should have snake_case name, e.g. `state`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 59 } to LineCol { line: 27, col: 62 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 74 } to LineCol { line: 27, col: 82 }: Parameter `Continue` should have snake_case name, e.g. `r#continue`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 17 } to LineCol { line: 36, col: 29 }: Function `Get_continue` should have snake_case name, e.g. `get_continue`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 17 } to LineCol { line: 40, col: 26 }: Function `Get_point` should have snake_case name, e.g. `get_point`
Warning RustcLint("non_snake_case") from LineCol { line: 44, col: 17 } to LineCol { line: 44, col: 26 }: Function `Get_touch` should have snake_case name, e.g. `get_touch`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 17 } to LineCol { line: 48, col: 24 }: Function `Get_key` should have snake_case name, e.g. `get_key`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 17 } to LineCol { line: 52, col: 29 }: Function `Set_continue` should have snake_case name, e.g. `set_continue`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 41 } to LineCol { line: 52, col: 49 }: Parameter `Continue` should have snake_case name, e.g. `r#continue`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 11 } to LineCol { line: 56, col: 20 }: Function `Set_point` should have snake_case name, e.g. `set_point`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 32 } to LineCol { line: 56, col: 37 }: Parameter `Point` should have snake_case name, e.g. `point`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 11 } to LineCol { line: 60, col: 20 }: Function `Set_state` should have snake_case name, e.g. `set_state`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 32 } to LineCol { line: 60, col: 37 }: Parameter `Touch` should have snake_case name, e.g. `touch`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 11 } to LineCol { line: 64, col: 18 }: Function `Set_key` should have snake_case name, e.g. `set_key`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 30 } to LineCol { line: 64, col: 33 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 11 } to LineCol { line: 68, col: 14 }: Function `Set` should have snake_case name, e.g. `set`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 26 } to LineCol { line: 68, col: 31 }: Parameter `Point` should have snake_case name, e.g. `point`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 45 } to LineCol { line: 68, col: 50 }: Parameter `Touch` should have snake_case name, e.g. `touch`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 16 } to LineCol { line: 77, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 12 } to LineCol { line: 100, col: 17 }: Variable `State` should have snake_case name, e.g. `state`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Input/Binding.rs
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 25 } to LineCol { line: 11, col: 50 }: Function `Binding_callback_function` should have snake_case name, e.g. `binding_callback_function`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 8 } to LineCol { line: 15, col: 17 }: Variable `User_data` should have snake_case name, e.g. `user_data`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 8 } to LineCol { line: 17, col: 14 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 24 }: Variable `Pointer_data` should have snake_case name, e.g. `pointer_data`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Event.rs
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 38 } to LineCol { line: 10, col: 44 }: Parameter `Target` should have snake_case name, e.g. `target`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 67 } to LineCol { line: 10, col: 70 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 11 } to LineCol { line: 18, col: 19 }: Function `Get_code` should have snake_case name, e.g. `get_code`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 11 } to LineCol { line: 22, col: 21 }: Function `Get_target` should have snake_case name, e.g. `get_target`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 11 } to LineCol { line: 26, col: 18 }: Function `Get_key` should have snake_case name, e.g. `get_key`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 17 } to LineCol { line: 138, col: 31 }: Function `From_LVGL_code` should have snake_case name, e.g. `from_lvgl_code`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 32 } to LineCol { line: 138, col: 36 }: Parameter `Code` should have snake_case name, e.g. `code`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Error.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Draw_buffer.rs
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 13 } to LineCol { line: 32, col: 40 }: Function `Get_recommended_buffer_size` should have snake_case name, e.g. `get_recommended_buffer_size`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 41 } to LineCol { line: 32, col: 51 }: Parameter `Resolution` should have snake_case name, e.g. `resolution`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 13 } to LineCol { line: 36, col: 36 }: Function `Get_minimal_buffer_size` should have snake_case name, e.g. `get_minimal_buffer_size`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 37 } to LineCol { line: 36, col: 47 }: Parameter `Resolution` should have snake_case name, e.g. `resolution`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 31 } to LineCol { line: 19, col: 41 }: Parameter `Resolution` should have snake_case name, e.g. `resolution`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 11 } to LineCol { line: 25, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 15 } to LineCol { line: 25, col: 26 }: Parameter `Buffer_size` should have snake_case name, e.g. `buffer_size`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Display.rs
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 12 }: Module `ARGB8888` should have snake_case name, e.g. `argb8888`
Warning RustcLint("non_snake_case") from LineCol { line: 1, col: 8 } to LineCol { line: 1, col: 15 }: Module `Palette` should have snake_case name, e.g. `palette`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 10 }: Module `RGB565` should have snake_case name, e.g. `rgb565`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 10 }: Module `RGB888` should have snake_case name, e.g. `rgb888`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 12 }: Module `RGBA8888` should have snake_case name, e.g. `rgba8888`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/RGBA8888.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 108, col: 0 } to LineCol { line: 162, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 30 } to LineCol { line: 21, col: 35 }: Parameter `Green` should have snake_case name, e.g. `green`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 41 } to LineCol { line: 21, col: 45 }: Parameter `Blue` should have snake_case name, e.g. `blue`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 51 } to LineCol { line: 21, col: 56 }: Parameter `Alpha` should have snake_case name, e.g. `alpha`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 17 } to LineCol { line: 29, col: 28 }: Function `From_RGB565` should have snake_case name, e.g. `from_rgb565`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 29 } to LineCol { line: 29, col: 34 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 17 } to LineCol { line: 38, col: 23 }: Function `As_u32` should have snake_case name, e.g. `as_u32`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 17 } to LineCol { line: 42, col: 24 }: Function `Get_red` should have snake_case name, e.g. `get_red`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 17 } to LineCol { line: 46, col: 26 }: Function `Get_green` should have snake_case name, e.g. `get_green`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 17 } to LineCol { line: 50, col: 25 }: Function `Get_blue` should have snake_case name, e.g. `get_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 17 } to LineCol { line: 54, col: 26 }: Function `Get_alpha` should have snake_case name, e.g. `get_alpha`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 17 } to LineCol { line: 58, col: 24 }: Function `Set_red` should have snake_case name, e.g. `set_red`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 35 } to LineCol { line: 58, col: 40 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 17 } to LineCol { line: 63, col: 26 }: Function `Set_green` should have snake_case name, e.g. `set_green`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 37 } to LineCol { line: 63, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 17 } to LineCol { line: 68, col: 25 }: Function `Set_blue` should have snake_case name, e.g. `set_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 36 } to LineCol { line: 68, col: 41 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 17 } to LineCol { line: 73, col: 26 }: Function `Set_alpha` should have snake_case name, e.g. `set_alpha`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 37 } to LineCol { line: 73, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/RGB888.rs
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 17 } to LineCol { line: 13, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 21 } to LineCol { line: 13, col: 24 }: Parameter `Red` should have snake_case name, e.g. `red`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 30 } to LineCol { line: 13, col: 35 }: Parameter `Green` should have snake_case name, e.g. `green`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 41 } to LineCol { line: 13, col: 45 }: Parameter `Blue` should have snake_case name, e.g. `blue`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 17 } to LineCol { line: 21, col: 24 }: Function `Get_red` should have snake_case name, e.g. `get_red`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 17 } to LineCol { line: 25, col: 26 }: Function `Get_green` should have snake_case name, e.g. `get_green`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 17 } to LineCol { line: 29, col: 25 }: Function `Get_blue` should have snake_case name, e.g. `get_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 17 } to LineCol { line: 33, col: 24 }: Function `Set_red` should have snake_case name, e.g. `set_red`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 35 } to LineCol { line: 33, col: 40 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 17 } to LineCol { line: 38, col: 26 }: Function `Set_green` should have snake_case name, e.g. `set_green`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 37 } to LineCol { line: 38, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 17 } to LineCol { line: 43, col: 25 }: Function `Set_blue` should have snake_case name, e.g. `set_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 36 } to LineCol { line: 43, col: 41 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 17 } to LineCol { line: 48, col: 32 }: Function `From_LVGL_color` should have snake_case name, e.g. `from_lvgl_color`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 33 } to LineCol { line: 48, col: 38 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 17 } to LineCol { line: 52, col: 32 }: Function `Into_LVGL_color` should have snake_case name, e.g. `into_lvgl_color`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/RGB565.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 91, col: 0 } to LineCol { line: 127, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 30 } to LineCol { line: 20, col: 35 }: Parameter `Green` should have snake_case name, e.g. `green`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 41 } to LineCol { line: 20, col: 45 }: Parameter `Blue` should have snake_case name, e.g. `blue`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 17 } to LineCol { line: 24, col: 23 }: Function `As_u16` should have snake_case name, e.g. `as_u16`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 17 } to LineCol { line: 28, col: 24 }: Function `Get_red` should have snake_case name, e.g. `get_red`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 17 } to LineCol { line: 32, col: 26 }: Function `Get_green` should have snake_case name, e.g. `get_green`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 17 } to LineCol { line: 36, col: 25 }: Function `Get_blue` should have snake_case name, e.g. `get_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 17 } to LineCol { line: 40, col: 24 }: Function `Set_red` should have snake_case name, e.g. `set_red`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 35 } to LineCol { line: 40, col: 40 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 17 } to LineCol { line: 46, col: 26 }: Function `Set_green` should have snake_case name, e.g. `set_green`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 37 } to LineCol { line: 46, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 17 } to LineCol { line: 52, col: 25 }: Function `Set_blue` should have snake_case name, e.g. `set_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 36 } to LineCol { line: 52, col: 41 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/Palette.rs
Warning RustcLint("non_snake_case") from LineCol { line: 311, col: 13 } to LineCol { line: 311, col: 16 }: Function `Get` should have snake_case name, e.g. `get`
Warning RustcLint("non_snake_case") from LineCol { line: 311, col: 17 } to LineCol { line: 311, col: 20 }: Parameter `Hue` should have snake_case name, e.g. `hue`
Warning RustcLint("non_snake_case") from LineCol { line: 311, col: 32 } to LineCol { line: 311, col: 36 }: Parameter `Tone` should have snake_case name, e.g. `tone`
Warning RustcLint("non_snake_case") from LineCol { line: 281, col: 13 } to LineCol { line: 281, col: 28 }: Function `Get_color_index` should have snake_case name, e.g. `get_color_index`
Warning RustcLint("non_snake_case") from LineCol { line: 304, col: 13 } to LineCol { line: 304, col: 27 }: Function `Get_tone_index` should have snake_case name, e.g. `get_tone_index`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Color/ARGB8888.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 108, col: 0 } to LineCol { line: 156, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 32 } to LineCol { line: 21, col: 35 }: Parameter `Red` should have snake_case name, e.g. `red`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 41 } to LineCol { line: 21, col: 46 }: Parameter `Green` should have snake_case name, e.g. `green`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 52 } to LineCol { line: 21, col: 56 }: Parameter `Blue` should have snake_case name, e.g. `blue`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 17 } to LineCol { line: 29, col: 28 }: Function `From_RGB565` should have snake_case name, e.g. `from_rgb565`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 29 } to LineCol { line: 29, col: 34 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 17 } to LineCol { line: 38, col: 23 }: Function `As_u32` should have snake_case name, e.g. `as_u32`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 17 } to LineCol { line: 42, col: 26 }: Function `Get_alpha` should have snake_case name, e.g. `get_alpha`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 17 } to LineCol { line: 46, col: 24 }: Function `Get_red` should have snake_case name, e.g. `get_red`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 17 } to LineCol { line: 50, col: 26 }: Function `Get_green` should have snake_case name, e.g. `get_green`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 17 } to LineCol { line: 54, col: 25 }: Function `Get_blue` should have snake_case name, e.g. `get_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 17 } to LineCol { line: 58, col: 26 }: Function `Set_alpha` should have snake_case name, e.g. `set_alpha`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 37 } to LineCol { line: 58, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 17 } to LineCol { line: 63, col: 24 }: Function `Set_red` should have snake_case name, e.g. `set_red`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 35 } to LineCol { line: 63, col: 40 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 17 } to LineCol { line: 68, col: 26 }: Function `Set_green` should have snake_case name, e.g. `set_green`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 37 } to LineCol { line: 68, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 17 } to LineCol { line: 73, col: 25 }: Function `Set_blue` should have snake_case name, e.g. `set_blue`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 36 } to LineCol { line: 73, col: 41 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Graphics, module: /home/alix_anneraud/Git/Xila/Core/Modules/Graphics/src/Area.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 36 } to LineCol { line: 6, col: 43 }: Parameter `Point_2` should have snake_case name, e.g. `point_2`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 11 } to LineCol { line: 10, col: 22 }: Function `Get_point_1` should have snake_case name, e.g. `get_point_1`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 11 } to LineCol { line: 14, col: 22 }: Function `Get_point_2` should have snake_case name, e.g. `get_point_2`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 11 } to LineCol { line: 18, col: 20 }: Function `Get_width` should have snake_case name, e.g. `get_width`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 11 } to LineCol { line: 22, col: 21 }: Function `Get_height` should have snake_case name, e.g. `get_height`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 11 } to LineCol { line: 26, col: 22 }: Function `Set_point_1` should have snake_case name, e.g. `set_point_1`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 33 } to LineCol { line: 26, col: 38 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 11 } to LineCol { line: 31, col: 22 }: Function `Set_point_2` should have snake_case name, e.g. `set_point_2`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 33 } to LineCol { line: 31, col: 38 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 10 }: Module `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 13 }: Module `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 13 }: Module `Hierarchy` should have snake_case name, e.g. `hierarchy`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 9 }: Module `Macro` should have snake_case name, e.g. `macro`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 8 }: Module `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 10 }: Module `Socket` should have snake_case name, e.g. `socket`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Socket/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 11 }: Module `Address` should have snake_case name, e.g. `address`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Socket/Address.rs
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 23 } to LineCol { line: 14, col: 25 }: Variable `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 27 } to LineCol { line: 14, col: 31 }: Variable `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 17 } to LineCol { line: 20, col: 33 }: Function `From_IP_and_port` should have snake_case name, e.g. `from_ip_and_port`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 34 } to LineCol { line: 20, col: 36 }: Parameter `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 47 } to LineCol { line: 20, col: 51 }: Parameter `Port` should have snake_case name, e.g. `port`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 26 } to LineCol { line: 22, col: 28 }: Variable `IP` should have snake_case name, e.g. `ip`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Pipe/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 4 } to LineCol { line: 0, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 8 }: Module `Pipe` should have snake_case name, e.g. `pipe`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Pipe/Pipe.rs
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 11 } to LineCol { line: 12, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 15 } to LineCol { line: 12, col: 26 }: Parameter `Buffer_size` should have snake_case name, e.g. `buffer_size`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 17 } to LineCol { line: 16, col: 22 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 30 } to LineCol { line: 16, col: 34 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 12 } to LineCol { line: 19, col: 18 }: Variable `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 12 } to LineCol { line: 25, col: 16 }: Variable `Byte` should have snake_case name, e.g. `byte`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 17 } to LineCol { line: 32, col: 21 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 29 } to LineCol { line: 32, col: 33 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 12 } to LineCol { line: 35, col: 18 }: Variable `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 12 } to LineCol { line: 41, col: 16 }: Variable `Byte` should have snake_case name, e.g. `byte`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 17 } to LineCol { line: 48, col: 26 }: Function `Read_line` should have snake_case name, e.g. `read_line`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 34 } to LineCol { line: 48, col: 38 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 12 } to LineCol { line: 51, col: 18 }: Variable `Length` should have snake_case name, e.g. `length`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Pipe/File_system.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 335, col: 0 } to LineCol { line: 471, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 17 } to LineCol { line: 31, col: 36 }: Function `Get_underlying_file` should have snake_case name, e.g. `get_underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 17 } to LineCol { line: 45, col: 36 }: Function `Create_unnamed_pipe` should have snake_case name, e.g. `create_unnamed_pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 12 } to LineCol { line: 54, col: 16 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 12 } to LineCol { line: 57, col: 22 }: Variable `Read_flags` should have snake_case name, e.g. `read_flags`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 12 } to LineCol { line: 59, col: 21 }: Variable `Read_file` should have snake_case name, e.g. `read_file`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 12 } to LineCol { line: 70, col: 23 }: Variable `Write_flags` should have snake_case name, e.g. `write_flags`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 12 } to LineCol { line: 72, col: 22 }: Variable `Write_file` should have snake_case name, e.g. `write_file`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 7 } to LineCol { line: 85, col: 37 }: Function `Borrow_mutable_inner_2_splited` should have snake_case name, e.g. `borrow_mutable_inner_2_splited`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 17 } to LineCol { line: 94, col: 34 }: Function `Create_named_pipe` should have snake_case name, e.g. `create_named_pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 42 } to LineCol { line: 94, col: 53 }: Parameter `Buffer_size` should have snake_case name, e.g. `buffer_size`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 12 } to LineCol { line: 97, col: 17 }: Variable `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 12 } to LineCol { line: 99, col: 16 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 17 } to LineCol { line: 108, col: 21 }: Function `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 13 } to LineCol { line: 117, col: 24 }: Variable `Named_pipes` should have snake_case name, e.g. `named_pipes`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 26 } to LineCol { line: 117, col: 36 }: Variable `Open_pipes` should have snake_case name, e.g. `open_pipes`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 12 } to LineCol { line: 119, col: 16 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 123, col: 12 } to LineCol { line: 123, col: 33 }: Variable `Local_file_identifier` should have snake_case name, e.g. `local_file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 17 } to LineCol { line: 133, col: 22 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 17 } to LineCol { line: 148, col: 26 }: Function `Close_all` should have snake_case name, e.g. `close_all`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 34 } to LineCol { line: 148, col: 38 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 152, col: 12 } to LineCol { line: 152, col: 16 }: Variable `Keys` should have snake_case name, e.g. `keys`
Warning RustcLint("non_snake_case") from LineCol { line: 155, col: 21 } to LineCol { line: 155, col: 24 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 12 } to LineCol { line: 160, col: 15 }: Variable `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 169, col: 17 } to LineCol { line: 169, col: 26 }: Function `Duplicate` should have snake_case name, e.g. `duplicate`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 13 } to LineCol { line: 176, col: 17 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 19 } to LineCol { line: 176, col: 24 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 182, col: 12 } to LineCol { line: 182, col: 20 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 191, col: 17 } to LineCol { line: 191, col: 26 }: Function `Transfert` should have snake_case name, e.g. `transfert`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 13 } to LineCol { line: 199, col: 17 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 19 } to LineCol { line: 199, col: 24 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 26 } to LineCol { line: 199, col: 41 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 204, col: 12 } to LineCol { line: 204, col: 20 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 204, col: 35 } to LineCol { line: 204, col: 39 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 227, col: 17 } to LineCol { line: 227, col: 23 }: Function `Remove` should have snake_case name, e.g. `remove`
Warning RustcLint("non_snake_case") from LineCol { line: 227, col: 31 } to LineCol { line: 227, col: 36 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 238, col: 17 } to LineCol { line: 238, col: 21 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 245, col: 13 } to LineCol { line: 245, col: 17 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 245, col: 19 } to LineCol { line: 245, col: 24 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 245, col: 26 } to LineCol { line: 245, col: 41 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 260, col: 22 } to LineCol { line: 260, col: 26 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 266, col: 17 } to LineCol { line: 266, col: 26 }: Function `Read_line` should have snake_case name, e.g. `read_line`
Warning RustcLint("non_snake_case") from LineCol { line: 273, col: 13 } to LineCol { line: 273, col: 17 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 273, col: 19 } to LineCol { line: 273, col: 24 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 273, col: 26 } to LineCol { line: 273, col: 41 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 288, col: 22 } to LineCol { line: 288, col: 26 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 294, col: 17 } to LineCol { line: 294, col: 22 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 301, col: 13 } to LineCol { line: 301, col: 17 }: Variable `Pipe` should have snake_case name, e.g. `pipe`
Warning RustcLint("non_snake_case") from LineCol { line: 301, col: 19 } to LineCol { line: 301, col: 24 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 301, col: 26 } to LineCol { line: 301, col: 41 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 316, col: 22 } to LineCol { line: 316, col: 26 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 322, col: 17 } to LineCol { line: 322, col: 25 }: Function `Get_mode` should have snake_case name, e.g. `get_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 322, col: 33 } to LineCol { line: 322, col: 37 }: Parameter `File` should have snake_case name, e.g. `file`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Macro.rs
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Hierarchy.rs
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/File_system.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 1731, col: 0 } to LineCol { line: 1932, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 870, col: 31 } to LineCol { line: 870, col: 35 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 1379, col: 39 } to LineCol { line: 1379, col: 43 }: Parameter `Path` should have snake_case name, e.g. `path`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/File.rs
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 12 } to LineCol { line: 41, col: 27 }: Variable `File_identifier` should have snake_case name, e.g. `file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 37 } to LineCol { line: 74, col: 45 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 30 } to LineCol { line: 87, col: 36 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 35 } to LineCol { line: 93, col: 41 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 29 } to LineCol { line: 98, col: 35 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 34 } to LineCol { line: 103, col: 40 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 106, col: 16 } to LineCol { line: 106, col: 20 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 36 } to LineCol { line: 118, col: 42 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Error.rs
Warning RustcLint("non_snake_case") from LineCol { line: 27, col: 12 } to LineCol { line: 27, col: 18 }: Variable `Offset` should have snake_case name, e.g. `offset`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 36 } to LineCol { line: 28, col: 46 }: Variable `Error_type` should have snake_case name, e.g. `error_type`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Directory.rs
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 12 } to LineCol { line: 43, col: 32 }: Variable `Directory_identifier` should have snake_case name, e.g. `directory_identifier`
processing crate: Virtual_file_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/Virtual_file_system/src/Device.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 418, col: 0 } to LineCol { line: 668, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 11 } to LineCol { line: 31, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 7 } to LineCol { line: 38, col: 38 }: Function `Borrow_mutable_inner_2_splitted` should have snake_case name, e.g. `borrow_mutable_inner_2_splitted`
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 17 } to LineCol { line: 47, col: 36 }: Function `Get_underlying_file` should have snake_case name, e.g. `get_underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 17 } to LineCol { line: 61, col: 29 }: Function `Mount_device` should have snake_case name, e.g. `mount_device`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 13 } to LineCol { line: 68, col: 20 }: Variable `Devices` should have snake_case name, e.g. `devices`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 12 } to LineCol { line: 70, col: 17 }: Variable `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 17 } to LineCol { line: 77, col: 36 }: Function `Mount_static_device` should have snake_case name, e.g. `mount_static_device`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 13 } to LineCol { line: 84, col: 20 }: Variable `Devices` should have snake_case name, e.g. `devices`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 12 } to LineCol { line: 86, col: 17 }: Variable `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 17 } to LineCol { line: 93, col: 36 }: Function `Get_path_from_inode` should have snake_case name, e.g. `get_path_from_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 17 } to LineCol { line: 108, col: 38 }: Function `Get_devices_from_path` should have snake_case name, e.g. `get_devices_from_path`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 26 } to LineCol { line: 118, col: 37 }: Variable `Device_path` should have snake_case name, e.g. `device_path`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 42 } to LineCol { line: 122, col: 53 }: Variable `Device_path` should have snake_case name, e.g. `device_path`
Warning RustcLint("non_snake_case") from LineCol { line: 124, col: 19 } to LineCol { line: 124, col: 24 }: Variable `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 128, col: 17 } to LineCol { line: 128, col: 21 }: Function `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 13 } to LineCol { line: 137, col: 20 }: Variable `Devices` should have snake_case name, e.g. `devices`
Warning RustcLint("non_snake_case") from LineCol { line: 137, col: 22 } to LineCol { line: 137, col: 32 }: Variable `Open_pipes` should have snake_case name, e.g. `open_pipes`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 12 } to LineCol { line: 139, col: 18 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 12 } to LineCol { line: 141, col: 33 }: Variable `Local_file_identifier` should have snake_case name, e.g. `local_file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 151, col: 17 } to LineCol { line: 151, col: 22 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 17 } to LineCol { line: 166, col: 26 }: Function `Close_all` should have snake_case name, e.g. `close_all`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 34 } to LineCol { line: 166, col: 38 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 170, col: 12 } to LineCol { line: 170, col: 16 }: Variable `Keys` should have snake_case name, e.g. `keys`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 21 } to LineCol { line: 173, col: 24 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 178, col: 12 } to LineCol { line: 178, col: 15 }: Variable `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 187, col: 17 } to LineCol { line: 187, col: 26 }: Function `Duplicate` should have snake_case name, e.g. `duplicate`
Warning RustcLint("non_snake_case") from LineCol { line: 194, col: 13 } to LineCol { line: 194, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 194, col: 21 } to LineCol { line: 194, col: 26 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 200, col: 12 } to LineCol { line: 200, col: 20 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 209, col: 17 } to LineCol { line: 209, col: 26 }: Function `Transfert` should have snake_case name, e.g. `transfert`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 13 } to LineCol { line: 218, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 21 } to LineCol { line: 218, col: 26 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 223, col: 12 } to LineCol { line: 223, col: 20 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 223, col: 35 } to LineCol { line: 223, col: 43 }: Variable `New_file` should have snake_case name, e.g. `new_file`
Warning RustcLint("non_snake_case") from LineCol { line: 246, col: 17 } to LineCol { line: 246, col: 23 }: Function `Remove` should have snake_case name, e.g. `remove`
Warning RustcLint("non_snake_case") from LineCol { line: 246, col: 31 } to LineCol { line: 246, col: 36 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 255, col: 17 } to LineCol { line: 255, col: 21 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 13 } to LineCol { line: 262, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 21 } to LineCol { line: 262, col: 26 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 28 } to LineCol { line: 262, col: 43 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 277, col: 16 } to LineCol { line: 277, col: 20 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 285, col: 17 } to LineCol { line: 285, col: 26 }: Function `Read_line` should have snake_case name, e.g. `read_line`
Warning RustcLint("non_snake_case") from LineCol { line: 292, col: 13 } to LineCol { line: 292, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 292, col: 21 } to LineCol { line: 292, col: 26 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 292, col: 28 } to LineCol { line: 292, col: 43 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 12 } to LineCol { line: 303, col: 16 }: Variable `Byte` should have snake_case name, e.g. `byte`
Warning RustcLint("non_snake_case") from LineCol { line: 307, col: 16 } to LineCol { line: 307, col: 20 }: Variable `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 322, col: 17 } to LineCol { line: 322, col: 22 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 329, col: 13 } to LineCol { line: 329, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 329, col: 21 } to LineCol { line: 329, col: 26 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 329, col: 28 } to LineCol { line: 329, col: 43 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 350, col: 17 } to LineCol { line: 350, col: 29 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 357, col: 13 } to LineCol { line: 357, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 357, col: 24 } to LineCol { line: 357, col: 39 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 365, col: 17 } to LineCol { line: 365, col: 22 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 371, col: 13 } to LineCol { line: 371, col: 19 }: Variable `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 371, col: 24 } to LineCol { line: 371, col: 39 }: Variable `Underlying_file` should have snake_case name, e.g. `underlying_file`
Warning RustcLint("non_snake_case") from LineCol { line: 381, col: 17 } to LineCol { line: 381, col: 25 }: Function `Get_mode` should have snake_case name, e.g. `get_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 381, col: 33 } to LineCol { line: 381, col: 37 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 393, col: 17 } to LineCol { line: 393, col: 31 }: Function `Get_raw_device` should have snake_case name, e.g. `get_raw_device`
Warning RustcLint("non_snake_case") from LineCol { line: 393, col: 39 } to LineCol { line: 393, col: 44 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 405, col: 17 } to LineCol { line: 405, col: 30 }: Function `Is_a_terminal` should have snake_case name, e.g. `is_a_terminal`
Warning RustcLint("non_snake_case") from LineCol { line: 405, col: 38 } to LineCol { line: 405, col: 42 }: Parameter `File` should have snake_case name, e.g. `file`
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 6 }: Module `IP` should have snake_case name, e.g. `ip`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 12 }: Module `Protocol` should have snake_case name, e.g. `protocol`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 11 }: Module `Service` should have snake_case name, e.g. `service`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 10 }: Module `Traits` should have snake_case name, e.g. `traits`
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/Traits.rs
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 7 } to LineCol { line: 13, col: 12 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 20 } to LineCol { line: 13, col: 26 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 7 } to LineCol { line: 15, col: 11 }: Function `Bind` should have snake_case name, e.g. `bind`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 7 } to LineCol { line: 23, col: 14 }: Function `Connect` should have snake_case name, e.g. `connect`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 7 } to LineCol { line: 30, col: 13 }: Function `Accept` should have snake_case name, e.g. `accept`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 7 } to LineCol { line: 36, col: 11 }: Function `Send` should have snake_case name, e.g. `send`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 19 } to LineCol { line: 36, col: 25 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 55 } to LineCol { line: 36, col: 59 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 7 } to LineCol { line: 38, col: 14 }: Function `Send_to` should have snake_case name, e.g. `send_to`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 7 } to LineCol { line: 46, col: 14 }: Function `Receive` should have snake_case name, e.g. `receive`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 22 } to LineCol { line: 46, col: 28 }: Parameter `Socket` should have snake_case name, e.g. `socket`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 58 } to LineCol { line: 46, col: 62 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 7 } to LineCol { line: 48, col: 19 }: Function `Receive_from` should have snake_case name, e.g. `receive_from`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 7 } to LineCol { line: 54, col: 24 }: Function `Get_local_address` should have snake_case name, e.g. `get_local_address`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 7 } to LineCol { line: 59, col: 25 }: Function `Get_remote_address` should have snake_case name, e.g. `get_remote_address`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 7 } to LineCol { line: 64, col: 23 }: Function `Set_send_timeout` should have snake_case name, e.g. `set_send_timeout`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 7 } to LineCol { line: 70, col: 26 }: Function `Set_receive_timeout` should have snake_case name, e.g. `set_receive_timeout`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 7 } to LineCol { line: 76, col: 23 }: Function `Get_send_timeout` should have snake_case name, e.g. `get_send_timeout`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 7 } to LineCol { line: 81, col: 26 }: Function `Get_receive_timeout` should have snake_case name, e.g. `get_receive_timeout`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 4 } to LineCol { line: 87, col: 9 }: Module `Tests` should have snake_case name, e.g. `tests`
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/Service.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 17 } to LineCol { line: 9, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 17 } to LineCol { line: 13, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 17 } to LineCol { line: 17, col: 27 }: Function `From_inner` should have snake_case name, e.g. `from_inner`
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/Protocol.rs
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/IP.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 130, col: 0 } to LineCol { line: 168, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 17 } to LineCol { line: 9, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 17 } to LineCol { line: 13, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 17 } to LineCol { line: 17, col: 27 }: Function `From_inner` should have snake_case name, e.g. `from_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 12 } to LineCol { line: 29, col: 16 }: Variable `Part` should have snake_case name, e.g. `part`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 16 } to LineCol { line: 33, col: 20 }: Variable `Part` should have snake_case name, e.g. `part`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 17 } to LineCol { line: 60, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 17 } to LineCol { line: 64, col: 27 }: Function `From_inner` should have snake_case name, e.g. `from_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 12 } to LineCol { line: 76, col: 16 }: Variable `Part` should have snake_case name, e.g. `part`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 16 } to LineCol { line: 81, col: 20 }: Variable `Part` should have snake_case name, e.g. `part`
Warning RustcLint("non_snake_case") from LineCol { line: 112, col: 26 } to LineCol { line: 112, col: 31 }: Variable `Value` should have snake_case name, e.g. `value`
processing crate: Network, module: /home/alix_anneraud/Git/Xila/Core/Modules/Network/src/Error.rs
processing crate: Time, module: /home/alix_anneraud/Git/Xila/Core/Modules/Time/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
processing crate: Time, module: /home/alix_anneraud/Git/Xila/Core/Modules/Time/src/Manager.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 7 } to LineCol { line: 9, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 7 } to LineCol { line: 13, col: 17 }: Function `Initialize` should have snake_case name, e.g. `initialize`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 18 } to LineCol { line: 13, col: 24 }: Parameter `Driver` should have snake_case name, e.g. `driver`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 11 } to LineCol { line: 35, col: 41 }: Function `Get_current_time_since_startup` should have snake_case name, e.g. `get_current_time_since_startup`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 27 }: Function `Get_current_time` should have snake_case name, e.g. `get_current_time`
processing crate: Time, module: /home/alix_anneraud/Git/Xila/Core/Modules/Time/src/Error.rs
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 9 }: Module `Cache` should have snake_case name, e.g. `cache`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 14 }: Module `Capability` should have snake_case name, e.g. `capability`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 9 }: Module `Macro` should have snake_case name, e.g. `macro`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 14 }: Module `Protection` should have snake_case name, e.g. `protection`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 14 }: Module `Statistics` should have snake_case name, e.g. `statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 9 }: Module `Trait` should have snake_case name, e.g. `trait`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Trait.rs
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 14 } to LineCol { line: 31, col: 22 }: Function `Allocate` should have snake_case name, e.g. `allocate`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 14 } to LineCol { line: 49, col: 24 }: Function `Deallocate` should have snake_case name, e.g. `deallocate`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 32 } to LineCol { line: 49, col: 39 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 54 } to LineCol { line: 49, col: 60 }: Parameter `Layout` should have snake_case name, e.g. `layout`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 14 } to LineCol { line: 73, col: 24 }: Function `Reallocate` should have snake_case name, e.g. `reallocate`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 12 } to LineCol { line: 80, col: 18 }: Variable `Memory` should have snake_case name, e.g. `memory`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 12 } to LineCol { line: 83, col: 19 }: Variable `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 12 } to LineCol { line: 88, col: 20 }: Variable `Old_size` should have snake_case name, e.g. `old_size`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 14 } to LineCol { line: 109, col: 22 }: Function `Get_used` should have snake_case name, e.g. `get_used`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 14 } to LineCol { line: 119, col: 22 }: Function `Get_free` should have snake_case name, e.g. `get_free`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 7 } to LineCol { line: 135, col: 30 }: Function `Flush_instruction_cache` should have snake_case name, e.g. `flush_instruction_cache`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 38 } to LineCol { line: 135, col: 46 }: Parameter `_Address` should have snake_case name, e.g. `_address`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 61 } to LineCol { line: 135, col: 66 }: Parameter `_Size` should have snake_case name, e.g. `_size`
Warning RustcLint("non_snake_case") from LineCol { line: 149, col: 7 } to LineCol { line: 149, col: 23 }: Function `Flush_data_cache` should have snake_case name, e.g. `flush_data_cache`
Warning RustcLint("non_snake_case") from LineCol { line: 167, col: 7 } to LineCol { line: 167, col: 20 }: Function `Get_page_size` should have snake_case name, e.g. `get_page_size`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Statistics.rs
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 8 } to LineCol { line: 3, col: 12 }: Field `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 8 } to LineCol { line: 6, col: 12 }: Field `Used` should have snake_case name, e.g. `used`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 8 } to LineCol { line: 9, col: 12 }: Field `Free` should have snake_case name, e.g. `free`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Protection.rs
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 17 } to LineCol { line: 69, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 21 } to LineCol { line: 69, col: 25 }: Parameter `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 33 } to LineCol { line: 69, col: 38 }: Parameter `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 46 } to LineCol { line: 69, col: 53 }: Parameter `Execute` should have snake_case name, e.g. `execute`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 13 } to LineCol { line: 81, col: 21 }: Function `Set_bits` should have snake_case name, e.g. `set_bits`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 32 } to LineCol { line: 81, col: 36 }: Parameter `Bits` should have snake_case name, e.g. `bits`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 42 } to LineCol { line: 81, col: 47 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 13 } to LineCol { line: 97, col: 21 }: Function `Get_bits` should have snake_case name, e.g. `get_bits`
Warning RustcLint("non_snake_case") from LineCol { line: 97, col: 29 } to LineCol { line: 97, col: 33 }: Parameter `Bits` should have snake_case name, e.g. `bits`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 17 } to LineCol { line: 108, col: 25 }: Function `Set_read` should have snake_case name, e.g. `set_read`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 32 } to LineCol { line: 108, col: 37 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 17 } to LineCol { line: 119, col: 26 }: Function `Set_write` should have snake_case name, e.g. `set_write`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 33 } to LineCol { line: 119, col: 38 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 130, col: 17 } to LineCol { line: 130, col: 28 }: Function `Set_execute` should have snake_case name, e.g. `set_execute`
Warning RustcLint("non_snake_case") from LineCol { line: 130, col: 35 } to LineCol { line: 130, col: 40 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 17 } to LineCol { line: 138, col: 25 }: Function `Get_read` should have snake_case name, e.g. `get_read`
Warning RustcLint("non_snake_case") from LineCol { line: 146, col: 17 } to LineCol { line: 146, col: 26 }: Function `Get_write` should have snake_case name, e.g. `get_write`
Warning RustcLint("non_snake_case") from LineCol { line: 154, col: 17 } to LineCol { line: 154, col: 28 }: Function `Get_execute` should have snake_case name, e.g. `get_execute`
Warning RustcLint("non_snake_case") from LineCol { line: 162, col: 17 } to LineCol { line: 162, col: 22 }: Function `As_u8` should have snake_case name, e.g. `as_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 17 } to LineCol { line: 173, col: 24 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 25 } to LineCol { line: 173, col: 30 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Manager.rs
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 7 } to LineCol { line: 53, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 17 } to LineCol { line: 23, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 21 } to LineCol { line: 23, col: 30 }: Parameter `Allocator` should have snake_case name, e.g. `allocator`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 29 } to LineCol { line: 45, col: 36 }: Parameter `Pointer` should have snake_case name, e.g. `pointer`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 47 } to LineCol { line: 45, col: 53 }: Parameter `Layout` should have snake_case name, e.g. `layout`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Macro.rs
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Capability.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 17 } to LineCol { line: 9, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 21 } to LineCol { line: 9, col: 31 }: Parameter `Executable` should have snake_case name, e.g. `executable`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 39 } to LineCol { line: 9, col: 59 }: Parameter `Direct_memory_access` should have snake_case name, e.g. `direct_memory_access`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 17 } to LineCol { line: 15, col: 31 }: Function `Get_executable` should have snake_case name, e.g. `get_executable`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 17 } to LineCol { line: 19, col: 41 }: Function `Get_direct_memory_access` should have snake_case name, e.g. `get_direct_memory_access`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 17 } to LineCol { line: 23, col: 31 }: Function `Set_executable` should have snake_case name, e.g. `set_executable`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 17 } to LineCol { line: 32, col: 41 }: Function `Set_direct_memory_access` should have snake_case name, e.g. `set_direct_memory_access`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 17 } to LineCol { line: 41, col: 29 }: Function `Is_subset_of` should have snake_case name, e.g. `is_subset_of`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 37 } to LineCol { line: 41, col: 42 }: Parameter `Other` should have snake_case name, e.g. `other`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 17 } to LineCol { line: 45, col: 31 }: Function `Is_superset_of` should have snake_case name, e.g. `is_superset_of`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 39 } to LineCol { line: 45, col: 44 }: Parameter `Other` should have snake_case name, e.g. `other`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 17 } to LineCol { line: 49, col: 24 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 25 } to LineCol { line: 49, col: 30 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 17 } to LineCol { line: 53, col: 22 }: Function `To_u8` should have snake_case name, e.g. `to_u8`
processing crate: Memory, module: /home/alix_anneraud/Git/Xila/Core/Modules/Memory/src/Cache.rs
processing crate: Log, module: /home/alix_anneraud/Git/Xila/Core/Modules/Log/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 7 } to LineCol { line: 50, col: 12 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 20 } to LineCol { line: 50, col: 29 }: Parameter `Arguments` should have snake_case name, e.g. `arguments`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 7 } to LineCol { line: 52, col: 10 }: Function `Log` should have snake_case name, e.g. `log`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 18 } to LineCol { line: 52, col: 24 }: Parameter `Record` should have snake_case name, e.g. `record`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 12 } to LineCol { line: 61, col: 17 }: Variable `Color` should have snake_case name, e.g. `color`
Warning RustcLint("non_snake_case") from LineCol { line: 81, col: 7 } to LineCol { line: 81, col: 12 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 7 } to LineCol { line: 107, col: 17 }: Function `Initialize` should have snake_case name, e.g. `initialize`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 18 } to LineCol { line: 107, col: 24 }: Parameter `Logger` should have snake_case name, e.g. `logger`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 7 } to LineCol { line: 115, col: 17 }: Function `Test_write` should have snake_case name, e.g. `test_write`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 18 } to LineCol { line: 115, col: 24 }: Parameter `Logger` should have snake_case name, e.g. `logger`
Warning RustcLint("non_snake_case") from LineCol { line: 121, col: 7 } to LineCol { line: 121, col: 15 }: Function `Test_log` should have snake_case name, e.g. `test_log`
Warning RustcLint("non_snake_case") from LineCol { line: 121, col: 16 } to LineCol { line: 121, col: 22 }: Parameter `Logger` should have snake_case name, e.g. `logger`
Warning RustcLint("non_snake_case") from LineCol { line: 154, col: 7 } to LineCol { line: 154, col: 17 }: Function `Test_flush` should have snake_case name, e.g. `test_flush`
Warning RustcLint("non_snake_case") from LineCol { line: 154, col: 18 } to LineCol { line: 154, col: 24 }: Parameter `Logger` should have snake_case name, e.g. `logger`
Warning RustcLint("non_snake_case") from LineCol { line: 93, col: 18 } to LineCol { line: 93, col: 24 }: Parameter `Record` should have snake_case name, e.g. `record`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 101, col: 0 } to LineCol { line: 102, col: 17 }: code is inactive due to #[cfg] directives: feature = "std" is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 4 } to LineCol { line: 104, col: 10 }: Module `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 105, col: 4 } to LineCol { line: 105, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 106, col: 4 } to LineCol { line: 106, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 4 } to LineCol { line: 107, col: 16 }: Module `Fundamentals` should have snake_case name, e.g. `fundamentals`
Warning RustcLint("non_snake_case") from LineCol { line: 108, col: 4 } to LineCol { line: 108, col: 7 }: Module `MBR` should have snake_case name, e.g. `mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 4 } to LineCol { line: 109, col: 13 }: Module `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 4 } to LineCol { line: 111, col: 17 }: Module `Memory_device` should have snake_case name, e.g. `memory_device`
Warning RustcLint("non_snake_case") from LineCol { line: 112, col: 4 } to LineCol { line: 112, col: 8 }: Module `Time` should have snake_case name, e.g. `time`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Time.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 111, col: 0 } to LineCol { line: 312, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 17 } to LineCol { line: 56, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 21 } to LineCol { line: 56, col: 28 }: Parameter `Seconds` should have snake_case name, e.g. `seconds`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 17 } to LineCol { line: 75, col: 23 }: Function `As_u64` should have snake_case name, e.g. `as_u64`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Memory_device.rs
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 11 } to LineCol { line: 77, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 15 } to LineCol { line: 77, col: 19 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 12 } to LineCol { line: 80, col: 16 }: Variable `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 11 } to LineCol { line: 109, col: 19 }: Function `From_vec` should have snake_case name, e.g. `from_vec`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 20 } to LineCol { line: 109, col: 24 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 11 } to LineCol { line: 132, col: 26 }: Function `Get_block_count` should have snake_case name, e.g. `get_block_count`
Warning RustcLint("non_snake_case") from LineCol { line: 144, col: 19 } to LineCol { line: 144, col: 25 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 151, col: 12 } to LineCol { line: 151, col: 21 }: Variable `Read_size` should have snake_case name, e.g. `read_size`
Warning RustcLint("non_snake_case") from LineCol { line: 157, col: 20 } to LineCol { line: 157, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 172, col: 27 } to LineCol { line: 172, col: 35 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 177, col: 33 } to LineCol { line: 177, col: 41 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 181, col: 31 } to LineCol { line: 181, col: 39 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 192, col: 13 } to LineCol { line: 192, col: 17 }: Variable `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 192, col: 19 } to LineCol { line: 192, col: 27 }: Variable `Position` should have snake_case name, e.g. `position`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Partition/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 10 }: Module `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 9 }: Module `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 14 }: Module `Statistics` should have snake_case name, e.g. `statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 8 }: Module `Type` should have snake_case name, e.g. `type`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Partition/Type.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 279, col: 0 } to LineCol { line: 386, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 11 } to LineCol { line: 129, col: 18 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 129, col: 19 } to LineCol { line: 129, col: 24 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 159, col: 11 } to LineCol { line: 159, col: 16 }: Function `To_u8` should have snake_case name, e.g. `to_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 189, col: 11 } to LineCol { line: 189, col: 19 }: Function `Get_name` should have snake_case name, e.g. `get_name`
Warning RustcLint("non_snake_case") from LineCol { line: 219, col: 11 } to LineCol { line: 219, col: 17 }: Function `Is_fat` should have snake_case name, e.g. `is_fat`
Warning RustcLint("non_snake_case") from LineCol { line: 238, col: 11 } to LineCol { line: 238, col: 20 }: Function `Is_hidden` should have snake_case name, e.g. `is_hidden`
Warning RustcLint("non_snake_case") from LineCol { line: 252, col: 11 } to LineCol { line: 252, col: 22 }: Function `Is_extended` should have snake_case name, e.g. `is_extended`
Warning RustcLint("non_snake_case") from LineCol { line: 260, col: 11 } to LineCol { line: 260, col: 19 }: Function `Is_linux` should have snake_case name, e.g. `is_linux`
Warning RustcLint("non_snake_case") from LineCol { line: 273, col: 41 } to LineCol { line: 273, col: 46 }: Variable `Value` should have snake_case name, e.g. `value`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Partition/Statistics.rs
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 8 } to LineCol { line: 47, col: 24 }: Field `Total_partitions` should have snake_case name, e.g. `total_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 8 } to LineCol { line: 49, col: 27 }: Field `Bootable_partitions` should have snake_case name, e.g. `bootable_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 8 } to LineCol { line: 51, col: 22 }: Field `Fat_partitions` should have snake_case name, e.g. `fat_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 8 } to LineCol { line: 53, col: 24 }: Field `Linux_partitions` should have snake_case name, e.g. `linux_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 8 } to LineCol { line: 55, col: 25 }: Field `Hidden_partitions` should have snake_case name, e.g. `hidden_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 8 } to LineCol { line: 57, col: 27 }: Field `Extended_partitions` should have snake_case name, e.g. `extended_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 8 } to LineCol { line: 59, col: 26 }: Field `Unknown_partitions` should have snake_case name, e.g. `unknown_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 8 } to LineCol { line: 61, col: 26 }: Field `Total_used_sectors` should have snake_case name, e.g. `total_used_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 8 } to LineCol { line: 63, col: 33 }: Field `Largest_partition_sectors` should have snake_case name, e.g. `largest_partition_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 8 } to LineCol { line: 65, col: 34 }: Field `Smallest_partition_sectors` should have snake_case name, e.g. `smallest_partition_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 11 } to LineCol { line: 103, col: 19 }: Function `From_mbr` should have snake_case name, e.g. `from_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 20 } to LineCol { line: 103, col: 23 }: Parameter `Mbr` should have snake_case name, e.g. `mbr`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Partition/Entry.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 258, col: 0 } to LineCol { line: 443, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 8 } to LineCol { line: 46, col: 16 }: Field `Bootable` should have snake_case name, e.g. `bootable`
Warning RustcLint("non_snake_case") from LineCol { line: 48, col: 8 } to LineCol { line: 48, col: 18 }: Field `Start_head` should have snake_case name, e.g. `start_head`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 8 } to LineCol { line: 50, col: 20 }: Field `Start_sector` should have snake_case name, e.g. `start_sector`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 8 } to LineCol { line: 52, col: 22 }: Field `Start_cylinder` should have snake_case name, e.g. `start_cylinder`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 8 } to LineCol { line: 54, col: 22 }: Field `Partition_type` should have snake_case name, e.g. `partition_type`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 8 } to LineCol { line: 56, col: 16 }: Field `End_head` should have snake_case name, e.g. `end_head`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 8 } to LineCol { line: 58, col: 18 }: Field `End_sector` should have snake_case name, e.g. `end_sector`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 8 } to LineCol { line: 60, col: 20 }: Field `End_cylinder` should have snake_case name, e.g. `end_cylinder`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 8 } to LineCol { line: 62, col: 17 }: Field `Start_lba` should have snake_case name, e.g. `start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 8 } to LineCol { line: 64, col: 20 }: Field `Size_sectors` should have snake_case name, e.g. `size_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 11 } to LineCol { line: 83, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 128, col: 11 } to LineCol { line: 128, col: 26 }: Function `New_with_params` should have snake_case name, e.g. `new_with_params`
Warning RustcLint("non_snake_case") from LineCol { line: 143, col: 11 } to LineCol { line: 143, col: 19 }: Function `Is_valid` should have snake_case name, e.g. `is_valid`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 11 } to LineCol { line: 148, col: 22 }: Function `Is_bootable` should have snake_case name, e.g. `is_bootable`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 11 } to LineCol { line: 153, col: 23 }: Function `Set_bootable` should have snake_case name, e.g. `set_bootable`
Warning RustcLint("non_snake_case") from LineCol { line: 153, col: 35 } to LineCol { line: 153, col: 43 }: Parameter `Bootable` should have snake_case name, e.g. `bootable`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 11 } to LineCol { line: 158, col: 24 }: Function `Get_start_lba` should have snake_case name, e.g. `get_start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 163, col: 11 } to LineCol { line: 163, col: 24 }: Function `Set_start_lba` should have snake_case name, e.g. `set_start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 163, col: 36 } to LineCol { line: 163, col: 45 }: Parameter `Start_lba` should have snake_case name, e.g. `start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 168, col: 11 } to LineCol { line: 168, col: 27 }: Function `Get_size_sectors` should have snake_case name, e.g. `get_size_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 11 } to LineCol { line: 173, col: 27 }: Function `Set_size_sectors` should have snake_case name, e.g. `set_size_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 173, col: 39 } to LineCol { line: 173, col: 51 }: Parameter `Size_sectors` should have snake_case name, e.g. `size_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 178, col: 11 } to LineCol { line: 178, col: 29 }: Function `Get_partition_type` should have snake_case name, e.g. `get_partition_type`
Warning RustcLint("non_snake_case") from LineCol { line: 183, col: 11 } to LineCol { line: 183, col: 29 }: Function `Set_partition_type` should have snake_case name, e.g. `set_partition_type`
Warning RustcLint("non_snake_case") from LineCol { line: 183, col: 41 } to LineCol { line: 183, col: 55 }: Parameter `Partition_type` should have snake_case name, e.g. `partition_type`
Warning RustcLint("non_snake_case") from LineCol { line: 188, col: 11 } to LineCol { line: 188, col: 34 }: Function `Get_partition_type_name` should have snake_case name, e.g. `get_partition_type_name`
Warning RustcLint("non_snake_case") from LineCol { line: 193, col: 11 } to LineCol { line: 193, col: 22 }: Function `Get_end_lba` should have snake_case name, e.g. `get_end_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 198, col: 11 } to LineCol { line: 198, col: 25 }: Function `Get_size_bytes` should have snake_case name, e.g. `get_size_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 203, col: 11 } to LineCol { line: 203, col: 24 }: Function `Overlaps_with` should have snake_case name, e.g. `overlaps_with`
Warning RustcLint("non_snake_case") from LineCol { line: 203, col: 32 } to LineCol { line: 203, col: 37 }: Parameter `Other` should have snake_case name, e.g. `other`
Warning RustcLint("non_snake_case") from LineCol { line: 208, col: 12 } to LineCol { line: 208, col: 22 }: Variable `Self_start` should have snake_case name, e.g. `self_start`
Warning RustcLint("non_snake_case") from LineCol { line: 217, col: 11 } to LineCol { line: 217, col: 23 }: Function `Contains_lba` should have snake_case name, e.g. `contains_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 217, col: 31 } to LineCol { line: 217, col: 34 }: Parameter `Lba` should have snake_case name, e.g. `lba`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 12 } to LineCol { line: 222, col: 17 }: Variable `Start` should have snake_case name, e.g. `start`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 11 } to LineCol { line: 228, col: 16 }: Function `Clear` should have snake_case name, e.g. `clear`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Partition/Device.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 363, col: 0 } to LineCol { line: 651, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 11 } to LineCol { line: 69, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 15 } to LineCol { line: 69, col: 26 }: Parameter `Base_device` should have snake_case name, e.g. `base_device`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 41 } to LineCol { line: 69, col: 47 }: Parameter `Offset` should have snake_case name, e.g. `offset`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 54 } to LineCol { line: 69, col: 58 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 11 } to LineCol { line: 99, col: 23 }: Function `New_from_lba` should have snake_case name, e.g. `new_from_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 24 } to LineCol { line: 99, col: 35 }: Parameter `Base_device` should have snake_case name, e.g. `base_device`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 50 } to LineCol { line: 99, col: 59 }: Parameter `Start_lba` should have snake_case name, e.g. `start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 66 } to LineCol { line: 99, col: 78 }: Parameter `Sector_count` should have snake_case name, e.g. `sector_count`
Warning RustcLint("non_snake_case") from LineCol { line: 121, col: 11 } to LineCol { line: 121, col: 21 }: Function `Get_offset` should have snake_case name, e.g. `get_offset`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 11 } to LineCol { line: 141, col: 29 }: Function `Get_partition_size` should have snake_case name, e.g. `get_partition_size`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 11 } to LineCol { line: 161, col: 24 }: Function `Get_start_lba` should have snake_case name, e.g. `get_start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 181, col: 11 } to LineCol { line: 181, col: 27 }: Function `Get_sector_count` should have snake_case name, e.g. `get_sector_count`
Warning RustcLint("non_snake_case") from LineCol { line: 186, col: 11 } to LineCol { line: 186, col: 23 }: Function `Get_position` should have snake_case name, e.g. `get_position`
Warning RustcLint("non_snake_case") from LineCol { line: 191, col: 11 } to LineCol { line: 191, col: 26 }: Function `Get_base_device` should have snake_case name, e.g. `get_base_device`
Warning RustcLint("non_snake_case") from LineCol { line: 196, col: 11 } to LineCol { line: 196, col: 19 }: Function `Is_valid` should have snake_case name, e.g. `is_valid`
Warning RustcLint("non_snake_case") from LineCol { line: 201, col: 11 } to LineCol { line: 201, col: 30 }: Function `Get_remaining_bytes` should have snake_case name, e.g. `get_remaining_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 207, col: 11 } to LineCol { line: 207, col: 20 }: Function `Is_at_end` should have snake_case name, e.g. `is_at_end`
Warning RustcLint("non_snake_case") from LineCol { line: 231, col: 12 } to LineCol { line: 231, col: 21 }: Variable `Available` should have snake_case name, e.g. `available`
Warning RustcLint("non_snake_case") from LineCol { line: 235, col: 12 } to LineCol { line: 235, col: 24 }: Variable `Absolute_pos` should have snake_case name, e.g. `absolute_pos`
Warning RustcLint("non_snake_case") from LineCol { line: 240, col: 12 } to LineCol { line: 240, col: 22 }: Variable `Bytes_read` should have snake_case name, e.g. `bytes_read`
Warning RustcLint("non_snake_case") from LineCol { line: 251, col: 20 } to LineCol { line: 251, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 258, col: 12 } to LineCol { line: 258, col: 21 }: Variable `Available` should have snake_case name, e.g. `available`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 12 } to LineCol { line: 262, col: 24 }: Variable `Absolute_pos` should have snake_case name, e.g. `absolute_pos`
Warning RustcLint("non_snake_case") from LineCol { line: 267, col: 12 } to LineCol { line: 267, col: 25 }: Variable `Bytes_written` should have snake_case name, e.g. `bytes_written`
Warning RustcLint("non_snake_case") from LineCol { line: 282, col: 27 } to LineCol { line: 282, col: 35 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 285, col: 12 } to LineCol { line: 285, col: 19 }: Variable `New_pos` should have snake_case name, e.g. `new_pos`
Warning RustcLint("non_snake_case") from LineCol { line: 295, col: 31 } to LineCol { line: 295, col: 37 }: Variable `Offset` should have snake_case name, e.g. `offset`
Warning RustcLint("non_snake_case") from LineCol { line: 304, col: 12 } to LineCol { line: 304, col: 23 }: Variable `Clamped_pos` should have snake_case name, e.g. `clamped_pos`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/MBR/mod.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 56, col: 0 } to LineCol { line: 57, col: 30 }: code is inactive due to #[cfg] directives: test is disabled
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 853, col: 0 } to LineCol { line: 1334, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 4 } to LineCol { line: 51, col: 13 }: Module `Utilities` should have snake_case name, e.g. `utilities`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 8 } to LineCol { line: 63, col: 22 }: Field `Bootstrap_code` should have snake_case name, e.g. `bootstrap_code`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 8 } to LineCol { line: 65, col: 22 }: Field `Disk_signature` should have snake_case name, e.g. `disk_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 8 } to LineCol { line: 67, col: 16 }: Field `Reserved` should have snake_case name, e.g. `reserved`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 8 } to LineCol { line: 69, col: 18 }: Field `Partitions` should have snake_case name, e.g. `partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 8 } to LineCol { line: 71, col: 22 }: Field `Boot_signature` should have snake_case name, e.g. `boot_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 11 } to LineCol { line: 85, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 11 } to LineCol { line: 96, col: 29 }: Function `New_with_signature` should have snake_case name, e.g. `new_with_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 96, col: 30 } to LineCol { line: 96, col: 44 }: Parameter `Disk_signature` should have snake_case name, e.g. `disk_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 11 } to LineCol { line: 103, col: 21 }: Function `From_bytes` should have snake_case name, e.g. `from_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 22 } to LineCol { line: 103, col: 26 }: Parameter `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 113, col: 16 } to LineCol { line: 113, col: 19 }: Variable `Mbr` should have snake_case name, e.g. `mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 131, col: 13 } to LineCol { line: 131, col: 14 }: Variable `I` should have snake_case name, e.g. `i`
Warning RustcLint("non_snake_case") from LineCol { line: 131, col: 16 } to LineCol { line: 131, col: 25 }: Variable `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 164, col: 11 } to LineCol { line: 164, col: 27 }: Function `Read_from_device` should have snake_case name, e.g. `read_from_device`
Warning RustcLint("non_snake_case") from LineCol { line: 164, col: 28 } to LineCol { line: 164, col: 34 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 16 } to LineCol { line: 166, col: 22 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 172, col: 12 } to LineCol { line: 172, col: 22 }: Variable `Bytes_read` should have snake_case name, e.g. `bytes_read`
Warning RustcLint("non_snake_case") from LineCol { line: 182, col: 11 } to LineCol { line: 182, col: 26 }: Function `Write_to_device` should have snake_case name, e.g. `write_to_device`
Warning RustcLint("non_snake_case") from LineCol { line: 182, col: 34 } to LineCol { line: 182, col: 40 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 187, col: 12 } to LineCol { line: 187, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 11 } to LineCol { line: 199, col: 19 }: Function `Is_valid` should have snake_case name, e.g. `is_valid`
Warning RustcLint("non_snake_case") from LineCol { line: 204, col: 11 } to LineCol { line: 204, col: 31 }: Function `Get_valid_partitions` should have snake_case name, e.g. `get_valid_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 207, col: 21 } to LineCol { line: 207, col: 30 }: Parameter `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 212, col: 11 } to LineCol { line: 212, col: 35 }: Function `Get_valid_partitions_mut` should have snake_case name, e.g. `get_valid_partitions_mut`
Warning RustcLint("non_snake_case") from LineCol { line: 220, col: 11 } to LineCol { line: 220, col: 33 }: Function `Get_bootable_partition` should have snake_case name, e.g. `get_bootable_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 227, col: 11 } to LineCol { line: 227, col: 37 }: Function `Get_bootable_partition_mut` should have snake_case name, e.g. `get_bootable_partition_mut`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 11 } to LineCol { line: 234, col: 33 }: Function `Set_bootable_partition` should have snake_case name, e.g. `set_bootable_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 234, col: 45 } to LineCol { line: 234, col: 50 }: Parameter `Index` should have snake_case name, e.g. `index`
Warning RustcLint("non_snake_case") from LineCol { line: 240, col: 12 } to LineCol { line: 240, col: 21 }: Variable `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 250, col: 11 } to LineCol { line: 250, col: 39 }: Function `Has_gpt_protective_partition` should have snake_case name, e.g. `has_gpt_protective_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 257, col: 11 } to LineCol { line: 257, col: 29 }: Function `Get_disk_signature` should have snake_case name, e.g. `get_disk_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 11 } to LineCol { line: 262, col: 29 }: Function `Set_disk_signature` should have snake_case name, e.g. `set_disk_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 41 } to LineCol { line: 262, col: 50 }: Parameter `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 267, col: 11 } to LineCol { line: 267, col: 34 }: Function `Get_free_partition_slot` should have snake_case name, e.g. `get_free_partition_slot`
Warning RustcLint("non_snake_case") from LineCol { line: 270, col: 23 } to LineCol { line: 270, col: 32 }: Parameter `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 274, col: 11 } to LineCol { line: 274, col: 24 }: Function `Add_partition` should have snake_case name, e.g. `add_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 285, col: 12 } to LineCol { line: 285, col: 25 }: Variable `New_partition` should have snake_case name, e.g. `new_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 293, col: 12 } to LineCol { line: 293, col: 20 }: Variable `Existing` should have snake_case name, e.g. `existing`
Warning RustcLint("non_snake_case") from LineCol { line: 310, col: 11 } to LineCol { line: 310, col: 27 }: Function `Remove_partition` should have snake_case name, e.g. `remove_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 310, col: 39 } to LineCol { line: 310, col: 44 }: Parameter `Index` should have snake_case name, e.g. `index`
Warning RustcLint("non_snake_case") from LineCol { line: 320, col: 11 } to LineCol { line: 320, col: 37 }: Function `Has_overlapping_partitions` should have snake_case name, e.g. `has_overlapping_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 323, col: 13 } to LineCol { line: 323, col: 14 }: Variable `I` should have snake_case name, e.g. `i`
Warning RustcLint("non_snake_case") from LineCol { line: 323, col: 16 } to LineCol { line: 323, col: 26 }: Variable `Partition1` should have snake_case name, e.g. `partition1`
Warning RustcLint("non_snake_case") from LineCol { line: 335, col: 11 } to LineCol { line: 335, col: 30 }: Function `Get_partition_count` should have snake_case name, e.g. `get_partition_count`
Warning RustcLint("non_snake_case") from LineCol { line: 376, col: 11 } to LineCol { line: 376, col: 39 }: Function `Create_all_partition_devices` should have snake_case name, e.g. `create_all_partition_devices`
Warning RustcLint("non_snake_case") from LineCol { line: 382, col: 12 } to LineCol { line: 382, col: 21 }: Variable `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 425, col: 11 } to LineCol { line: 425, col: 34 }: Function `Find_partitions_by_type` should have snake_case name, e.g. `find_partitions_by_type`
Warning RustcLint("non_snake_case") from LineCol { line: 470, col: 11 } to LineCol { line: 470, col: 19 }: Function `Validate` should have snake_case name, e.g. `validate`
Warning RustcLint("non_snake_case") from LineCol { line: 482, col: 12 } to LineCol { line: 482, col: 26 }: Variable `Bootable_count` should have snake_case name, e.g. `bootable_count`
Warning RustcLint("non_snake_case") from LineCol { line: 482, col: 60 } to LineCol { line: 482, col: 61 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 521, col: 11 } to LineCol { line: 521, col: 30 }: Function `Generate_statistics` should have snake_case name, e.g. `generate_statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 524, col: 12 } to LineCol { line: 524, col: 28 }: Variable `Total_partitions` should have snake_case name, e.g. `total_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 525, col: 66 } to LineCol { line: 525, col: 67 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 527, col: 12 } to LineCol { line: 527, col: 26 }: Variable `Fat_partitions` should have snake_case name, e.g. `fat_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 529, col: 21 } to LineCol { line: 529, col: 22 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 532, col: 12 } to LineCol { line: 532, col: 28 }: Variable `Linux_partitions` should have snake_case name, e.g. `linux_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 534, col: 21 } to LineCol { line: 534, col: 22 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 537, col: 12 } to LineCol { line: 537, col: 29 }: Variable `Hidden_partitions` should have snake_case name, e.g. `hidden_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 539, col: 21 } to LineCol { line: 539, col: 22 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 542, col: 12 } to LineCol { line: 542, col: 31 }: Variable `Extended_partitions` should have snake_case name, e.g. `extended_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 544, col: 21 } to LineCol { line: 544, col: 22 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 547, col: 12 } to LineCol { line: 547, col: 30 }: Variable `Unknown_partitions` should have snake_case name, e.g. `unknown_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 549, col: 21 } to LineCol { line: 549, col: 22 }: Parameter `P` should have snake_case name, e.g. `p`
Warning RustcLint("non_snake_case") from LineCol { line: 557, col: 12 } to LineCol { line: 557, col: 30 }: Variable `Total_used_sectors` should have snake_case name, e.g. `total_used_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 562, col: 12 } to LineCol { line: 562, col: 37 }: Variable `Largest_partition_sectors` should have snake_case name, e.g. `largest_partition_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 568, col: 12 } to LineCol { line: 568, col: 38 }: Variable `Smallest_partition_sectors` should have snake_case name, e.g. `smallest_partition_sectors`
Warning RustcLint("non_snake_case") from LineCol { line: 618, col: 11 } to LineCol { line: 618, col: 23 }: Function `Create_basic` should have snake_case name, e.g. `create_basic`
Warning RustcLint("non_snake_case") from LineCol { line: 626, col: 12 } to LineCol { line: 626, col: 21 }: Variable `Start_lba` should have snake_case name, e.g. `start_lba`
Warning RustcLint("non_snake_case") from LineCol { line: 639, col: 11 } to LineCol { line: 639, col: 19 }: Function `To_bytes` should have snake_case name, e.g. `to_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 652, col: 13 } to LineCol { line: 652, col: 14 }: Variable `I` should have snake_case name, e.g. `i`
Warning RustcLint("non_snake_case") from LineCol { line: 652, col: 16 } to LineCol { line: 652, col: 25 }: Variable `Partition` should have snake_case name, e.g. `partition`
Warning RustcLint("non_snake_case") from LineCol { line: 663, col: 16 } to LineCol { line: 663, col: 31 }: Variable `Start_lba_bytes` should have snake_case name, e.g. `start_lba_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 666, col: 16 } to LineCol { line: 666, col: 26 }: Variable `Size_bytes` should have snake_case name, e.g. `size_bytes`
Warning RustcLint("non_snake_case") from LineCol { line: 712, col: 11 } to LineCol { line: 712, col: 50 }: Function `Find_or_create_partition_with_signature` should have snake_case name, e.g. `find_or_create_partition_with_signature`
Warning RustcLint("non_snake_case") from LineCol { line: 772, col: 11 } to LineCol { line: 772, col: 51 }: Function `Format_disk_with_signature_and_partition` should have snake_case name, e.g. `format_disk_with_signature_and_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 841, col: 13 } to LineCol { line: 841, col: 14 }: Variable `I` should have snake_case name, e.g. `i`
Warning RustcLint("non_snake_case") from LineCol { line: 841, col: 16 } to LineCol { line: 841, col: 25 }: Variable `Partition` should have snake_case name, e.g. `partition`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/MBR/Utilities.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 527, col: 0 } to LineCol { line: 1255, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 7 } to LineCol { line: 47, col: 30 }: Function `Create_partition_device` should have snake_case name, e.g. `create_partition_device`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 7 } to LineCol { line: 95, col: 26 }: Function `Scan_mbr_partitions` should have snake_case name, e.g. `scan_mbr_partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 12 } to LineCol { line: 100, col: 22 }: Variable `Partitions` should have snake_case name, e.g. `partitions`
Warning RustcLint("non_snake_case") from LineCol { line: 146, col: 7 } to LineCol { line: 146, col: 19 }: Function `Validate_mbr` should have snake_case name, e.g. `validate_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 146, col: 20 } to LineCol { line: 146, col: 23 }: Parameter `Mbr` should have snake_case name, e.g. `mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 188, col: 7 } to LineCol { line: 188, col: 35 }: Function `Create_all_partition_devices` should have snake_case name, e.g. `create_all_partition_devices`
Warning RustcLint("non_snake_case") from LineCol { line: 229, col: 7 } to LineCol { line: 229, col: 30 }: Function `Find_partitions_by_type` should have snake_case name, e.g. `find_partitions_by_type`
Warning RustcLint("non_snake_case") from LineCol { line: 264, col: 7 } to LineCol { line: 264, col: 20 }: Function `Has_valid_mbr` should have snake_case name, e.g. `has_valid_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 264, col: 21 } to LineCol { line: 264, col: 27 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 300, col: 7 } to LineCol { line: 300, col: 18 }: Function `Is_gpt_disk` should have snake_case name, e.g. `is_gpt_disk`
Warning RustcLint("non_snake_case") from LineCol { line: 300, col: 19 } to LineCol { line: 300, col: 25 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 337, col: 7 } to LineCol { line: 337, col: 23 }: Function `Create_basic_mbr` should have snake_case name, e.g. `create_basic_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 381, col: 7 } to LineCol { line: 381, col: 16 }: Function `Clone_mbr` should have snake_case name, e.g. `clone_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 381, col: 17 } to LineCol { line: 381, col: 30 }: Parameter `Source_device` should have snake_case name, e.g. `source_device`
Warning RustcLint("non_snake_case") from LineCol { line: 381, col: 46 } to LineCol { line: 381, col: 59 }: Parameter `Target_device` should have snake_case name, e.g. `target_device`
Warning RustcLint("non_snake_case") from LineCol { line: 422, col: 7 } to LineCol { line: 422, col: 17 }: Function `Backup_mbr` should have snake_case name, e.g. `backup_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 422, col: 18 } to LineCol { line: 422, col: 24 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 463, col: 7 } to LineCol { line: 463, col: 18 }: Function `Restore_mbr` should have snake_case name, e.g. `restore_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 463, col: 19 } to LineCol { line: 463, col: 25 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 463, col: 41 } to LineCol { line: 463, col: 47 }: Parameter `Backup` should have snake_case name, e.g. `backup`
Warning RustcLint("non_snake_case") from LineCol { line: 483, col: 7 } to LineCol { line: 483, col: 42 }: Function `Format_disk_and_get_first_partition` should have snake_case name, e.g. `format_disk_and_get_first_partition`
Warning RustcLint("non_snake_case") from LineCol { line: 489, col: 8 } to LineCol { line: 489, col: 11 }: Variable `Mbr` should have snake_case name, e.g. `mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 494, col: 12 } to LineCol { line: 494, col: 23 }: Variable `Device_size` should have snake_case name, e.g. `device_size`
Warning RustcLint("non_snake_case") from LineCol { line: 503, col: 12 } to LineCol { line: 503, col: 21 }: Variable `Signature` should have snake_case name, e.g. `signature`
Warning RustcLint("non_snake_case") from LineCol { line: 509, col: 12 } to LineCol { line: 509, col: 19 }: Variable `New_mbr` should have snake_case name, e.g. `new_mbr`
Warning RustcLint("non_snake_case") from LineCol { line: 518, col: 8 } to LineCol { line: 518, col: 24 }: Variable `Valid_partitions` should have snake_case name, e.g. `valid_partitions`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 9 }: Module `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 9 }: Module `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 15 }: Module `Identifiers` should have snake_case name, e.g. `identifiers`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 12 }: Module `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 8 }: Module `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 14 }: Module `Permission` should have snake_case name, e.g. `permission`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 12 }: Module `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 8 }: Module `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 4 } to LineCol { line: 14, col: 14 }: Module `Statistics` should have snake_case name, e.g. `statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 15, col: 4 } to LineCol { line: 15, col: 8 }: Module `Type` should have snake_case name, e.g. `type`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Type.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 73, col: 0 } to LineCol { line: 289, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Statistics.rs
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 4 } to LineCol { line: 30, col: 8 }: Field `Type` should have snake_case name, e.g. `type`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 17 } to LineCol { line: 66, col: 32 }: Function `Get_file_system` should have snake_case name, e.g. `get_file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 17 } to LineCol { line: 70, col: 26 }: Function `Get_inode` should have snake_case name, e.g. `get_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 17 } to LineCol { line: 74, col: 26 }: Function `Get_links` should have snake_case name, e.g. `get_links`
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 17 } to LineCol { line: 78, col: 25 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 82, col: 17 } to LineCol { line: 82, col: 32 }: Function `Get_last_access` should have snake_case name, e.g. `get_last_access`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 17 } to LineCol { line: 86, col: 38 }: Function `Get_last_modification` should have snake_case name, e.g. `get_last_modification`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 17 } to LineCol { line: 90, col: 39 }: Function `Get_last_status_change` should have snake_case name, e.g. `get_last_status_change`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 17 } to LineCol { line: 94, col: 25 }: Function `Get_type` should have snake_case name, e.g. `get_type`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 17 } to LineCol { line: 98, col: 32 }: Function `Get_permissions` should have snake_case name, e.g. `get_permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 17 } to LineCol { line: 102, col: 25 }: Function `Get_user` should have snake_case name, e.g. `get_user`
Warning RustcLint("non_snake_case") from LineCol { line: 106, col: 17 } to LineCol { line: 106, col: 26 }: Function `Get_group` should have snake_case name, e.g. `get_group`
Warning RustcLint("non_snake_case") from LineCol { line: 110, col: 11 } to LineCol { line: 110, col: 26 }: Function `Set_file_system` should have snake_case name, e.g. `set_file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 110, col: 38 } to LineCol { line: 110, col: 49 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 11 } to LineCol { line: 115, col: 20 }: Function `Set_inode` should have snake_case name, e.g. `set_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 32 } to LineCol { line: 115, col: 37 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 11 } to LineCol { line: 120, col: 19 }: Function `Set_type` should have snake_case name, e.g. `set_type`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 31 } to LineCol { line: 120, col: 35 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 125, col: 11 } to LineCol { line: 125, col: 20 }: Function `Set_links` should have snake_case name, e.g. `set_links`
Warning RustcLint("non_snake_case") from LineCol { line: 125, col: 32 } to LineCol { line: 125, col: 37 }: Parameter `Links` should have snake_case name, e.g. `links`
Warning RustcLint("non_snake_case") from LineCol { line: 130, col: 11 } to LineCol { line: 130, col: 19 }: Function `Set_size` should have snake_case name, e.g. `set_size`
Warning RustcLint("non_snake_case") from LineCol { line: 130, col: 31 } to LineCol { line: 130, col: 35 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 11 } to LineCol { line: 135, col: 26 }: Function `Set_last_access` should have snake_case name, e.g. `set_last_access`
Warning RustcLint("non_snake_case") from LineCol { line: 135, col: 38 } to LineCol { line: 135, col: 49 }: Parameter `Last_access` should have snake_case name, e.g. `last_access`
Warning RustcLint("non_snake_case") from LineCol { line: 140, col: 11 } to LineCol { line: 140, col: 32 }: Function `Set_last_modification` should have snake_case name, e.g. `set_last_modification`
Warning RustcLint("non_snake_case") from LineCol { line: 140, col: 44 } to LineCol { line: 140, col: 61 }: Parameter `Last_modification` should have snake_case name, e.g. `last_modification`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 11 } to LineCol { line: 145, col: 33 }: Function `Set_last_status_change` should have snake_case name, e.g. `set_last_status_change`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 45 } to LineCol { line: 145, col: 63 }: Parameter `Last_status_change` should have snake_case name, e.g. `last_status_change`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 11 } to LineCol { line: 150, col: 26 }: Function `Set_permissions` should have snake_case name, e.g. `set_permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 38 } to LineCol { line: 150, col: 49 }: Parameter `Permissions` should have snake_case name, e.g. `permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 155, col: 11 } to LineCol { line: 155, col: 19 }: Function `Set_user` should have snake_case name, e.g. `set_user`
Warning RustcLint("non_snake_case") from LineCol { line: 155, col: 31 } to LineCol { line: 155, col: 35 }: Parameter `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 11 } to LineCol { line: 160, col: 20 }: Function `Set_group` should have snake_case name, e.g. `set_group`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 32 } to LineCol { line: 160, col: 37 }: Parameter `Group` should have snake_case name, e.g. `group`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Size.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 182, col: 0 } to LineCol { line: 438, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 17 } to LineCol { line: 65, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 21 } to LineCol { line: 65, col: 25 }: Parameter `Item` should have snake_case name, e.g. `item`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 17 } to LineCol { line: 83, col: 23 }: Function `As_u64` should have snake_case name, e.g. `as_u64`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Position.rs
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Permission.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 362, col: 0 } to LineCol { line: 517, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 17 } to LineCol { line: 79, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 17 } to LineCol { line: 94, col: 28 }: Function `New_default` should have snake_case name, e.g. `new_default`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 29 } to LineCol { line: 94, col: 33 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 11 } to LineCol { line: 132, col: 19 }: Function `Set_user` should have snake_case name, e.g. `set_user`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 30 } to LineCol { line: 132, col: 34 }: Parameter `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 11 } to LineCol { line: 138, col: 20 }: Function `Set_group` should have snake_case name, e.g. `set_group`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 31 } to LineCol { line: 138, col: 36 }: Parameter `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 144, col: 11 } to LineCol { line: 144, col: 21 }: Function `Set_others` should have snake_case name, e.g. `set_others`
Warning RustcLint("non_snake_case") from LineCol { line: 144, col: 32 } to LineCol { line: 144, col: 38 }: Parameter `Others` should have snake_case name, e.g. `others`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 11 } to LineCol { line: 150, col: 22 }: Function `Set_special` should have snake_case name, e.g. `set_special`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 33 } to LineCol { line: 150, col: 40 }: Parameter `Special` should have snake_case name, e.g. `special`
Warning RustcLint("non_snake_case") from LineCol { line: 156, col: 11 } to LineCol { line: 156, col: 19 }: Function `Get_user` should have snake_case name, e.g. `get_user`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 11 } to LineCol { line: 161, col: 20 }: Function `Get_group` should have snake_case name, e.g. `get_group`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 11 } to LineCol { line: 166, col: 21 }: Function `Get_others` should have snake_case name, e.g. `get_others`
Warning RustcLint("non_snake_case") from LineCol { line: 171, col: 11 } to LineCol { line: 171, col: 22 }: Function `Get_special` should have snake_case name, e.g. `get_special`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 17 } to LineCol { line: 176, col: 27 }: Function `From_octal` should have snake_case name, e.g. `from_octal`
Warning RustcLint("non_snake_case") from LineCol { line: 176, col: 28 } to LineCol { line: 176, col: 32 }: Parameter `Unix` should have snake_case name, e.g. `unix`
Warning RustcLint("non_snake_case") from LineCol { line: 185, col: 17 } to LineCol { line: 185, col: 23 }: Function `As_u16` should have snake_case name, e.g. `as_u16`
Warning RustcLint("non_snake_case") from LineCol { line: 202, col: 12 } to LineCol { line: 202, col: 19 }: Variable `Set_uid` should have snake_case name, e.g. `set_uid`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 11 } to LineCol { line: 218, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 15 } to LineCol { line: 218, col: 21 }: Parameter `Sticky` should have snake_case name, e.g. `sticky`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 29 } to LineCol { line: 218, col: 36 }: Parameter `Set_gid` should have snake_case name, e.g. `set_gid`
Warning RustcLint("non_snake_case") from LineCol { line: 218, col: 44 } to LineCol { line: 218, col: 51 }: Parameter `Set_uid` should have snake_case name, e.g. `set_uid`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 11 } to LineCol { line: 222, col: 21 }: Function `Set_sticky` should have snake_case name, e.g. `set_sticky`
Warning RustcLint("non_snake_case") from LineCol { line: 222, col: 32 } to LineCol { line: 222, col: 38 }: Parameter `Sticky` should have snake_case name, e.g. `sticky`
Warning RustcLint("non_snake_case") from LineCol { line: 227, col: 11 } to LineCol { line: 227, col: 35 }: Function `Set_set_group_identifier` should have snake_case name, e.g. `set_set_group_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 227, col: 46 } to LineCol { line: 227, col: 53 }: Parameter `Set_gid` should have snake_case name, e.g. `set_gid`
Warning RustcLint("non_snake_case") from LineCol { line: 232, col: 11 } to LineCol { line: 232, col: 34 }: Function `Set_set_user_identifier` should have snake_case name, e.g. `set_set_user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 232, col: 45 } to LineCol { line: 232, col: 52 }: Parameter `Set_uid` should have snake_case name, e.g. `set_uid`
Warning RustcLint("non_snake_case") from LineCol { line: 237, col: 17 } to LineCol { line: 237, col: 27 }: Function `Get_sticky` should have snake_case name, e.g. `get_sticky`
Warning RustcLint("non_snake_case") from LineCol { line: 241, col: 17 } to LineCol { line: 241, col: 41 }: Function `Get_set_group_identifier` should have snake_case name, e.g. `get_set_group_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 245, col: 17 } to LineCol { line: 245, col: 40 }: Function `Get_set_user_identifier` should have snake_case name, e.g. `get_set_user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 249, col: 17 } to LineCol { line: 249, col: 24 }: Function `To_unix` should have snake_case name, e.g. `to_unix`
Warning RustcLint("non_snake_case") from LineCol { line: 253, col: 11 } to LineCol { line: 253, col: 20 }: Function `From_unix` should have snake_case name, e.g. `from_unix`
Warning RustcLint("non_snake_case") from LineCol { line: 253, col: 21 } to LineCol { line: 253, col: 25 }: Parameter `Unix` should have snake_case name, e.g. `unix`
Warning RustcLint("non_snake_case") from LineCol { line: 306, col: 17 } to LineCol { line: 306, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 306, col: 21 } to LineCol { line: 306, col: 25 }: Parameter `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 306, col: 33 } to LineCol { line: 306, col: 38 }: Parameter `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 306, col: 46 } to LineCol { line: 306, col: 53 }: Parameter `Execute` should have snake_case name, e.g. `execute`
Warning RustcLint("non_snake_case") from LineCol { line: 311, col: 11 } to LineCol { line: 311, col: 19 }: Function `Set_read` should have snake_case name, e.g. `set_read`
Warning RustcLint("non_snake_case") from LineCol { line: 311, col: 30 } to LineCol { line: 311, col: 34 }: Parameter `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 317, col: 11 } to LineCol { line: 317, col: 20 }: Function `Set_write` should have snake_case name, e.g. `set_write`
Warning RustcLint("non_snake_case") from LineCol { line: 317, col: 31 } to LineCol { line: 317, col: 36 }: Parameter `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 323, col: 11 } to LineCol { line: 323, col: 22 }: Function `Set_execute` should have snake_case name, e.g. `set_execute`
Warning RustcLint("non_snake_case") from LineCol { line: 323, col: 33 } to LineCol { line: 323, col: 40 }: Parameter `Execute` should have snake_case name, e.g. `execute`
Warning RustcLint("non_snake_case") from LineCol { line: 329, col: 17 } to LineCol { line: 329, col: 25 }: Function `Get_read` should have snake_case name, e.g. `get_read`
Warning RustcLint("non_snake_case") from LineCol { line: 334, col: 17 } to LineCol { line: 334, col: 26 }: Function `Get_write` should have snake_case name, e.g. `get_write`
Warning RustcLint("non_snake_case") from LineCol { line: 339, col: 17 } to LineCol { line: 339, col: 28 }: Function `Get_execute` should have snake_case name, e.g. `get_execute`
Warning RustcLint("non_snake_case") from LineCol { line: 344, col: 17 } to LineCol { line: 344, col: 24 }: Function `To_unix` should have snake_case name, e.g. `to_unix`
Warning RustcLint("non_snake_case") from LineCol { line: 348, col: 11 } to LineCol { line: 348, col: 18 }: Function `Include` should have snake_case name, e.g. `include`
Warning RustcLint("non_snake_case") from LineCol { line: 348, col: 26 } to LineCol { line: 348, col: 31 }: Parameter `Other` should have snake_case name, e.g. `other`
Warning RustcLint("non_snake_case") from LineCol { line: 353, col: 11 } to LineCol { line: 353, col: 20 }: Function `From_unix` should have snake_case name, e.g. `from_unix`
Warning RustcLint("non_snake_case") from LineCol { line: 353, col: 21 } to LineCol { line: 353, col: 25 }: Parameter `Unix` should have snake_case name, e.g. `unix`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Path/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 14 }: Module `Components` should have snake_case name, e.g. `components`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 14 }: Module `Path_owned` should have snake_case name, e.g. `path_owned`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 18 }: Module `Path_reference` should have snake_case name, e.g. `path_reference`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Path/Path_reference.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 207, col: 0 } to LineCol { line: 212, col: 1 }: code is inactive due to #[cfg] directives: feature = "std" is disabled
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 250, col: 0 } to LineCol { line: 384, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 17 } to LineCol { line: 50, col: 25 }: Function `From_str` should have snake_case name, e.g. `from_str`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 26 } to LineCol { line: 50, col: 30 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 11 } to LineCol { line: 56, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 56, col: 39 } to LineCol { line: 56, col: 43 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 11 } to LineCol { line: 60, col: 19 }: Function `Is_valid` should have snake_case name, e.g. `is_valid`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 11 } to LineCol { line: 64, col: 22 }: Function `Is_absolute` should have snake_case name, e.g. `is_absolute`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 11 } to LineCol { line: 68, col: 18 }: Function `Is_root` should have snake_case name, e.g. `is_root`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 11 } to LineCol { line: 72, col: 19 }: Function `Is_empty` should have snake_case name, e.g. `is_empty`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 11 } to LineCol { line: 76, col: 23 }: Function `Is_canonical` should have snake_case name, e.g. `is_canonical`
WeakWarning Ra("remove-unnecessary-else", WeakWarning) from LineCol { line: 88, col: 18 } to LineCol { line: 88, col: 22 }: remove unnecessary else block
WeakWarning Ra("remove-unnecessary-else", WeakWarning) from LineCol { line: 101, col: 14 } to LineCol { line: 101, col: 18 }: remove unnecessary else block
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 11 } to LineCol { line: 80, col: 20 }: Function `Go_parent` should have snake_case name, e.g. `go_parent`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 11 } to LineCol { line: 109, col: 26 }: Function `Get_file_prefix` should have snake_case name, e.g. `get_file_prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 123, col: 11 } to LineCol { line: 123, col: 24 }: Function `Get_file_name` should have snake_case name, e.g. `get_file_name`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 11 } to LineCol { line: 133, col: 24 }: Function `Get_extension` should have snake_case name, e.g. `get_extension`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 11 } to LineCol { line: 139, col: 24 }: Function `Set_extension` should have snake_case name, e.g. `set_extension`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 32 } to LineCol { line: 139, col: 41 }: Parameter `Extension` should have snake_case name, e.g. `extension`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 11 } to LineCol { line: 150, col: 23 }: Function `Strip_prefix` should have snake_case name, e.g. `strip_prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 38 } to LineCol { line: 150, col: 49 }: Parameter `Path_prefix` should have snake_case name, e.g. `path_prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 11 } to LineCol { line: 160, col: 32 }: Function `Strip_prefix_absolute` should have snake_case name, e.g. `strip_prefix_absolute`
Warning RustcLint("non_snake_case") from LineCol { line: 160, col: 47 } to LineCol { line: 160, col: 58 }: Parameter `Path_prefix` should have snake_case name, e.g. `path_prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 165, col: 12 } to LineCol { line: 165, col: 27 }: Variable `Stripped_prefix` should have snake_case name, e.g. `stripped_prefix`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 11 } to LineCol { line: 174, col: 23 }: Function `Strip_suffix` should have snake_case name, e.g. `strip_suffix`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 38 } to LineCol { line: 174, col: 49 }: Parameter `Path_suffix` should have snake_case name, e.g. `path_suffix`
Warning RustcLint("non_snake_case") from LineCol { line: 186, col: 11 } to LineCol { line: 186, col: 25 }: Function `Get_components` should have snake_case name, e.g. `get_components`
Warning RustcLint("non_snake_case") from LineCol { line: 190, col: 11 } to LineCol { line: 190, col: 15 }: Function `Join` should have snake_case name, e.g. `join`
Warning RustcLint("non_snake_case") from LineCol { line: 190, col: 23 } to LineCol { line: 190, col: 27 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 194, col: 11 } to LineCol { line: 194, col: 17 }: Function `Append` should have snake_case name, e.g. `append`
Warning RustcLint("non_snake_case") from LineCol { line: 194, col: 25 } to LineCol { line: 194, col: 29 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 198, col: 11 } to LineCol { line: 198, col: 21 }: Function `Get_length` should have snake_case name, e.g. `get_length`
Warning RustcLint("non_snake_case") from LineCol { line: 202, col: 11 } to LineCol { line: 202, col: 17 }: Function `As_str` should have snake_case name, e.g. `as_str`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Path/Path_owned.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 201, col: 0 } to LineCol { line: 242, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 7 } to LineCol { line: 133, col: 22 }: Function `Is_valid_string` should have snake_case name, e.g. `is_valid_string`
Warning RustcLint("non_snake_case") from LineCol { line: 133, col: 23 } to LineCol { line: 133, col: 29 }: Parameter `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 136, col: 8 } to LineCol { line: 136, col: 17 }: Variable `Character` should have snake_case name, e.g. `character`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 18 } to LineCol { line: 19, col: 31 }: Function `New_unchecked` should have snake_case name, e.g. `new_unchecked`
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 32 } to LineCol { line: 19, col: 36 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 11 } to LineCol { line: 23, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 23, col: 15 } to LineCol { line: 23, col: 19 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 11 } to LineCol { line: 37, col: 15 }: Function `Root` should have snake_case name, e.g. `root`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 15 }: Function `Join` should have snake_case name, e.g. `join`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 26 } to LineCol { line: 41, col: 30 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 11 } to LineCol { line: 58, col: 17 }: Function `Append` should have snake_case name, e.g. `append`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 24 } to LineCol { line: 58, col: 28 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 11 } to LineCol { line: 62, col: 34 }: Function `Revert_parent_directory` should have snake_case name, e.g. `revert_parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 11 } to LineCol { line: 78, col: 24 }: Function `Get_extension` should have snake_case name, e.g. `get_extension`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 11 } to LineCol { line: 89, col: 24 }: Function `Get_file_name` should have snake_case name, e.g. `get_file_name`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 11 } to LineCol { line: 102, col: 26 }: Function `Get_relative_to` should have snake_case name, e.g. `get_relative_to`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 34 } to LineCol { line: 102, col: 38 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 110, col: 11 } to LineCol { line: 110, col: 23 }: Function `Canonicalize` should have snake_case name, e.g. `canonicalize`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 12 } to LineCol { line: 117, col: 21 }: Variable `Component` should have snake_case name, e.g. `component`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Path/Components.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 51, col: 0 } to LineCol { line: 101, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 11 } to LineCol { line: 28, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 15 } to LineCol { line: 28, col: 19 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 11 } to LineCol { line: 32, col: 32 }: Function `Get_common_components` should have snake_case name, e.g. `get_common_components`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 39 } to LineCol { line: 32, col: 44 }: Parameter `Other` should have snake_case name, e.g. `other`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Metadata.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 124, col: 0 } to LineCol { line: 375, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 4 } to LineCol { line: 21, col: 8 }: Field `Type` should have snake_case name, e.g. `type`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 11 } to LineCol { line: 39, col: 22 }: Function `Get_default` should have snake_case name, e.g. `get_default`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 11 } to LineCol { line: 59, col: 20 }: Function `Get_inode` should have snake_case name, e.g. `get_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 11 } to LineCol { line: 63, col: 19 }: Function `Get_type` should have snake_case name, e.g. `get_type`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 11 } to LineCol { line: 67, col: 28 }: Function `Get_creation_time` should have snake_case name, e.g. `get_creation_time`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 11 } to LineCol { line: 71, col: 32 }: Function `Get_modification_time` should have snake_case name, e.g. `get_modification_time`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 11 } to LineCol { line: 75, col: 26 }: Function `Get_access_time` should have snake_case name, e.g. `get_access_time`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 11 } to LineCol { line: 79, col: 26 }: Function `Get_permissions` should have snake_case name, e.g. `get_permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 11 } to LineCol { line: 83, col: 19 }: Function `Get_user` should have snake_case name, e.g. `get_user`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 11 } to LineCol { line: 87, col: 20 }: Function `Get_group` should have snake_case name, e.g. `get_group`
Warning RustcLint("non_snake_case") from LineCol { line: 91, col: 11 } to LineCol { line: 91, col: 20 }: Function `Set_inode` should have snake_case name, e.g. `set_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 91, col: 32 } to LineCol { line: 91, col: 37 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 11 } to LineCol { line: 95, col: 19 }: Function `Set_type` should have snake_case name, e.g. `set_type`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 31 } to LineCol { line: 95, col: 35 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 11 } to LineCol { line: 99, col: 28 }: Function `Set_creation_time` should have snake_case name, e.g. `set_creation_time`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 40 } to LineCol { line: 99, col: 44 }: Parameter `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 11 } to LineCol { line: 103, col: 32 }: Function `Set_modification_time` should have snake_case name, e.g. `set_modification_time`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 44 } to LineCol { line: 103, col: 48 }: Parameter `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 11 } to LineCol { line: 107, col: 26 }: Function `Set_access_time` should have snake_case name, e.g. `set_access_time`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 38 } to LineCol { line: 107, col: 42 }: Parameter `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 11 } to LineCol { line: 111, col: 26 }: Function `Set_permissions` should have snake_case name, e.g. `set_permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 38 } to LineCol { line: 111, col: 49 }: Parameter `Permissions` should have snake_case name, e.g. `permissions`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 11 } to LineCol { line: 115, col: 20 }: Function `Set_owner` should have snake_case name, e.g. `set_owner`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 32 } to LineCol { line: 115, col: 37 }: Parameter `Owner` should have snake_case name, e.g. `owner`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 11 } to LineCol { line: 119, col: 20 }: Function `Set_group` should have snake_case name, e.g. `set_group`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 32 } to LineCol { line: 119, col: 37 }: Parameter `Group` should have snake_case name, e.g. `group`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/mod.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 9 }: Module `Entry` should have snake_case name, e.g. `entry`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 15 }: Module `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 9 }: Module `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 14 }: Module `Local_file` should have snake_case name, e.g. `local_file`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 15 }: Module `Unique_file` should have snake_case name, e.g. `unique_file`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/Unique_file.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 112, col: 0 } to LineCol { line: 130, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 17 } to LineCol { line: 58, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 21 } to LineCol { line: 58, col: 32 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 58, col: 63 } to LineCol { line: 58, col: 67 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 68, col: 17 } to LineCol { line: 68, col: 22 }: Function `Split` should have snake_case name, e.g. `split`
Warning RustcLint("non_snake_case") from LineCol { line: 73, col: 12 } to LineCol { line: 73, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 17 } to LineCol { line: 79, col: 43 }: Function `Into_local_file_identifier` should have snake_case name, e.g. `into_local_file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 12 } to LineCol { line: 85, col: 22 }: Variable `Local_file` should have snake_case name, e.g. `local_file`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 17 } to LineCol { line: 90, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 17 } to LineCol { line: 95, col: 25 }: Function `From_raw` should have snake_case name, e.g. `from_raw`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 26 } to LineCol { line: 95, col: 31 }: Parameter `Inner` should have snake_case name, e.g. `inner`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/Local_file.rs
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 17 } to LineCol { line: 54, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 21 } to LineCol { line: 54, col: 25 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 49 } to LineCol { line: 54, col: 53 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 17 } to LineCol { line: 61, col: 22 }: Function `Split` should have snake_case name, e.g. `split`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 12 } to LineCol { line: 65, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 17 } to LineCol { line: 71, col: 28 }: Function `Get_minimum` should have snake_case name, e.g. `get_minimum`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 29 } to LineCol { line: 71, col: 33 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 17 } to LineCol { line: 75, col: 28 }: Function `Get_maximum` should have snake_case name, e.g. `get_maximum`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 29 } to LineCol { line: 75, col: 33 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 17 } to LineCol { line: 79, col: 44 }: Function `Into_unique_file_identifier` should have snake_case name, e.g. `into_unique_file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 12 } to LineCol { line: 85, col: 23 }: Variable `Unique_file` should have snake_case name, e.g. `unique_file`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 17 } to LineCol { line: 90, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/Inode.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 110, col: 0 } to LineCol { line: 302, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 17 } to LineCol { line: 61, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 21 } to LineCol { line: 61, col: 25 }: Parameter `Item` should have snake_case name, e.g. `item`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 17 } to LineCol { line: 79, col: 23 }: Function `As_u64` should have snake_case name, e.g. `as_u64`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/File_system.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 2, col: 0 } to LineCol { line: 9, col: 49 }: code is inactive due to #[cfg] directives: target_pointer_width = "32" is disabled
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 68, col: 0 } to LineCol { line: 78, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 17 } to LineCol { line: 33, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 33, col: 21 } to LineCol { line: 33, col: 31 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 17 } to LineCol { line: 37, col: 25 }: Function `As_inner` should have snake_case name, e.g. `as_inner`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/File.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 6, col: 0 } to LineCol { line: 16, col: 42 }: code is inactive due to #[cfg] directives: target_pointer_width = "32" is disabled
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 124, col: 0 } to LineCol { line: 134, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 17 } to LineCol { line: 89, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 21 } to LineCol { line: 89, col: 31 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 17 } to LineCol { line: 107, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Identifiers/Entry.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 0, col: 0 } to LineCol { line: 1, col: 43 }: code is inactive due to #[cfg] directives: target_pointer_width = "32" is disabled
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Flags.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 437, col: 0 } to LineCol { line: 575, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 17 } to LineCol { line: 46, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 21 } to LineCol { line: 46, col: 25 }: Parameter `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 33 } to LineCol { line: 46, col: 38 }: Parameter `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 17 } to LineCol { line: 50, col: 24 }: Function `Set_bit` should have snake_case name, e.g. `set_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 35 } to LineCol { line: 50, col: 39 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 50, col: 45 } to LineCol { line: 50, col: 50 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 17 } to LineCol { line: 59, col: 25 }: Function `Set_read` should have snake_case name, e.g. `set_read`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 32 } to LineCol { line: 59, col: 37 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 17 } to LineCol { line: 63, col: 26 }: Function `Set_write` should have snake_case name, e.g. `set_write`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 33 } to LineCol { line: 63, col: 38 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 17 } to LineCol { line: 67, col: 24 }: Function `Get_bit` should have snake_case name, e.g. `get_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 32 } to LineCol { line: 67, col: 36 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 71, col: 17 } to LineCol { line: 71, col: 25 }: Function `Get_read` should have snake_case name, e.g. `get_read`
Warning RustcLint("non_snake_case") from LineCol { line: 75, col: 17 } to LineCol { line: 75, col: 26 }: Function `Get_write` should have snake_case name, e.g. `get_write`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 17 } to LineCol { line: 79, col: 24 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 79, col: 25 } to LineCol { line: 79, col: 30 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 83, col: 17 } to LineCol { line: 83, col: 22 }: Function `As_u8` should have snake_case name, e.g. `as_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 17 } to LineCol { line: 134, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 21 } to LineCol { line: 134, col: 27 }: Parameter `Create` should have snake_case name, e.g. `create`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 35 } to LineCol { line: 134, col: 46 }: Parameter `Create_only` should have snake_case name, e.g. `create_only`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 54 } to LineCol { line: 134, col: 62 }: Parameter `Truncate` should have snake_case name, e.g. `truncate`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 17 } to LineCol { line: 141, col: 24 }: Function `Get_bit` should have snake_case name, e.g. `get_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 32 } to LineCol { line: 141, col: 36 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 17 } to LineCol { line: 145, col: 24 }: Function `Set_bit` should have snake_case name, e.g. `set_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 35 } to LineCol { line: 145, col: 39 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 45 } to LineCol { line: 145, col: 50 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 154, col: 17 } to LineCol { line: 154, col: 27 }: Function `Get_create` should have snake_case name, e.g. `get_create`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 17 } to LineCol { line: 158, col: 27 }: Function `Set_create` should have snake_case name, e.g. `set_create`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 34 } to LineCol { line: 158, col: 39 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 162, col: 17 } to LineCol { line: 162, col: 30 }: Function `Get_exclusive` should have snake_case name, e.g. `get_exclusive`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 17 } to LineCol { line: 166, col: 30 }: Function `Set_exclusive` should have snake_case name, e.g. `set_exclusive`
Warning RustcLint("non_snake_case") from LineCol { line: 166, col: 37 } to LineCol { line: 166, col: 42 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 170, col: 17 } to LineCol { line: 170, col: 29 }: Function `Get_truncate` should have snake_case name, e.g. `get_truncate`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 17 } to LineCol { line: 174, col: 29 }: Function `Set_truncate` should have snake_case name, e.g. `set_truncate`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 36 } to LineCol { line: 174, col: 41 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 178, col: 17 } to LineCol { line: 178, col: 24 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 178, col: 25 } to LineCol { line: 178, col: 30 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 236, col: 17 } to LineCol { line: 236, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 249, col: 13 } to LineCol { line: 249, col: 20 }: Function `Set_bit` should have snake_case name, e.g. `set_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 249, col: 31 } to LineCol { line: 249, col: 35 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 249, col: 41 } to LineCol { line: 249, col: 46 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 258, col: 13 } to LineCol { line: 258, col: 20 }: Function `Get_bit` should have snake_case name, e.g. `get_bit`
Warning RustcLint("non_snake_case") from LineCol { line: 258, col: 28 } to LineCol { line: 258, col: 32 }: Parameter `Mask` should have snake_case name, e.g. `mask`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 17 } to LineCol { line: 262, col: 33 }: Function `Set_non_blocking` should have snake_case name, e.g. `set_non_blocking`
Warning RustcLint("non_snake_case") from LineCol { line: 262, col: 40 } to LineCol { line: 262, col: 45 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 266, col: 11 } to LineCol { line: 266, col: 27 }: Function `Get_non_blocking` should have snake_case name, e.g. `get_non_blocking`
Warning RustcLint("non_snake_case") from LineCol { line: 270, col: 17 } to LineCol { line: 270, col: 27 }: Function `Set_append` should have snake_case name, e.g. `set_append`
Warning RustcLint("non_snake_case") from LineCol { line: 270, col: 34 } to LineCol { line: 270, col: 39 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 274, col: 17 } to LineCol { line: 274, col: 27 }: Function `Get_append` should have snake_case name, e.g. `get_append`
Warning RustcLint("non_snake_case") from LineCol { line: 278, col: 17 } to LineCol { line: 278, col: 32 }: Function `Set_synchronous` should have snake_case name, e.g. `set_synchronous`
Warning RustcLint("non_snake_case") from LineCol { line: 278, col: 39 } to LineCol { line: 278, col: 44 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 282, col: 17 } to LineCol { line: 282, col: 32 }: Function `Get_synchronous` should have snake_case name, e.g. `get_synchronous`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 17 } to LineCol { line: 286, col: 42 }: Function `Set_synchronous_data_only` should have snake_case name, e.g. `set_synchronous_data_only`
Warning RustcLint("non_snake_case") from LineCol { line: 286, col: 49 } to LineCol { line: 286, col: 54 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 290, col: 17 } to LineCol { line: 290, col: 42 }: Function `Get_synchronous_data_only` should have snake_case name, e.g. `get_synchronous_data_only`
Warning RustcLint("non_snake_case") from LineCol { line: 294, col: 17 } to LineCol { line: 294, col: 24 }: Function `From_u8` should have snake_case name, e.g. `from_u8`
Warning RustcLint("non_snake_case") from LineCol { line: 294, col: 25 } to LineCol { line: 294, col: 30 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 363, col: 17 } to LineCol { line: 363, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 368, col: 31 } to LineCol { line: 368, col: 35 }: Variable `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 373, col: 12 } to LineCol { line: 373, col: 18 }: Variable `Status` should have snake_case name, e.g. `status`
Warning RustcLint("non_snake_case") from LineCol { line: 373, col: 33 } to LineCol { line: 373, col: 39 }: Variable `Status` should have snake_case name, e.g. `status`
Warning RustcLint("non_snake_case") from LineCol { line: 379, col: 16 } to LineCol { line: 379, col: 21 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 386, col: 17 } to LineCol { line: 386, col: 25 }: Function `Get_mode` should have snake_case name, e.g. `get_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 390, col: 17 } to LineCol { line: 390, col: 25 }: Function `Get_open` should have snake_case name, e.g. `get_open`
Warning RustcLint("non_snake_case") from LineCol { line: 394, col: 17 } to LineCol { line: 394, col: 27 }: Function `Get_status` should have snake_case name, e.g. `get_status`
Warning RustcLint("non_snake_case") from LineCol { line: 398, col: 17 } to LineCol { line: 398, col: 25 }: Function `Set_mode` should have snake_case name, e.g. `set_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 398, col: 36 } to LineCol { line: 398, col: 40 }: Parameter `Mode` should have snake_case name, e.g. `mode`
Warning RustcLint("non_snake_case") from LineCol { line: 404, col: 17 } to LineCol { line: 404, col: 25 }: Function `Set_open` should have snake_case name, e.g. `set_open`
Warning RustcLint("non_snake_case") from LineCol { line: 404, col: 36 } to LineCol { line: 404, col: 40 }: Parameter `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 410, col: 17 } to LineCol { line: 410, col: 27 }: Function `Set_status` should have snake_case name, e.g. `set_status`
Warning RustcLint("non_snake_case") from LineCol { line: 410, col: 38 } to LineCol { line: 410, col: 44 }: Parameter `Status` should have snake_case name, e.g. `status`
Warning RustcLint("non_snake_case") from LineCol { line: 416, col: 11 } to LineCol { line: 416, col: 32 }: Function `Is_permission_granted` should have snake_case name, e.g. `is_permission_granted`
Warning RustcLint("non_snake_case") from LineCol { line: 416, col: 40 } to LineCol { line: 416, col: 50 }: Parameter `Permission` should have snake_case name, e.g. `permission`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Fundamentals/Entry.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 177, col: 0 } to LineCol { line: 431, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 4 } to LineCol { line: 43, col: 8 }: Field `Type` should have snake_case name, e.g. `type`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 11 } to LineCol { line: 72, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 15 } to LineCol { line: 72, col: 20 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 34 } to LineCol { line: 72, col: 38 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 48 } to LineCol { line: 72, col: 52 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 72, col: 65 } to LineCol { line: 72, col: 69 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 86, col: 11 } to LineCol { line: 86, col: 20 }: Function `Get_inode` should have snake_case name, e.g. `get_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 11 } to LineCol { line: 95, col: 19 }: Function `Get_name` should have snake_case name, e.g. `get_name`
Warning RustcLint("non_snake_case") from LineCol { line: 104, col: 11 } to LineCol { line: 104, col: 19 }: Function `Get_type` should have snake_case name, e.g. `get_type`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 11 } to LineCol { line: 114, col: 19 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 123, col: 11 } to LineCol { line: 123, col: 20 }: Function `Set_inode` should have snake_case name, e.g. `set_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 123, col: 32 } to LineCol { line: 123, col: 37 }: Parameter `Inode` should have snake_case name, e.g. `inode`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 11 } to LineCol { line: 132, col: 19 }: Function `Set_name` should have snake_case name, e.g. `set_name`
Warning RustcLint("non_snake_case") from LineCol { line: 132, col: 31 } to LineCol { line: 132, col: 35 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 11 } to LineCol { line: 141, col: 19 }: Function `Set_type` should have snake_case name, e.g. `set_type`
Warning RustcLint("non_snake_case") from LineCol { line: 141, col: 31 } to LineCol { line: 141, col: 35 }: Parameter `Type` should have snake_case name, e.g. `r#type`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 11 } to LineCol { line: 145, col: 19 }: Function `Set_size` should have snake_case name, e.g. `set_size`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 31 } to LineCol { line: 145, col: 35 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 164, col: 16 } to LineCol { line: 164, col: 21 }: Parameter `Value` should have snake_case name, e.g. `value`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/File_system.rs
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 7 } to LineCol { line: 161, col: 11 }: Function `Open` should have snake_case name, e.g. `open`
Warning RustcLint("non_snake_case") from LineCol { line: 190, col: 7 } to LineCol { line: 190, col: 12 }: Function `Close` should have snake_case name, e.g. `close`
Warning RustcLint("non_snake_case") from LineCol { line: 190, col: 20 } to LineCol { line: 190, col: 24 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 205, col: 7 } to LineCol { line: 205, col: 16 }: Function `Close_all` should have snake_case name, e.g. `close_all`
Warning RustcLint("non_snake_case") from LineCol { line: 205, col: 24 } to LineCol { line: 205, col: 28 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 226, col: 7 } to LineCol { line: 226, col: 16 }: Function `Duplicate` should have snake_case name, e.g. `duplicate`
Warning RustcLint("non_snake_case") from LineCol { line: 251, col: 7 } to LineCol { line: 251, col: 16 }: Function `Transfert` should have snake_case name, e.g. `transfert`
Warning RustcLint("non_snake_case") from LineCol { line: 278, col: 7 } to LineCol { line: 278, col: 13 }: Function `Remove` should have snake_case name, e.g. `remove`
Warning RustcLint("non_snake_case") from LineCol { line: 278, col: 21 } to LineCol { line: 278, col: 25 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 302, col: 7 } to LineCol { line: 302, col: 11 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 331, col: 7 } to LineCol { line: 331, col: 12 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 358, col: 7 } to LineCol { line: 358, col: 13 }: Function `Rename` should have snake_case name, e.g. `rename`
Warning RustcLint("non_snake_case") from LineCol { line: 358, col: 21 } to LineCol { line: 358, col: 27 }: Parameter `Source` should have snake_case name, e.g. `source`
Warning RustcLint("non_snake_case") from LineCol { line: 358, col: 41 } to LineCol { line: 358, col: 52 }: Parameter `Destination` should have snake_case name, e.g. `destination`
Warning RustcLint("non_snake_case") from LineCol { line: 364, col: 7 } to LineCol { line: 364, col: 19 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 370, col: 7 } to LineCol { line: 370, col: 12 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 370, col: 20 } to LineCol { line: 370, col: 24 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 374, col: 7 } to LineCol { line: 374, col: 23 }: Function `Create_directory` should have snake_case name, e.g. `create_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 382, col: 7 } to LineCol { line: 382, col: 21 }: Function `Open_directory` should have snake_case name, e.g. `open_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 388, col: 7 } to LineCol { line: 388, col: 21 }: Function `Read_directory` should have snake_case name, e.g. `read_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 388, col: 29 } to LineCol { line: 388, col: 33 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 390, col: 7 } to LineCol { line: 390, col: 29 }: Function `Set_position_directory` should have snake_case name, e.g. `set_position_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 396, col: 7 } to LineCol { line: 396, col: 29 }: Function `Get_position_directory` should have snake_case name, e.g. `get_position_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 396, col: 37 } to LineCol { line: 396, col: 41 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 398, col: 7 } to LineCol { line: 398, col: 23 }: Function `Rewind_directory` should have snake_case name, e.g. `rewind_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 398, col: 31 } to LineCol { line: 398, col: 35 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 400, col: 7 } to LineCol { line: 400, col: 22 }: Function `Close_directory` should have snake_case name, e.g. `close_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 400, col: 30 } to LineCol { line: 400, col: 34 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 404, col: 7 } to LineCol { line: 404, col: 19 }: Function `Get_metadata` should have snake_case name, e.g. `get_metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 404, col: 27 } to LineCol { line: 404, col: 31 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 406, col: 7 } to LineCol { line: 406, col: 29 }: Function `Set_metadata_from_path` should have snake_case name, e.g. `set_metadata_from_path`
Warning RustcLint("non_snake_case") from LineCol { line: 406, col: 37 } to LineCol { line: 406, col: 41 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 406, col: 55 } to LineCol { line: 406, col: 63 }: Parameter `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 409, col: 7 } to LineCol { line: 409, col: 29 }: Function `Get_metadata_from_path` should have snake_case name, e.g. `get_metadata_from_path`
Warning RustcLint("non_snake_case") from LineCol { line: 409, col: 37 } to LineCol { line: 409, col: 41 }: Parameter `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 411, col: 7 } to LineCol { line: 411, col: 21 }: Function `Get_statistics` should have snake_case name, e.g. `get_statistics`
Warning RustcLint("non_snake_case") from LineCol { line: 411, col: 29 } to LineCol { line: 411, col: 33 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 413, col: 7 } to LineCol { line: 413, col: 15 }: Function `Get_mode` should have snake_case name, e.g. `get_mode`
Warning RustcLint("non_snake_case") from LineCol { line: 413, col: 23 } to LineCol { line: 413, col: 27 }: Parameter `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 416, col: 7 } to LineCol { line: 416, col: 30 }: Function `Get_new_file_identifier` should have snake_case name, e.g. `get_new_file_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 425, col: 8 } to LineCol { line: 425, col: 11 }: Variable `End` should have snake_case name, e.g. `end`
Warning RustcLint("non_snake_case") from LineCol { line: 439, col: 7 } to LineCol { line: 439, col: 20 }: Function `Get_new_inode` should have snake_case name, e.g. `get_new_inode`
Warning RustcLint("non_snake_case") from LineCol { line: 439, col: 24 } to LineCol { line: 439, col: 27 }: Parameter `Map` should have snake_case name, e.g. `map`
Warning RustcLint("non_snake_case") from LineCol { line: 457, col: 11 } to LineCol { line: 457, col: 24 }: Function `Get_test_path` should have snake_case name, e.g. `get_test_path`
Warning RustcLint("non_snake_case") from LineCol { line: 461, col: 17 } to LineCol { line: 461, col: 39 }: Function `Test_open_close_delete` should have snake_case name, e.g. `test_open_close_delete`
Warning RustcLint("non_snake_case") from LineCol { line: 461, col: 40 } to LineCol { line: 461, col: 51 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 464, col: 12 } to LineCol { line: 464, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 466, col: 12 } to LineCol { line: 466, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 469, col: 12 } to LineCol { line: 469, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 487, col: 17 } to LineCol { line: 487, col: 32 }: Function `Test_read_write` should have snake_case name, e.g. `test_read_write`
Warning RustcLint("non_snake_case") from LineCol { line: 487, col: 33 } to LineCol { line: 487, col: 44 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 490, col: 12 } to LineCol { line: 490, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 492, col: 12 } to LineCol { line: 492, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 495, col: 12 } to LineCol { line: 495, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 507, col: 12 } to LineCol { line: 507, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 518, col: 16 } to LineCol { line: 518, col: 27 }: Variable `Buffer_read` should have snake_case name, e.g. `buffer_read`
Warning RustcLint("non_snake_case") from LineCol { line: 532, col: 17 } to LineCol { line: 532, col: 26 }: Function `Test_move` should have snake_case name, e.g. `test_move`
Warning RustcLint("non_snake_case") from LineCol { line: 532, col: 27 } to LineCol { line: 532, col: 38 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 535, col: 12 } to LineCol { line: 535, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 538, col: 12 } to LineCol { line: 538, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 541, col: 12 } to LineCol { line: 541, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 553, col: 12 } to LineCol { line: 553, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 565, col: 12 } to LineCol { line: 565, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 577, col: 16 } to LineCol { line: 577, col: 27 }: Variable `Buffer_read` should have snake_case name, e.g. `buffer_read`
Warning RustcLint("non_snake_case") from LineCol { line: 591, col: 17 } to LineCol { line: 591, col: 34 }: Function `Test_set_position` should have snake_case name, e.g. `test_set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 591, col: 35 } to LineCol { line: 591, col: 46 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 594, col: 12 } to LineCol { line: 594, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 596, col: 12 } to LineCol { line: 596, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 599, col: 12 } to LineCol { line: 599, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 611, col: 12 } to LineCol { line: 611, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 618, col: 12 } to LineCol { line: 618, col: 20 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 628, col: 16 } to LineCol { line: 628, col: 27 }: Variable `Buffer_read` should have snake_case name, e.g. `buffer_read`
Warning RustcLint("non_snake_case") from LineCol { line: 642, col: 17 } to LineCol { line: 642, col: 27 }: Function `Test_flush` should have snake_case name, e.g. `test_flush`
Warning RustcLint("non_snake_case") from LineCol { line: 642, col: 28 } to LineCol { line: 642, col: 39 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 645, col: 12 } to LineCol { line: 645, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 647, col: 12 } to LineCol { line: 647, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 649, col: 12 } to LineCol { line: 649, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 660, col: 12 } to LineCol { line: 660, col: 18 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 673, col: 17 } to LineCol { line: 673, col: 38 }: Function `Test_set_get_metadata` should have snake_case name, e.g. `test_set_get_metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 673, col: 39 } to LineCol { line: 673, col: 50 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 676, col: 12 } to LineCol { line: 676, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 678, col: 12 } to LineCol { line: 678, col: 17 }: Variable `Flags` should have snake_case name, e.g. `flags`
Warning RustcLint("non_snake_case") from LineCol { line: 680, col: 12 } to LineCol { line: 680, col: 16 }: Variable `File` should have snake_case name, e.g. `file`
Warning RustcLint("non_snake_case") from LineCol { line: 691, col: 12 } to LineCol { line: 691, col: 16 }: Variable `Time` should have snake_case name, e.g. `time`
Warning RustcLint("non_snake_case") from LineCol { line: 693, col: 12 } to LineCol { line: 693, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 705, col: 12 } to LineCol { line: 705, col: 25 }: Variable `Metadata_read` should have snake_case name, e.g. `metadata_read`
Warning RustcLint("non_snake_case") from LineCol { line: 714, col: 17 } to LineCol { line: 714, col: 36 }: Function `Test_read_directory` should have snake_case name, e.g. `test_read_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 714, col: 37 } to LineCol { line: 714, col: 48 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 733, col: 12 } to LineCol { line: 733, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 736, col: 12 } to LineCol { line: 736, col: 29 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 740, col: 12 } to LineCol { line: 740, col: 28 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 754, col: 17 } to LineCol { line: 754, col: 44 }: Function `Test_set_position_directory` should have snake_case name, e.g. `test_set_position_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 754, col: 45 } to LineCol { line: 754, col: 56 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 773, col: 12 } to LineCol { line: 773, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 775, col: 12 } to LineCol { line: 775, col: 29 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 779, col: 12 } to LineCol { line: 779, col: 28 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 783, col: 12 } to LineCol { line: 783, col: 20 }: Variable `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 804, col: 17 } to LineCol { line: 804, col: 38 }: Function `Test_rewind_directory` should have snake_case name, e.g. `test_rewind_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 804, col: 39 } to LineCol { line: 804, col: 50 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 823, col: 12 } to LineCol { line: 823, col: 21 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 825, col: 12 } to LineCol { line: 825, col: 29 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 829, col: 12 } to LineCol { line: 829, col: 28 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 842, col: 12 } to LineCol { line: 842, col: 29 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 846, col: 12 } to LineCol { line: 846, col: 28 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 860, col: 17 } to LineCol { line: 860, col: 45 }: Function `Test_create_remove_directory` should have snake_case name, e.g. `test_create_remove_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 860, col: 46 } to LineCol { line: 860, col: 57 }: Parameter `File_system` should have snake_case name, e.g. `file_system`
Warning RustcLint("non_snake_case") from LineCol { line: 863, col: 12 } to LineCol { line: 863, col: 16 }: Variable `Path` should have snake_case name, e.g. `path`
Warning RustcLint("non_snake_case") from LineCol { line: 875, col: 16 } to LineCol { line: 875, col: 30 }: Variable `Root_directory` should have snake_case name, e.g. `root_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 877, col: 16 } to LineCol { line: 877, col: 33 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 881, col: 16 } to LineCol { line: 881, col: 32 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 885, col: 16 } to LineCol { line: 885, col: 25 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 893, col: 16 } to LineCol { line: 893, col: 25 }: Variable `Directory` should have snake_case name, e.g. `directory`
Warning RustcLint("non_snake_case") from LineCol { line: 895, col: 16 } to LineCol { line: 895, col: 33 }: Variable `Current_directory` should have snake_case name, e.g. `current_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 900, col: 16 } to LineCol { line: 900, col: 32 }: Variable `Parent_directory` should have snake_case name, e.g. `parent_directory`
Warning RustcLint("non_snake_case") from LineCol { line: 449, col: 8 } to LineCol { line: 449, col: 13 }: Module `Tests` should have snake_case name, e.g. `tests`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Error.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 286, col: 0 } to LineCol { line: 581, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 198, col: 11 } to LineCol { line: 198, col: 27 }: Function `Get_discriminant` should have snake_case name, e.g. `get_discriminant`
processing crate: File_system, module: /home/alix_anneraud/Git/Xila/Core/Modules/File_system/src/Device.rs
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 7 } to LineCol { line: 98, col: 11 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 19 } to LineCol { line: 98, col: 25 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 7 } to LineCol { line: 120, col: 12 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 20 } to LineCol { line: 120, col: 26 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 130, col: 7 } to LineCol { line: 130, col: 15 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 7 } to LineCol { line: 150, col: 19 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 150, col: 27 } to LineCol { line: 150, col: 35 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 161, col: 7 } to LineCol { line: 161, col: 12 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 7 } to LineCol { line: 174, col: 12 }: Function `Erase` should have snake_case name, e.g. `erase`
Warning RustcLint("non_snake_case") from LineCol { line: 187, col: 7 } to LineCol { line: 187, col: 21 }: Function `Get_block_size` should have snake_case name, e.g. `get_block_size`
Warning RustcLint("non_snake_case") from LineCol { line: 197, col: 7 } to LineCol { line: 197, col: 20 }: Function `Is_a_terminal` should have snake_case name, e.g. `is_a_terminal`
Warning RustcLint("non_snake_case") from LineCol { line: 210, col: 7 } to LineCol { line: 210, col: 24 }: Function `Is_a_block_device` should have snake_case name, e.g. `is_a_block_device`
Warning RustcLint("non_snake_case") from LineCol { line: 228, col: 7 } to LineCol { line: 228, col: 18 }: Function `Dump_device` should have snake_case name, e.g. `dump_device`
Warning RustcLint("non_snake_case") from LineCol { line: 231, col: 16 } to LineCol { line: 231, col: 22 }: Variable `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 289, col: 11 } to LineCol { line: 289, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 289, col: 15 } to LineCol { line: 289, col: 21 }: Parameter `Device` should have snake_case name, e.g. `device`
Warning RustcLint("non_snake_case") from LineCol { line: 296, col: 11 } to LineCol { line: 296, col: 15 }: Function `Read` should have snake_case name, e.g. `read`
Warning RustcLint("non_snake_case") from LineCol { line: 296, col: 23 } to LineCol { line: 296, col: 29 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 11 } to LineCol { line: 303, col: 16 }: Function `Write` should have snake_case name, e.g. `write`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 24 } to LineCol { line: 303, col: 30 }: Parameter `Buffer` should have snake_case name, e.g. `buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 310, col: 11 } to LineCol { line: 310, col: 19 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 317, col: 11 } to LineCol { line: 317, col: 23 }: Function `Set_position` should have snake_case name, e.g. `set_position`
Warning RustcLint("non_snake_case") from LineCol { line: 317, col: 31 } to LineCol { line: 317, col: 39 }: Parameter `Position` should have snake_case name, e.g. `position`
Warning RustcLint("non_snake_case") from LineCol { line: 324, col: 11 } to LineCol { line: 324, col: 16 }: Function `Flush` should have snake_case name, e.g. `flush`
Warning RustcLint("non_snake_case") from LineCol { line: 331, col: 11 } to LineCol { line: 331, col: 16 }: Function `Erase` should have snake_case name, e.g. `erase`
Warning RustcLint("non_snake_case") from LineCol { line: 338, col: 11 } to LineCol { line: 338, col: 25 }: Function `Get_block_size` should have snake_case name, e.g. `get_block_size`
Warning RustcLint("non_snake_case") from LineCol { line: 345, col: 11 } to LineCol { line: 345, col: 24 }: Function `Is_a_terminal` should have snake_case name, e.g. `is_a_terminal`
Warning RustcLint("non_snake_case") from LineCol { line: 352, col: 11 } to LineCol { line: 352, col: 28 }: Function `Is_a_block_device` should have snake_case name, e.g. `is_a_block_device`
Warning RustcLint("non_snake_case") from LineCol { line: 359, col: 11 } to LineCol { line: 359, col: 22 }: Function `Dump_device` should have snake_case name, e.g. `dump_device`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/lib.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 5, col: 0 } to LineCol { line: 6, col: 17 }: code is inactive due to #[cfg] directives: test and feature = "std" are disabled
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 24 }: Module `Environment_variable` should have snake_case name, e.g. `environment_variable`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 15 }: Module `Join_handle` should have snake_case name, e.g. `join_handle`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 4 } to LineCol { line: 12, col: 10 }: Module `Signal` should have snake_case name, e.g. `signal`
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 4 } to LineCol { line: 13, col: 8 }: Module `Task` should have snake_case name, e.g. `task`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Task.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 0, col: 0 } to LineCol { line: 1, col: 42 }: code is inactive due to #[cfg] directives: target_pointer_width = "32" is disabled
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 42, col: 0 } to LineCol { line: 214, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 17 } to LineCol { line: 19, col: 27 }: Function `Into_inner` should have snake_case name, e.g. `into_inner`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Signal.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 125, col: 0 } to LineCol { line: 163, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 17 } to LineCol { line: 74, col: 33 }: Function `Get_discriminant` should have snake_case name, e.g. `get_discriminant`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 17 } to LineCol { line: 90, col: 21 }: Function `Send` should have snake_case name, e.g. `send`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 33 } to LineCol { line: 90, col: 39 }: Parameter `Signal` should have snake_case name, e.g. `signal`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 17 } to LineCol { line: 94, col: 22 }: Function `Clear` should have snake_case name, e.g. `clear`
Warning RustcLint("non_snake_case") from LineCol { line: 94, col: 34 } to LineCol { line: 94, col: 40 }: Parameter `Signal` should have snake_case name, e.g. `signal`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 17 } to LineCol { line: 98, col: 27 }: Function `Has_signal` should have snake_case name, e.g. `has_signal`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 35 } to LineCol { line: 98, col: 41 }: Parameter `Signal` should have snake_case name, e.g. `signal`
Warning RustcLint("non_snake_case") from LineCol { line: 102, col: 11 } to LineCol { line: 102, col: 15 }: Function `Peek` should have snake_case name, e.g. `peek`
Warning RustcLint("non_snake_case") from LineCol { line: 114, col: 11 } to LineCol { line: 114, col: 14 }: Function `Pop` should have snake_case name, e.g. `pop`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/mod.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 13, col: 0 } to LineCol { line: 14, col: 10 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 13 }: Module `Lifecycle` should have snake_case name, e.g. `lifecycle`
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 12 }: Module `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 14 }: Module `Properties` should have snake_case name, e.g. `properties`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 16 }: Module `Registration` should have snake_case name, e.g. `registration`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 17 }: Module `Relationships` should have snake_case name, e.g. `relationships`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 4 } to LineCol { line: 9, col: 11 }: Module `Signals` should have snake_case name, e.g. `signals`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 4 } to LineCol { line: 10, col: 11 }: Module `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 4 } to LineCol { line: 11, col: 13 }: Module `Utilities` should have snake_case name, e.g. `utilities`
Warning RustcLint("non_snake_case") from LineCol { line: 31, col: 7 } to LineCol { line: 31, col: 17 }: Function `Initialize` should have snake_case name, e.g. `initialize`
Warning RustcLint("non_snake_case") from LineCol { line: 35, col: 7 } to LineCol { line: 35, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 18 } to LineCol { line: 55, col: 21 }: Function `New` should have snake_case name, e.g. `new`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Utilities.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 18 } to LineCol { line: 9, col: 49 }: Function `Find_first_available_identifier` should have snake_case name, e.g. `find_first_available_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 12 } to LineCol { line: 17, col: 15 }: Variable `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 26 } to LineCol { line: 29, col: 29 }: Parameter `Key` should have snake_case name, e.g. `key`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 18 } to LineCol { line: 32, col: 26 }: Function `Get_task` should have snake_case name, e.g. `get_task`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 18 } to LineCol { line: 42, col: 34 }: Function `Get_task_mutable` should have snake_case name, e.g. `get_task_mutable`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Spawner.rs
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 43 } to LineCol { line: 8, col: 50 }: Parameter `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 12 } to LineCol { line: 11, col: 22 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 11 } to LineCol { line: 24, col: 29 }: Function `Unregister_spawner` should have snake_case name, e.g. `unregister_spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 45 } to LineCol { line: 24, col: 55 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 18 } to LineCol { line: 36, col: 37 }: Function `Select_best_spawner` should have snake_case name, e.g. `select_best_spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 38 } to LineCol { line: 36, col: 43 }: Parameter `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 16 } to LineCol { line: 41, col: 19 }: Variable `Map` should have snake_case name, e.g. `map`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 12 } to LineCol { line: 43, col: 22 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 12 } to LineCol { line: 47, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 16 } to LineCol { line: 54, col: 26 }: Variable `Best_index` should have snake_case name, e.g. `best_index`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 13 } to LineCol { line: 57, col: 23 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 25 } to LineCol { line: 57, col: 32 }: Variable `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 17 } to LineCol { line: 67, col: 28 }: Function `Get_spawner` should have snake_case name, e.g. `get_spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 36 } to LineCol { line: 67, col: 40 }: Parameter `Task` should have snake_case name, e.g. `task`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Signals.rs
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 17 } to LineCol { line: 14, col: 27 }: Function `Pop_signal` should have snake_case name, e.g. `pop_signal`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 17 } to LineCol { line: 22, col: 28 }: Function `Peek_signal` should have snake_case name, e.g. `peek_signal`
Warning RustcLint("non_snake_case") from LineCol { line: 26, col: 68 } to LineCol { line: 26, col: 72 }: Parameter `Task` should have snake_case name, e.g. `task`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Relationships.rs
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 17 } to LineCol { line: 8, col: 29 }: Function `Get_children` should have snake_case name, e.g. `get_children`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 25 } to LineCol { line: 18, col: 33 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 17 } to LineCol { line: 24, col: 27 }: Function `Get_parent` should have snake_case name, e.g. `get_parent`
Warning RustcLint("non_snake_case") from LineCol { line: 28, col: 68 } to LineCol { line: 28, col: 72 }: Parameter `Task` should have snake_case name, e.g. `task`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Registration.rs
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 24 } to LineCol { line: 9, col: 32 }: Function `Register` should have snake_case name, e.g. `register`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 13 } to LineCol { line: 17, col: 35 }: Variable `Parent_task_identifier` should have snake_case name, e.g. `parent_task_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 37 } to LineCol { line: 17, col: 65 }: Variable `Parent_environment_variables` should have snake_case name, e.g. `parent_environment_variables`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 67 } to LineCol { line: 17, col: 71 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 73 } to LineCol { line: 17, col: 78 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 25, col: 29 } to LineCol { line: 25, col: 37 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 12 } to LineCol { line: 46, col: 16 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 12 } to LineCol { line: 53, col: 16 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 55, col: 12 } to LineCol { line: 55, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 12 } to LineCol { line: 66, col: 22 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 24 } to LineCol { line: 92, col: 34 }: Function `Unregister` should have snake_case name, e.g. `unregister`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 45 } to LineCol { line: 99, col: 49 }: Variable `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 105, col: 12 } to LineCol { line: 105, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Properties.rs
Warning RustcLint("non_snake_case") from LineCol { line: 19, col: 17 } to LineCol { line: 19, col: 26 }: Function `Set_group` should have snake_case name, e.g. `set_group`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 17 } to LineCol { line: 29, col: 41 }: Function `Set_environment_variable` should have snake_case name, e.g. `set_environment_variable`
Warning RustcLint("non_snake_case") from LineCol { line: 38, col: 16 } to LineCol { line: 38, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 17 } to LineCol { line: 51, col: 42 }: Function `Set_environment_variables` should have snake_case name, e.g. `set_environment_variables`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 48 } to LineCol { line: 59, col: 52 }: Variable `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 54 } to LineCol { line: 59, col: 59 }: Variable `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 17 } to LineCol { line: 67, col: 44 }: Function `Remove_environment_variable` should have snake_case name, e.g. `remove_environment_variable`
Warning RustcLint("non_snake_case") from LineCol { line: 80, col: 17 } to LineCol { line: 80, col: 25 }: Function `Get_user` should have snake_case name, e.g. `get_user`
Warning RustcLint("non_snake_case") from LineCol { line: 84, col: 68 } to LineCol { line: 84, col: 72 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 88, col: 17 } to LineCol { line: 88, col: 26 }: Function `Get_group` should have snake_case name, e.g. `get_group`
Warning RustcLint("non_snake_case") from LineCol { line: 92, col: 68 } to LineCol { line: 92, col: 72 }: Parameter `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 17 } to LineCol { line: 95, col: 41 }: Function `Get_environment_variable` should have snake_case name, e.g. `get_environment_variable`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 17 } to LineCol { line: 109, col: 42 }: Function `Get_environment_variables` should have snake_case name, e.g. `get_environment_variables`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 17 } to LineCol { line: 120, col: 25 }: Function `Get_name` should have snake_case name, e.g. `get_name`
Warning RustcLint("non_snake_case") from LineCol { line: 120, col: 33 } to LineCol { line: 120, col: 48 }: Parameter `Task_identifier` should have snake_case name, e.g. `task_identifier`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Metadata.rs
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 15 } to LineCol { line: 10, col: 34 }: Field `Internal_identifier` should have snake_case name, e.g. `internal_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 15 } to LineCol { line: 12, col: 19 }: Field `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 15 } to LineCol { line: 14, col: 21 }: Field `Parent` should have snake_case name, e.g. `parent`
Warning RustcLint("non_snake_case") from LineCol { line: 16, col: 15 } to LineCol { line: 16, col: 19 }: Field `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 15 } to LineCol { line: 18, col: 20 }: Field `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 15 } to LineCol { line: 20, col: 36 }: Field `Environment_variables` should have snake_case name, e.g. `environment_variables`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 15 } to LineCol { line: 22, col: 22 }: Field `Signals` should have snake_case name, e.g. `signals`
Warning RustcLint("non_snake_case") from LineCol { line: 24, col: 15 } to LineCol { line: 24, col: 33 }: Field `Spawner_identifier` should have snake_case name, e.g. `spawner_identifier`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Manager/Lifecycle.rs
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 13 } to LineCol { line: 18, col: 32 }: Function `Create_and_run_task` should have snake_case name, e.g. `create_and_run_task`
Warning RustcLint("non_snake_case") from LineCol { line: 29, col: 12 } to LineCol { line: 29, col: 22 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 12 } to LineCol { line: 34, col: 16 }: Variable `Pool` should have snake_case name, e.g. `pool`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 13 } to LineCol { line: 37, col: 31 }: Variable `Join_handle_parent` should have snake_case name, e.g. `join_handle_parent`
Warning RustcLint("non_snake_case") from LineCol { line: 37, col: 33 } to LineCol { line: 37, col: 50 }: Variable `Join_handle_child` should have snake_case name, e.g. `join_handle_child`
Warning RustcLint("non_snake_case") from LineCol { line: 39, col: 12 } to LineCol { line: 39, col: 16 }: Variable `Task` should have snake_case name, e.g. `task`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 16 } to LineCol { line: 42, col: 35 }: Variable `Internal_identifier` should have snake_case name, e.g. `internal_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 16 } to LineCol { line: 49, col: 22 }: Variable `Result` should have snake_case name, e.g. `result`
Warning RustcLint("non_snake_case") from LineCol { line: 59, col: 16 } to LineCol { line: 59, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 12 } to LineCol { line: 62, col: 19 }: Variable `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 34 } to LineCol { line: 62, col: 41 }: Variable `Spawner` should have snake_case name, e.g. `spawner`
Warning RustcLint("non_snake_case") from LineCol { line: 77, col: 12 } to LineCol { line: 77, col: 17 }: Variable `Token` should have snake_case name, e.g. `token`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 17 } to LineCol { line: 90, col: 22 }: Function `Spawn` should have snake_case name, e.g. `spawn`
Warning RustcLint("non_snake_case") from LineCol { line: 110, col: 13 } to LineCol { line: 110, col: 36 }: Function `Set_internal_identifier` should have snake_case name, e.g. `set_internal_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 12 } to LineCol { line: 117, col: 20 }: Variable `Metadata` should have snake_case name, e.g. `metadata`
Warning RustcLint("non_snake_case") from LineCol { line: 122, col: 20 } to LineCol { line: 122, col: 34 }: Variable `Old_identifier` should have snake_case name, e.g. `old_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 134, col: 17 } to LineCol { line: 134, col: 22 }: Function `Yield` should have snake_case name, e.g. `yield`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 17 } to LineCol { line: 139, col: 22 }: Function `Sleep` should have snake_case name, e.g. `sleep`
Warning RustcLint("non_snake_case") from LineCol { line: 139, col: 23 } to LineCol { line: 139, col: 31 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 145, col: 17 } to LineCol { line: 145, col: 48 }: Function `Get_current_internal_identifier` should have snake_case name, e.g. `get_current_internal_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 149, col: 16 } to LineCol { line: 149, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 151, col: 16 } to LineCol { line: 151, col: 26 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 17 } to LineCol { line: 158, col: 44 }: Function `Get_current_task_identifier` should have snake_case name, e.g. `get_current_task_identifier`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Join_handle.rs
Warning RustcLint("non_snake_case") from LineCol { line: 12, col: 12 } to LineCol { line: 12, col: 15 }: Variable `Arc` should have snake_case name, e.g. `arc`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 18 } to LineCol { line: 17, col: 24 }: Function `Signal` should have snake_case name, e.g. `signal`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 32 } to LineCol { line: 17, col: 37 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 21, col: 17 } to LineCol { line: 21, col: 21 }: Function `Join` should have snake_case name, e.g. `join`
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Error.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 37, col: 0 } to LineCol { line: 226, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
processing crate: Task, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/src/Environment_variable.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 59, col: 0 } to LineCol { line: 228, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 11 } to LineCol { line: 18, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 15 } to LineCol { line: 18, col: 19 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 27 } to LineCol { line: 18, col: 32 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 34, col: 11 } to LineCol { line: 34, col: 19 }: Function `Get_name` should have snake_case name, e.g. `get_name`
Warning RustcLint("non_snake_case") from LineCol { line: 49, col: 11 } to LineCol { line: 49, col: 20 }: Function `Get_value` should have snake_case name, e.g. `get_value`
Warning RustcLint("non_snake_case") from LineCol { line: 54, col: 11 } to LineCol { line: 54, col: 18 }: Function `Get_raw` should have snake_case name, e.g. `get_raw`
processing crate: Users, module: /home/alix_anneraud/Git/Xila/Core/Modules/Users/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 15 }: Module `Identifiers` should have snake_case name, e.g. `identifiers`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 11 }: Module `Manager` should have snake_case name, e.g. `manager`
processing crate: Users, module: /home/alix_anneraud/Git/Xila/Core/Modules/Users/src/Manager.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 308, col: 0 } to LineCol { line: 535, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 13, col: 7 } to LineCol { line: 13, col: 17 }: Function `Initialize` should have snake_case name, e.g. `initialize`
Warning RustcLint("non_snake_case") from LineCol { line: 17, col: 7 } to LineCol { line: 17, col: 19 }: Function `Get_instance` should have snake_case name, e.g. `get_instance`
Warning RustcLint("non_snake_case") from LineCol { line: 51, col: 16 } to LineCol { line: 51, col: 21 }: Variable `Users` should have snake_case name, e.g. `users`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 17 } to LineCol { line: 66, col: 41 }: Function `Get_new_group_identifier` should have snake_case name, e.g. `get_new_group_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 69, col: 16 } to LineCol { line: 69, col: 26 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 82, col: 17 } to LineCol { line: 82, col: 40 }: Function `Get_new_user_identifier` should have snake_case name, e.g. `get_new_user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 85, col: 16 } to LineCol { line: 85, col: 26 }: Variable `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 98, col: 17 } to LineCol { line: 98, col: 25 }: Function `Add_user` should have snake_case name, e.g. `add_user`
Warning RustcLint("non_snake_case") from LineCol { line: 112, col: 37 } to LineCol { line: 112, col: 41 }: Parameter `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 117, col: 12 } to LineCol { line: 117, col: 16 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 140, col: 17 } to LineCol { line: 140, col: 26 }: Function `Add_group` should have snake_case name, e.g. `add_group`
Warning RustcLint("non_snake_case") from LineCol { line: 154, col: 38 } to LineCol { line: 154, col: 43 }: Parameter `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 158, col: 12 } to LineCol { line: 158, col: 17 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 170, col: 11 } to LineCol { line: 170, col: 18 }: Function `Is_root` should have snake_case name, e.g. `is_root`
Warning RustcLint("non_snake_case") from LineCol { line: 170, col: 19 } to LineCol { line: 170, col: 29 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 174, col: 17 } to LineCol { line: 174, col: 28 }: Function `Is_in_group` should have snake_case name, e.g. `is_in_group`
Warning RustcLint("non_snake_case") from LineCol { line: 188, col: 17 } to LineCol { line: 188, col: 32 }: Function `Get_user_groups` should have snake_case name, e.g. `get_user_groups`
Warning RustcLint("non_snake_case") from LineCol { line: 194, col: 16 } to LineCol { line: 194, col: 27 }: Variable `User_groups` should have snake_case name, e.g. `user_groups`
Warning RustcLint("non_snake_case") from LineCol { line: 200, col: 29 } to LineCol { line: 200, col: 34 }: Variable `Group` should have snake_case name, e.g. `group`
Warning RustcLint("non_snake_case") from LineCol { line: 207, col: 17 } to LineCol { line: 207, col: 29 }: Function `Exists_group` should have snake_case name, e.g. `exists_group`
Warning RustcLint("non_snake_case") from LineCol { line: 207, col: 37 } to LineCol { line: 207, col: 47 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 211, col: 17 } to LineCol { line: 211, col: 28 }: Function `Exists_user` should have snake_case name, e.g. `exists_user`
Warning RustcLint("non_snake_case") from LineCol { line: 211, col: 36 } to LineCol { line: 211, col: 46 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 215, col: 17 } to LineCol { line: 215, col: 29 }: Function `Add_to_group` should have snake_case name, e.g. `add_to_group`
Warning RustcLint("non_snake_case") from LineCol { line: 223, col: 16 } to LineCol { line: 223, col: 21 }: Variable `Inner` should have snake_case name, e.g. `inner`
Warning RustcLint("non_snake_case") from LineCol { line: 236, col: 17 } to LineCol { line: 236, col: 31 }: Function `Get_group_name` should have snake_case name, e.g. `get_group_name`
Warning RustcLint("non_snake_case") from LineCol { line: 236, col: 39 } to LineCol { line: 236, col: 49 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 248, col: 17 } to LineCol { line: 248, col: 36 }: Function `Get_user_identifier` should have snake_case name, e.g. `get_user_identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 248, col: 44 } to LineCol { line: 248, col: 48 }: Parameter `Name` should have snake_case name, e.g. `name`
Warning RustcLint("non_snake_case") from LineCol { line: 255, col: 23 } to LineCol { line: 255, col: 27 }: Variable `User` should have snake_case name, e.g. `user`
Warning RustcLint("non_snake_case") from LineCol { line: 260, col: 17 } to LineCol { line: 260, col: 32 }: Function `Get_group_users` should have snake_case name, e.g. `get_group_users`
Warning RustcLint("non_snake_case") from LineCol { line: 277, col: 17 } to LineCol { line: 277, col: 30 }: Function `Get_user_name` should have snake_case name, e.g. `get_user_name`
Warning RustcLint("non_snake_case") from LineCol { line: 277, col: 38 } to LineCol { line: 277, col: 48 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 289, col: 17 } to LineCol { line: 289, col: 39 }: Function `Get_user_primary_group` should have snake_case name, e.g. `get_user_primary_group`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 11 } to LineCol { line: 303, col: 28 }: Function `Check_credentials` should have snake_case name, e.g. `check_credentials`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 36 } to LineCol { line: 303, col: 46 }: Parameter `_User_name` should have snake_case name, e.g. `_user_name`
Warning RustcLint("non_snake_case") from LineCol { line: 303, col: 54 } to LineCol { line: 303, col: 63 }: Parameter `_Password` should have snake_case name, e.g. `_password`
processing crate: Users, module: /home/alix_anneraud/Git/Xila/Core/Modules/Users/src/Identifiers.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 94, col: 0 } to LineCol { line: 320, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 17 } to LineCol { line: 14, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 21 } to LineCol { line: 14, col: 31 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 17 } to LineCol { line: 18, col: 23 }: Function `As_u16` should have snake_case name, e.g. `as_u16`
Warning RustcLint("non_snake_case") from LineCol { line: 32, col: 17 } to LineCol { line: 32, col: 22 }: Parameter `Other` should have snake_case name, e.g. `other`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 17 } to LineCol { line: 60, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 60, col: 21 } to LineCol { line: 60, col: 31 }: Parameter `Identifier` should have snake_case name, e.g. `identifier`
Warning RustcLint("non_snake_case") from LineCol { line: 64, col: 17 } to LineCol { line: 64, col: 23 }: Function `As_u16` should have snake_case name, e.g. `as_u16`
Warning RustcLint("non_snake_case") from LineCol { line: 89, col: 17 } to LineCol { line: 89, col: 22 }: Parameter `Other` should have snake_case name, e.g. `other`
processing crate: Users, module: /home/alix_anneraud/Git/Xila/Core/Modules/Users/src/Error.rs
processing crate: Task_macros, module: /home/alix_anneraud/Git/Xila/Core/Modules/Task/Task_macros/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 3 } to LineCol { line: 7, col: 20 }: Function `Default_task_path` should have snake_case name, e.g. `default_task_path`
Warning RustcLint("non_snake_case") from LineCol { line: 11, col: 3 } to LineCol { line: 11, col: 19 }: Function `Default_executor` should have snake_case name, e.g. `default_executor`
processing crate: Synchronization, module: /home/alix_anneraud/Git/Xila/Core/Modules/Synchronization/src/lib.rs
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/lib.rs
Warning RustcLint("non_snake_case") from LineCol { line: 2, col: 4 } to LineCol { line: 2, col: 12 }: Module `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 3, col: 4 } to LineCol { line: 3, col: 9 }: Module `Error` should have snake_case name, e.g. `error`
Warning RustcLint("non_snake_case") from LineCol { line: 4, col: 4 } to LineCol { line: 4, col: 17 }: Module `Mutable_slice` should have snake_case name, e.g. `mutable_slice`
Warning RustcLint("non_snake_case") from LineCol { line: 5, col: 4 } to LineCol { line: 5, col: 18 }: Module `Mutable_string` should have snake_case name, e.g. `mutable_string`
Warning RustcLint("non_snake_case") from LineCol { line: 6, col: 4 } to LineCol { line: 6, col: 15 }: Module `Ring_buffer` should have snake_case name, e.g. `ring_buffer`
Warning RustcLint("non_snake_case") from LineCol { line: 7, col: 4 } to LineCol { line: 7, col: 8 }: Module `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 8, col: 4 } to LineCol { line: 8, col: 8 }: Module `Time` should have snake_case name, e.g. `time`
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Time.rs
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 7 } to LineCol { line: 0, col: 25 }: Function `Unix_to_human_time` should have snake_case name, e.g. `unix_to_human_time`
Warning RustcLint("non_snake_case") from LineCol { line: 0, col: 26 } to LineCol { line: 0, col: 40 }: Parameter `Unix_timestamp` should have snake_case name, e.g. `unix_timestamp`
Warning RustcLint("non_snake_case") from LineCol { line: 9, col: 12 } to LineCol { line: 9, col: 16 }: Variable `Year` should have snake_case name, e.g. `year`
Warning RustcLint("non_snake_case") from LineCol { line: 36, col: 12 } to LineCol { line: 36, col: 17 }: Variable `Month` should have snake_case name, e.g. `month`
Warning RustcLint("non_snake_case") from LineCol { line: 43, col: 8 } to LineCol { line: 43, col: 11 }: Variable `Day` should have snake_case name, e.g. `day`
Warning RustcLint("non_snake_case") from LineCol { line: 46, col: 8 } to LineCol { line: 46, col: 12 }: Variable `Hour` should have snake_case name, e.g. `hour`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 7 } to LineCol { line: 61, col: 19 }: Function `Is_leap_year` should have snake_case name, e.g. `is_leap_year`
Warning RustcLint("non_snake_case") from LineCol { line: 61, col: 20 } to LineCol { line: 61, col: 24 }: Parameter `Year` should have snake_case name, e.g. `year`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 7 } to LineCol { line: 65, col: 20 }: Function `Days_in_month` should have snake_case name, e.g. `days_in_month`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 21 } to LineCol { line: 65, col: 25 }: Parameter `Year` should have snake_case name, e.g. `year`
Warning RustcLint("non_snake_case") from LineCol { line: 65, col: 32 } to LineCol { line: 65, col: 37 }: Parameter `Month` should have snake_case name, e.g. `month`
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Size.rs
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Ring_buffer.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 83, col: 0 } to LineCol { line: 204, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 11 } to LineCol { line: 10, col: 14 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 10, col: 15 } to LineCol { line: 10, col: 23 }: Parameter `Capacity` should have snake_case name, e.g. `capacity`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 11 } to LineCol { line: 20, col: 15 }: Function `Push` should have snake_case name, e.g. `push`
Warning RustcLint("non_snake_case") from LineCol { line: 20, col: 27 } to LineCol { line: 20, col: 31 }: Parameter `Item` should have snake_case name, e.g. `item`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 14 }: Function `Pop` should have snake_case name, e.g. `pop`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 12 } to LineCol { line: 45, col: 16 }: Variable `Item` should have snake_case name, e.g. `item`
Warning RustcLint("non_snake_case") from LineCol { line: 52, col: 11 } to LineCol { line: 52, col: 19 }: Function `Is_empty` should have snake_case name, e.g. `is_empty`
Warning RustcLint("non_snake_case") from LineCol { line: 57, col: 11 } to LineCol { line: 57, col: 18 }: Function `Is_full` should have snake_case name, e.g. `is_full`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 11 } to LineCol { line: 62, col: 23 }: Function `Get_capacity` should have snake_case name, e.g. `get_capacity`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 11 } to LineCol { line: 67, col: 25 }: Function `Get_used_space` should have snake_case name, e.g. `get_used_space`
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 11 } to LineCol { line: 78, col: 25 }: Function `Get_free_space` should have snake_case name, e.g. `get_free_space`
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Mutable_string.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 157, col: 0 } to LineCol { line: 238, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 4 } to LineCol { line: 18, col: 8 }: Field `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 18 } to LineCol { line: 30, col: 32 }: Function `From_unchecked` should have snake_case name, e.g. `from_unchecked`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 33 } to LineCol { line: 30, col: 39 }: Parameter `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 58 } to LineCol { line: 30, col: 64 }: Parameter `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 30, col: 78 } to LineCol { line: 30, col: 82 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 11 } to LineCol { line: 40, col: 15 }: Function `From` should have snake_case name, e.g. `from`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 16 } to LineCol { line: 40, col: 22 }: Parameter `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 41 } to LineCol { line: 40, col: 47 }: Parameter `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 40, col: 61 } to LineCol { line: 40, col: 65 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 45, col: 12 } to LineCol { line: 45, col: 25 }: Variable `Casted_length` should have snake_case name, e.g. `casted_length`
Warning RustcLint("non_snake_case") from LineCol { line: 47, col: 12 } to LineCol { line: 47, col: 16 }: Variable `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 11 } to LineCol { line: 63, col: 16 }: Function `Equal` should have snake_case name, e.g. `equal`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 24 } to LineCol { line: 63, col: 30 }: Parameter `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 11 } to LineCol { line: 67, col: 22 }: Function `Concatenate` should have snake_case name, e.g. `concatenate`
Warning RustcLint("non_snake_case") from LineCol { line: 67, col: 34 } to LineCol { line: 67, col: 40 }: Parameter `String` should have snake_case name, e.g. `string`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 12 } to LineCol { line: 70, col: 18 }: Variable `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 76, col: 12 } to LineCol { line: 76, col: 23 }: Variable `Self_length` should have snake_case name, e.g. `self_length`
Warning RustcLint("non_snake_case") from LineCol { line: 87, col: 11 } to LineCol { line: 87, col: 16 }: Function `Clear` should have snake_case name, e.g. `clear`
Warning RustcLint("non_snake_case") from LineCol { line: 91, col: 7 } to LineCol { line: 91, col: 17 }: Function `Set_length` should have snake_case name, e.g. `set_length`
Warning RustcLint("non_snake_case") from LineCol { line: 91, col: 29 } to LineCol { line: 91, col: 35 }: Parameter `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 95, col: 11 } to LineCol { line: 95, col: 19 }: Function `Get_data` should have snake_case name, e.g. `get_data`
Warning RustcLint("non_snake_case") from LineCol { line: 99, col: 11 } to LineCol { line: 99, col: 21 }: Function `Get_length` should have snake_case name, e.g. `get_length`
Warning RustcLint("non_snake_case") from LineCol { line: 103, col: 11 } to LineCol { line: 103, col: 19 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 107, col: 11 } to LineCol { line: 107, col: 25 }: Function `Get_characters` should have snake_case name, e.g. `get_characters`
Warning RustcLint("non_snake_case") from LineCol { line: 111, col: 11 } to LineCol { line: 111, col: 33 }: Function `Get_characters_indices` should have snake_case name, e.g. `get_characters_indices`
Warning RustcLint("non_snake_case") from LineCol { line: 115, col: 11 } to LineCol { line: 115, col: 20 }: Function `Get_lines` should have snake_case name, e.g. `get_lines`
Warning RustcLint("non_snake_case") from LineCol { line: 119, col: 11 } to LineCol { line: 119, col: 17 }: Function `As_str` should have snake_case name, e.g. `as_str`
Warning RustcLint("non_snake_case") from LineCol { line: 138, col: 29 } to LineCol { line: 138, col: 34 }: Parameter `Other` should have snake_case name, e.g. `other`
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Mutable_slice.rs
WeakWarning Ra("inactive-code", WeakWarning) from LineCol { line: 89, col: 0 } to LineCol { line: 122, col: 1 }: code is inactive due to #[cfg] directives: test is disabled
Warning RustcLint("non_snake_case") from LineCol { line: 14, col: 4 } to LineCol { line: 14, col: 8 }: Field `Data` should have snake_case name, e.g. `data`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 11 } to LineCol { line: 22, col: 15 }: Function `From` should have snake_case name, e.g. `from`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 16 } to LineCol { line: 22, col: 21 }: Parameter `Slice` should have snake_case name, e.g. `slice`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 39 } to LineCol { line: 22, col: 45 }: Parameter `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 22, col: 59 } to LineCol { line: 22, col: 63 }: Parameter `Size` should have snake_case name, e.g. `size`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 11 } to LineCol { line: 41, col: 15 }: Function `Push` should have snake_case name, e.g. `push`
Warning RustcLint("non_snake_case") from LineCol { line: 41, col: 27 } to LineCol { line: 41, col: 32 }: Parameter `Value` should have snake_case name, e.g. `value`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 7 } to LineCol { line: 53, col: 17 }: Function `Set_length` should have snake_case name, e.g. `set_length`
Warning RustcLint("non_snake_case") from LineCol { line: 53, col: 29 } to LineCol { line: 53, col: 35 }: Parameter `Length` should have snake_case name, e.g. `length`
Warning RustcLint("non_snake_case") from LineCol { line: 62, col: 11 } to LineCol { line: 62, col: 16 }: Function `Clear` should have snake_case name, e.g. `clear`
Warning RustcLint("non_snake_case") from LineCol { line: 66, col: 11 } to LineCol { line: 66, col: 19 }: Function `Is_empty` should have snake_case name, e.g. `is_empty`
Warning RustcLint("non_snake_case") from LineCol { line: 70, col: 11 } to LineCol { line: 70, col: 21 }: Function `Get_length` should have snake_case name, e.g. `get_length`
Warning RustcLint("non_snake_case") from LineCol { line: 74, col: 11 } to LineCol { line: 74, col: 19 }: Function `Get_size` should have snake_case name, e.g. `get_size`
Warning RustcLint("non_snake_case") from LineCol { line: 78, col: 11 } to LineCol { line: 78, col: 19 }: Function `As_slice` should have snake_case name, e.g. `as_slice`
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Error.rs
processing crate: Shared, module: /home/alix_anneraud/Git/Xila/Core/Modules/Shared/src/Duration.rs
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 17 } to LineCol { line: 18, col: 20 }: Function `New` should have snake_case name, e.g. `new`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 21 } to LineCol { line: 18, col: 28 }: Parameter `Seconds` should have snake_case name, e.g. `seconds`
Warning RustcLint("non_snake_case") from LineCol { line: 18, col: 35 } to LineCol { line: 18, col: 46 }: Parameter `Nanoseconds` should have snake_case name, e.g. `nanoseconds`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 11 } to LineCol { line: 42, col: 29 }: Function `Get_duration_since` should have snake_case name, e.g. `get_duration_since`
Warning RustcLint("non_snake_case") from LineCol { line: 42, col: 37 } to LineCol { line: 42, col: 44 }: Parameter `Earlier` should have snake_case name, e.g. `earlier`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 11 } to LineCol { line: 63, col: 37 }: Function `Get_duration_since_checked` should have snake_case name, e.g. `get_duration_since_checked`
Warning RustcLint("non_snake_case") from LineCol { line: 63, col: 45 } to LineCol { line: 63, col: 52 }: Parameter `Earlier` should have snake_case name, e.g. `earlier`
Warning RustcLint("non_snake_case") from LineCol { line: 90, col: 11 } to LineCol { line: 90, col: 40 }: Function `Get_duration_since_saturating` should have snake_case name, e.g. `get_duration_since_saturating`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 11 } to LineCol { line: 100, col: 22 }: Function `Add_checked` should have snake_case name, e.g. `add_checked`
Warning RustcLint("non_snake_case") from LineCol { line: 100, col: 30 } to LineCol { line: 100, col: 38 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 11 } to LineCol { line: 109, col: 28 }: Function `Substract_checked` should have snake_case name, e.g. `substract_checked`
Warning RustcLint("non_snake_case") from LineCol { line: 109, col: 36 } to LineCol { line: 109, col: 44 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 11 } to LineCol { line: 118, col: 25 }: Function `Add_saturating` should have snake_case name, e.g. `add_saturating`
Warning RustcLint("non_snake_case") from LineCol { line: 118, col: 33 } to LineCol { line: 118, col: 41 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 128, col: 11 } to LineCol { line: 128, col: 31 }: Function `Substract_saturating` should have snake_case name, e.g. `substract_saturating`
Warning RustcLint("non_snake_case") from LineCol { line: 148, col: 11 } to LineCol { line: 148, col: 21 }: Function `As_seconds` should have snake_case name, e.g. `as_seconds`
Warning RustcLint("non_snake_case") from LineCol { line: 162, col: 11 } to LineCol { line: 162, col: 26 }: Function `As_milliseconds` should have snake_case name, e.g. `as_milliseconds`
Warning RustcLint("non_snake_case") from LineCol { line: 177, col: 11 } to LineCol { line: 177, col: 26 }: Function `As_microseconds` should have snake_case name, e.g. `as_microseconds`
Warning RustcLint("non_snake_case") from LineCol { line: 191, col: 11 } to LineCol { line: 191, col: 25 }: Function `As_nanoseconds` should have snake_case name, e.g. `as_nanoseconds`
Warning RustcLint("non_snake_case") from LineCol { line: 199, col: 17 } to LineCol { line: 199, col: 25 }: Parameter `Duration` should have snake_case name, e.g. `duration`
Warning RustcLint("non_snake_case") from LineCol { line: 216, col: 17 } to LineCol { line: 216, col: 25 }: Parameter `Duration` should have snake_case name, e.g. `duration`
processing crate: Futures, module: /home/alix_anneraud/Git/Xila/Core/Modules/Futures/src/lib.rs

diagnostic scan complete
